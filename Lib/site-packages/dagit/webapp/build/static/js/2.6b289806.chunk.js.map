{"version":3,"sources":["../../core/src/ui/Loading.tsx","../../core/src/ui/Page.tsx","../../core/src/hooks/useDocumentTitle.tsx","../../core/src/pipelines/PipelineReference.tsx","../../core/src/pipelines/SidebarComponents.tsx","../../core/src/ui/Alert.tsx","../../core/src/hooks/useQueryPersistedState.tsx","../../core/src/runs/RunMetadataProvider.tsx","../../core/src/ui/SplitPanelContainer.tsx","../../core/src/instigation/InstigationUtils.tsx","../../core/src/gantt/Constants.ts","../../core/src/app/GraphQueryImpl.ts","../../core/src/instigation/InstigationTick.tsx","../../core/src/runs/useCursorPaginatedQuery.tsx","../../core/src/ui/TokenizingField.tsx","../../core/src/graph/SVGComponents.tsx","../../core/src/pipelines/Description.tsx","../../core/src/app/QueryCountdown.tsx","../../core/src/ui/GraphQueryInput.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/schedules/ScheduleUtils.tsx","../../core/src/schedules/SchedulerInfo.tsx","../../core/src/pipelines/useJobTitle.tsx","../../core/src/runs/DeletionDialog.tsx","../../core/src/runs/RunActionsMenu.tsx","../../core/src/runs/RunTable.tsx","../../core/src/gantt/useViewport.tsx","../../core/src/partitions/RunMatrixUtils.tsx","../../core/src/gantt/DynamicStepSupport.tsx","../../core/src/gantt/GanttChartLayout.ts","../../core/src/ui/CursorControls.tsx","../../core/src/app/titleOfIO.ts","../../core/src/graph/highlighting.ts","../../core/src/typeexplorer/ConfigTypeSchema.tsx","../../core/src/typeexplorer/TypeWithTooltip.tsx","../../core/src/instigation/Unloadable.tsx","../../core/src/gantt/GanttChartModeControl.tsx","../../core/src/gantt/GanttChartTimescale.tsx","../../core/src/gantt/RunGroupPanel.tsx","../../core/src/gantt/GanttChart.tsx","../../core/src/gantt/GanttStatusPanel.tsx","../../core/src/gantt/VizComponents.tsx","../../core/src/gantt/ZoomSlider.tsx","../../core/src/gantt/useGanttChartMode.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/ui/Countdown.tsx","../../core/src/ui/RefreshableCountdown.tsx","../../core/src/execute/showLaunchError.tsx","../../core/src/workspace/useRepositoryForRun.ts","../../core/src/runs/RunFragments.tsx","../../core/src/runs/LogsRowComponents.tsx","../../core/src/runs/LogLevel.ts","../../core/src/execute/LaunchButton.tsx","../../core/src/runs/RunsFilter.tsx","../../core/src/pipelines/PipelineExplorerRoot.tsx","../../core/src/graph/PipelineColorScale.ts","../../core/src/graph/SVGViewport.tsx","../../core/src/schedules/humanCronString.ts","../../core/src/sensors/SensorFragment.tsx","../../core/src/sensors/SensorInfo.tsx","../../core/src/graph/ExternalConnectionNode.tsx","../../core/src/graph/MappingLine.tsx","../../core/src/graph/ParentSolidNode.tsx","../../core/src/graph/SolidLinks.tsx","../../core/src/graph/PipelineGraph.tsx","../../core/src/workers/dagre_layout.worker.ts","../../core/src/graph/layout.ts","../../core/src/graph/getFullSolidLayout.ts","../../core/src/assets/AssetDetails.tsx","../../core/src/assets/AssetLineageElements.tsx","../../core/src/assets/queries.tsx","../../core/src/gantt/toGraphQueryItems.tsx","../../core/src/runs/LogsScrollingTableHeader.tsx","../../core/src/app/browser.tsx","../../core/src/schedules/SchedulesNextTicks.tsx","../../core/src/pipelines/CompositeSupport.ts","../../core/src/pipelines/NonIdealPipelineQueryResult.tsx","../../core/src/graph/SolidIOBox.tsx","../../core/src/pipelines/PipelineExplorerJobContext.tsx","../../core/src/pipelines/SidebarModeSection.tsx","../../core/src/solids/SolidTypeSignature.tsx","../../core/src/pipelines/SidebarSolidHelpers.tsx","../../core/src/pipelines/PipelineRunsRoot.tsx","../../core/src/ui/MainContent.tsx","../../core/src/schedules/SchedulePartitionStatus.tsx","../../core/src/sensors/SensorsTable.tsx","../../core/src/sensors/SensorDetails.tsx","../../core/src/graph/PipelineGraphContainer.tsx","../../core/src/pipelines/PipelineJumpComponents.tsx","../../core/src/typeexplorer/TypeExplorer.tsx","../../core/src/typeexplorer/TypeExplorerContainer.tsx","../../core/src/typeexplorer/TypeList.tsx","../../core/src/typeexplorer/TypeListContainer.tsx","../../core/src/pipelines/SidebarPipelineInfo.tsx","../../core/src/pipelines/SidebarSolidInvocation.tsx","../../core/src/pipelines/SidebarSolidContainer.tsx","../../core/src/pipelines/SidebarTabbedContainer.tsx","../../core/src/pipelines/PipelineExplorer.tsx","../../core/src/assets/AssetMaterializationTable.tsx","../../core/src/assets/Sparkline.tsx","../../core/src/assets/AssetMaterializationMatrix.tsx","../../core/src/assets/AssetValueGraph.tsx","../../core/src/assets/useMaterializationBuckets.tsx","../../core/src/assets/AssetMaterializations.tsx","../../core/src/plugins/generic.tsx","../../core/src/plugins/ipynb.tsx","../../core/src/plugins/sql.tsx","../../core/src/plugins/index.ts","../../core/src/pipelines/SidebarSolidDefinition.tsx","../../core/src/runs/CellTruncationProvider.tsx","../../core/src/runs/LogsRowStructuredContent.tsx","../../core/src/runs/LogsRow.tsx","../../core/src/runs/LogsScrollingTable.tsx","../../core/src/graph/SolidConfigPort.tsx","../../core/src/graph/SolidTags.tsx","../../core/src/graph/SolidNode.tsx","../../core/src/schedules/ReconcileButton.tsx","../../core/src/schedules/SchedulesTable.tsx","../../core/src/runs/NavitationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx"],"names":["Loading","props","children","purpose","allowStaleData","queryResult","error","data","loading","React","blankLoading","setBlankLoading","isLoading","Object","keys","length","timer","setTimeout","clearTimeout","networkError","console","padding","flex","justifyContent","icon","IconNames","ERROR","title","LoadingSpinner","isPage","grow","undefined","alignItems","style","height","defaultProps","Page","styled","div","useDocumentTitle","currentTitle","document","PipelineReference","pipelineName","pipelineHrefContext","mode","snapshotId","showIcon","flagPipelineModeTuples","useFeatureFlags","modeLabel","color","Colors","GRAY3","pipeline","to","workspacePipelinePathGuessRepo","workspacePipelinePath","name","location","direction","margin","right","ColorsWIP","Gray300","pipelineMode","SidebarSection","collapsedByDefault","storageKey","stored","window","localStorage","getItem","open","setOpen","onToggle","current","setItem","CollapsingHeaderBar","onClick","DisclosureIcon","isOpen","IconWIP","SidebarTitle","h3","FontFamily","monospace","SectionHeader","h4","SectionSmallHeader","SidebarSubhead","SectionItemContainer","LIGHT_GRAY2","LIGHT_GRAY5","LIGHT_GRAY4","LIGHT_GRAY3","GRAY1","Alert","intent","description","backgroundColor","Yellow50","borderColor","Yellow500","iconColor","Red50","Red500","Green50","Green500","Gray50","Blue500","background","horizontal","vertical","boxShadow","spacing","AlertTitle","AlertDescription","DARK_GRAY3","currentQueryString","useQueryPersistedState","options","queryKey","defaults","encode","decode","raw","qs","inferTypeOfQueryParam","useLocation","history","useHistory","querystring","parse","search","qsWithDefaults","qsDecoded","result","key","inferTypeOfQueryParams","valueRef","useRef","onChangeRef","useCallback","updated","next","entries","value","replace","pathname","stringify","isEqual","q","IStepState","BOX_EXIT_STATES","RETRY_REQUESTED","SUCCEEDED","FAILED","EMPTY_RUN_METADATA","firstLogAt","mostRecentLogAt","globalMarkers","steps","extractLogCaptureStepsFromLegacySteps","stepKeys","logCaptureSteps","forEach","stepKey","logKey","RunMetadataProvider","logs","metadata","upsertMarker","set","marker","find","f","end","unshift","upsertState","step","time","state","transitions","push","attempts","log","timestamp","Number","parseInt","Math","min","max","__typename","startedPipelineAt","exitedAt","values","RUNNING","UNKNOWN","markerStart","start","markerEnd","pid","String","PREPARING","markers","SKIPPED","operationResult","op","sort","a","b","t","includes","exitState","extractMetadataFromLogs","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","gql","SplitPanelContainer","onChangeSize","size","setState","identifier","isNaN","firstInitialPercent","resizing","this","firstMinSize","first","second","axis","firstPaneStyles","flexShrink","minWidth","width","minHeight","Container","id","className","PanelDivider","onSetResizing","onMove","ref","onMouseDown","e","preventDefault","onMouseMove","event","parent","closest","parentRect","getBoundingClientRect","firstPanelPercent","clientX","left","clientY","top","addEventListener","onMouseUp","removeEventListener","Wrapper","DividerWrapper","HitArea","DividerHitArea","FirstOrSecondPanelToggle","container","small","SecondPanelToggle","prevSize","setPrevSize","initialIsOpen","active","WHITE","p","GRAY5","InstigatedRunStatus","instigationState","runs","GRAY4","run","status","runId","target","rel","titleForRun","INSTIGATION_STATE_FRAGMENT","REPOSITORY_ORIGIN_FRAGMENT","PYTHON_ERROR_FRAGMENT","TICK_TAG_FRAGMENT","StatusTable","table","GRAY2","GanttChartMode","MIN_SCALE","MAX_SCALE","LEFT_INSET","FLAT_INSET_FROM_PARENT","BOX_HEIGHT","BOX_MARGIN_Y","BOX_SPACING_X","BOX_WIDTH","BOX_DOT_WIDTH_CUTOFF","BOX_SHOW_LABEL_WIDTH_CUTOFF","BOX_DOT_SIZE","BOX_DOT_MARGIN_Y","LINE_SIZE","CSS_DURATION","DEFAULT_OPTIONS","WATERFALL","hideWaiting","hideTimedMode","zoom","hideUnselectedSteps","GraphTraverser","items","itemNameMap","item","depth","results","traverse","callback","inputs","input","dependsOn","d","itemNamed","solid","outputs","output","dependedBy","expansionDepthForClause","clause","MAX_SAFE_INTEGER","filterByQuery","query","all","focus","traverser","Set","clauses","split","parts","exec","trim","parentsClause","itemName","descendentsClause","itemsMatching","filter","s","upDepth","downDepth","add","fetchUpstream","other","fetchDownstream","Array","from","TickTag","tick","instigationType","InstigationTickStatus","STARTED","minimal","Intent","NONE","SUCCESS","runIds","PRIMARY","interactive","underline","onClose","bottom","RunList","Classes","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","skipReason","position","content","targetTagName","WARNING","FAILURE","LinkButton","showCustomAlert","InstigationType","SCHEDULE","body","DANGER","assertUnreachable","useQuery","LAUNCHED_RUN_LIST_QUERY","variables","pipelineRunsOrError","message","onSetFilter","FailedRunList","originRunIds","border","side","LIGHT_GRAY1","Gray500","button","RUN_TABLE_RUN_FRAGMENT","POLL_INTERVAL","useCursorPaginatedQuery","cursorStack","setCursorStack","cursor","setCursor","queryVars","limit","pageSize","fetchPolicy","pollInterval","partialRefetch","notifyOnNetworkStatusChange","resultArray","getResultArray","paginationProps","hasPrevCursor","hasNextCursor","popCursor","nextStack","pop","advanceCursor","nextCursor","nextCursorForResult","reset","findProviderByToken","token","providers","toLowerCase","tokenizedValuesFromString","str","map","tokenizedValueFromString","slice","join","stringFromValue","v","TokenizingField","suggestionProviders","suggestionProvidersFilter","externalValues","maxValues","onChange","onChangeBeforeCommit","onFocus","placeholder","useState","setActive","typed","setTyped","useMemo","typedValue","atMaxValues","filteredSuggestionProviders","lastPart","suggestions","suggestionsArr","suggestionMatchesTypedText","text","some","c","availableSuggestionsForProvider","provider","final","localeCompare","useEffect","pos","findIndex","nextIdx","idx","nextText","onConfirmSuggestion","suggestion","onConfirmText","endsWith","menuRef","createRef","el","querySelector","HTMLElement","scrollIntoView","block","maxHeight","overflowY","StyledMenu","StyledMenuItem","data-idx","shouldDismissPopover","stopPropagation","StyledTagInput","inputValue","onRemove","_","splice","onInputChange","currentTarget","tokenized","inputProps","onBlur","onAdd","onKeyDown","shift","ArrowDown","ArrowUp","picked","Error","tagProps","rightElement","alignSelf","TagInput","Menu","MenuItem","PX_TO_UNITS","SVGEllipseInRect","x","y","rest","rx","ry","cx","cy","clipToLength","len","substr","SVGMonospaceText","allowTwoLines","lineChars","round","line1","line2","line1Y","fontFamily","fontSize","pointerEvents","dominantBaseline","SVGFlowLayoutRect","maxWidth","layout","computeLayout","finalWidth","grouped","childLayouts","l","compressionPriority","priorities","i","passLayouts","passWidth","reduce","sum","cl","ratio","childLayout","acc","arranged","clone","flattened","appendChildren","arr","reactChildrenToArray","type","intrinsicSizeForProps","dim","SVGFlowLayoutFiller","SVGLabeledRect","minified","label","fill","rect","stroke","strokeWidth","removeLeadingSpaces","leadingSpaces","lines","every","Description","_container","hasMore","expanded","updateHandleState","clientHeight","onDoubleClick","sel","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","Mask","ShowMoreHandle","overflowX","QueryCountdown","networkStatus","refetch","countdownStatus","NetworkStatus","ready","timeRemaining","useCountdown","duration","countdownRefreshing","refreshing","seconds","floor","onRefresh","placeholderTextForItems","base","seed","ranked","incount","o","outcount","example","GraphQueryInput","focused","setFocused","pendingValue","setPendingValue","lastClause","menu","prefix","lastElementName","suffix","available","isDynamicStep","dynamicKeyWithoutIndex","uniq","n","startsWith","preceding","index","GraphQueryInputField","disabled","leftIcon","autoFocus","onKeyUp","presets","marginLeft","LAYERS","rightIcon","CROSS","preset","CARET_UP","prevProps","nextProps","InputGroup","GOLD3","initializeState","selectedRuns","mustForce","frozenRuns","termination","completed","errors","terminationDialogReducer","prevState","action","checked","TerminationDialog","onComplete","dispatch","count","useMutation","TERMINATE_MUTATION","terminate","policy","TerminatePipelinePolicy","MARK_AS_CANCELED_IMMEDIATELY","SAFE_TERMINATE","mutate","runList","ii","terminatePolicy","terminatePipelineExecution","onToggleForce","showCheckbox","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","isCloseButtonShown","DIALOG_BODY","labelElement","display","animate","progressContent","errorCount","successCount","completionContent","buttons","SCHEDULE_FRAGMENT","REPOSITORY_SCHEDULES_FRAGMENT","REPOSITORY_INFO_FRAGMENT","SCHEDULES_ROOT_QUERY","SCHEDULER_FRAGMENT","INSTANCE_HEALTH_FRAGMENT","SchedulerTimezoneNote","schedulerOrError","schedulerClass","SchedulerInfo","errorsOnly","daemonHealth","healthy","schedulerHealths","allDaemonStatuses","daemon","daemonType","schedulerHealth","required","href","useJobTitle","explorerPath","deletion","deletionDialogReducer","DeletionDialog","onTerminateInstead","runIDs","terminatableCount","DELETE_MUTATION","destroy","deletePipelineRun","Group","Icon","RunActionsMenu","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","AppContext","basePath","rootServerURI","usePermissions","canTerminatePipelineExecution","canDeletePipelineRun","LAUNCH_PIPELINE_REEXECUTION_MUTATION","onCompleted","reexecute","useLazyQuery","PIPELINE_ENVIRONMENT_YAML_QUERY","loadEnv","called","closeDialogs","pipelineRun","pipelineRunOrError","runConfigYaml","repoMatch","useRepositoryForRun","isFinished","doneStatuses","has","infoReady","HighlightedCodeBlock","language","OPEN_PLAYGROUND_UNKNOWN","Position","BOTTOM","config","solidSelection","getReexecutionVariables","repositoryLocationName","match","repositoryLocation","repositoryName","repository","handleLaunchResult","download","onOpening","canTerminate","RunBulkActionsMenu","selected","clearSelection","unfinishedRuns","r","unfinishedIDs","unfinishedMap","accum","selectedIDs","deletionMap","RUN_FRAGMENT_FOR_REPOSITORY_MATCH","reducer","copy","checkedRuns","payload","delete","lastCheckedID","allRuns","indexOfLast","indexOfChecked","runAtIndex","initialState","RunTable","nonIdealState","highlightedIds","canTerminateOrDelete","toggleAll","Box","selectedFragments","Table","colSpan","marginBottom","marginTop","indeterminate","HTMLInputElement","additionalColumnHeaders","additionalColumns","additionalColumnsForRow","onToggleChecked","shiftKey","isHighlighted","RUN_TIME_FRAGMENT","RunRow","Row","highlighted","paddingRight","nativeEvent","MouseEvent","getModifierState","RunStatusTag","BLUE3","RunTags","tags","pipelineSnapshotId","queuedStatuses","canceledStatuses","tr","useViewport","offset","setOffset","setSize","initialOffset","measureRef","resizeObserver","onApplySize","__sized","targetOffset","scrollTop","scrollLeft","clientWidth","observe","warn","disconnect","animation","onScroll","cancel","onMoveToViewport","animated","scrollWidth","scrollHeight","onDone","done","setRef","viewport","containerProps","STEP_STATUS_COLORS","RED3","flatGradient","SuccessColorForProps","dimSuccesses","GridColumn","multiselectFocused","hovered","TopLabelTiltedInner","BLUE4","LeftLabel","BLUE5","redness","TopLabel","TopLabelTilted","node","tooltip","showTooltip","nodeWidth","offsetWidth","sin","PI","placement","GridFloatingContainer","floating","GridScrollContainer","invocationsOfPlannedDynamicStep","plannedStepKey","runtimeStepKeys","k","replacePlannedIndex","stepKeyWithIndex","ROUNDING_GRADIENT","buildLayout","params","nodes","boxes","g","root","roots","box","addChildren","deepen","child","parents","boxesByY","changed","highestYParent","onTargetY","parentX","willCross","willCauseCrossing","FLAT","bottomY","row","maxY","m","ensureChildrenAfterParentInArray","childIdx","parentIdx","newIdx","subchild","indexOf","seen","added","out","dep","depNode","depBoxIdx","depBox","ColorsForStates","ORANGE3","GREEN3","boxStyleFor","context","WATERFALL_TIMED","DARK_GRAY4","positionAndSplitBoxes","positionFor","meta","assign","runBoxes","runIdx","adjustLayoutWithRunMetadata","scale","nowMs","WeakMap","nextMarkers","nextBoxes","get","cloneLayout","xForMs","widthForMs","earliestAllowedX","unstarted","visit","minXForUnstartedChildren","positionUntimedBoxes","stepBox","interestingQueriesFor","errorsQuery","slowStepsQuery","rightmostCompletedBox","CursorPaginationControls","textAlign","marginRight","ARROW_LEFT","ARROW_RIGHT","CursorHistoryControls","CursorHistoryControlsContainer","DEFAULT_RESULT_NAME","titleOfIO","definition","edges","h","isSolidHighlighted","renderTypeRecursive","typeLookup","maxDepth","innerIndent","repeat","isSelector","DictBlockComment","indent","fields","fieldData","DictEntry","DictKey","theme","isRequired","Optional","configTypeKey","ofTypeKey","typeParamKeys","nonScalarTypeMarkup","nonScalarTypeKey","scalarTypeMarkup","scalarTypeKey","givenName","ConfigTypeSchema","typesInScope","typeInScope","TypeSchemaContainer","CONFIG_TYPE_SCHEMA_FRAGMENT","code","span","BLACK","DictComment","fontWeight","ORANGE2","TypeWithTooltip","displayName","TypeName","DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT","UnloadableSensors","sensorStates","UnloadableSensorInfo","sensorState","SensorStateRow","UnloadableSchedules","scheduleStates","UnloadableScheduleInfo","scheduleState","ScheduleStateRow","repositoryOrigin","ticks","STOP_SENSOR_MUTATION","displaySensorMutationErrors","stopSensor","toggleOffInFlight","showRepositoryOrigin","setShowRepositoryOrigin","latestTick","InstigationStatus","STOPPED","large","innerLabelChecked","innerLabel","jobOriginId","origin","SENSOR","STOP_SCHEDULE_MUTATION","displayScheduleMutationErrors","stopSchedule","confirm","useConfirmation","typeSpecificData","cronSchedule","onChangeSwitch","scheduleOriginId","whiteSpace","humanCronString","GanttChartModeControl","msToMinuteLabel","ms","msToSecondLabel","toFixed","msToSubsecondLabel","TICK_CONFIG","tickIntervalMs","tickLabels","GanttChartTimescale","startMs","highlightedMs","layoutSize","transform","pxPerMs","tickConfig","pxPerTick","firstTickX","TICK_LABEL_WIDTH","TimescaleContainer","TimescaleTicksContainer","formatElapsedTime","timeX","labelOffset","TimescaleLinesContainer","subsetTitleForRun","stepsTag","DagsterTag","StepSelection","highlightTimer","RunGroupPanel","group","RUN_GROUP_PANEL_QUERY","runGroupOrError","ButtonLink","RunGroupRun","ThinLine","DARK_GRAY5","RunTitle","RootTag","Link","borderRadius","lineHeight","userSelect","GanttStatusPanel","selection","onClickStep","onDoubleClickStep","onHighlightStep","preparing","executing","errored","renderStepItem","stepName","onHover","EmptyNotice","StepItem","StepItemContainer","evt","onMouseEnter","onMouseLeave","Spinner","modifiers","preventOverflow","enabled","flip","StepStatusDot","StepLabel","Elapsed","OptionsContainer","OptionsDivider","OptionsSpacer","ZoomSlider","initialX","classList","contains","pageX","onUpdate","nextValue","onRelease","tabIndex","GANTT_CHART_MODE_KEY","HIGHLIGHT_TIME_EVENT","setHighlightedGanttChartTime","debounced","dispatchEvent","CustomEvent","detail","GanttChart","graph","onSetSelection","toolbarActions","toolbarLeftActions","storedValue","setMode","update","useGanttChartMode","cachedLayout","cachedLayoutParams","graphFiltered","layoutParams","names","ns","updateOptions","changes","onChangeMode","onUpdateQuery","GanttChartContainer","GanttChartInner","hoveredStep","setHoveredNodeName","hoveredTime","setHoveredTime","overrideNowTime","Date","now","setNowMs","WebSocketContext","availability","lostWebsocket","WebSocket","CLOSED","minScale","exp","renderInterval","timeout","listener","bounds","boundsForBox","maxX","minX","minY","focusedTime","sortedSelectedSteps","firstMeta","lastMeta","measurementComplete","overflow","focusedSteps","GraphQueryInputContainer","WebsocketWarning","Yellow700","inline","GanttChartViewportContents","intersectsViewport","verticalLinesAtXCoord","boundsForLine","childNotDrawn","childWaiting","overlapAtXCoord","GanttLine","darkened","dotted","depNotDrawn","depIdx","useDot","data-tooltip","aCenterY","bIsDot","bCenterY","straight","DARK_GRAY1","maxXAvoidingOverlap","borderTop","zIndex","borderRight","GanttChartLoadingState","QueuedState","PipelineRunStatus","QUEUED","StatusTag","STARTING","NOT_STARTED","MANAGED","CANCELING","CANCELED","RunStatusTagWithStats","interactionKind","hoverOpenDelay","usePortal","Tag","interval","remainingTime","setRemainingTime","clearToken","clearInterval","setInterval","RefreshableCountdown","fontVariantNumeric","RefreshButton","Gray400","IconWrapper","Dark","showLaunchError","default","useRepositoryOptions","option","repoContainsPipeline","snapshotMatches","findRepoContainingPipeline","pipelineNameMatches","possibleMatches","repoAndSnapshotMatch","repoOption","RunFragments","RunFragment","EXECUTION_PLAN_TO_GRAPH_FRAGMENT","RUN_DETAILS_FRAGMENT","RunPipelineRunEventFragment","LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT","level","LogLevel","DEBUG","INFO","EVENT","CRITICAL","bgcolorForLevel","DARK_GRAY2","GOLD2","StructuredContent","SolidColumn","widths","ColumnWidthsContext","SolidColumnContainer","data-tooltip-style","SolidColumnTooltipStyle","JSON","TimestampColumn","TimezoneContext","timezone","TimestampColumnContainer","timeNumber","locale","navigator","main","toLocaleTimeString","hour","minute","hour12","timeZone","browserTimezone","fractionalSec","toLocaleString","minimumFractionDigits","maximumFractionDigits","timeString","EventTypeColumn","EventTypeColumnContainer","eventType","DefaultLogLevels","LaunchButtonStatus","useLaunchButtonCommonState","runCount","starting","setStarting","onConfigSelected","forced","Disabled","Ready","Starting","LaunchButton","onShortcut","shortcutLabel","shortcutFilter","keyCode","altKey","ButtonWithConfiguration","LaunchButtonDropdown","primary","setIsOpen","joined","onInteraction","nextOpen","LEFT","openOnTargetFocus","LaunchMenuItem","ButtonContainer","role","sizeStyles","paddingLeft","iconSize","ButtonText","Button","RUN_PROVIDERS_EMPTY","useQueryPersistedRunFilters","enabledFilters","tokens","runsFilterForSearchTokens","obj","statuses","RunsFilter","RUNS_SEARCH_SPACE_QUERY","performQuery","repositoryOptions","pipelineRunTags","pipelineNames","jobNames","pipelines","modes","searchSuggestionsForRuns","limitedTokens","presentLimitedTokens","PipelineExplorerRegexRoot","explorerPathFromString","PipelineExplorerContainer","repoAddress","onChangeExplorerPath","path","tab","fullPath","workspacePathFromAddress","explorerPathToString","PipelineExplorerSnapshotRoot","explodeComposites","setOptions","selectedName","pathSolids","parentNames","pipelineSelector","usePipelineSelector","PIPELINE_EXPLORER_ROOT_QUERY","rootHandleID","requestScopeHandleID","pipelineSnapshotOrError","parentHandle","solidHandle","displayedHandles","explodeCompositesInHandleGraph","solidHandles","selectedHandle","invalidSelection","invalidParent","handles","getInvocations","definitionName","handleID","PIPELINE_EXPLORER_FRAGMENT","PIPELINE_EXPLORER_SOLID_HANDLE_FRAGMENT","PipelineColorScale","scaleOrdinal","domain","TURQUOISE5","TURQUOISE3","TURQUOISE1","BLUE1","ORANGE5","DEFAULT_ZOOM","DETAIL_ZOOM","MIN_AUTOCENTER_ZOOM","MIN_ZOOM","PanAndZoomInteractor","_animation","element","getOffsetXY","lastX","lastY","delta","onUp","onWheel","cursorPosition","targetScale","deltaY","getMaxZoom","adjustZoomRelativeToScreenPoint","render","ZoomSliderContainer","IconButton","stepSize","labelRenderer","NoneInteractor","SVGViewport","panzoom","_lastWheelTime","_lastWheelDir","onZoomAndCenter","offsetXY","screenToSVGCoords","maxZoom","abs","smoothZoomToSVGCoords","autocenter","ownerRect","dw","graphWidth","dh","graphHeight","desiredScale","boundedScale","maxAutocenterZoom","smoothZoom","nextScale","point","centerSVGCoord","interactor","SVGViewportStyles","transformOrigin","Interactors","PanAndZoom","None","outline","cronstrue","toString","SENSOR_FRAGMENT","SensorInfo","sensorHealths","sensorHealth","ExternalConnectionNode","labelAttachment","highlightedEdges","onHighlightEdges","onDoubleClickLabel","textProps","textSize","textOrigin","BackingRect","source","MappingLine","leftEdgeX","edge","strokeLinecap","ParentSolidNode","def","parentLayout","boundingBox","mappingLeftEdge","mappingLeftSpacing","highlightingProps","onClickSolid","SVGLabeledParentRect","inputMappings","mappedInput","destination","solids","sourcePort","port","trgtPort","PARENT_IN","outputMappings","mappedOutput","PARENT_OUT","inputDefinitions","metadataForCompositeParentIO","invocationInput","iidx","SolidIOBox","colorKey","outputDefinitions","invocationOutput","buildSVGPath","pathVerticalDiagonal","buildSVGPaths","weakmapMemoize","connections","sourceOutput","solidName","edgeName","targetInput","outputIsDynamic","outDef","isDynamic","inputIsDynamicCollect","inputDef","isDynamicCollect","SolidLinks","opacity","onHighlight","StyledPath","DynamicMarker","points","NoOp","computeSolidPrefixBoundingBoxes","groups","x1","x2","y1","y2","PipelineGraphContents","focusSolids","parentSolid","parentHandleID","onDoubleClickSolid","onEnterCompositeSolid","highlightedSolids","selectedSolid","selectedHandleID","invocationBoundingBox","SolidNode","invocation","onEnterComposite","EmptyHighlightedArray","PipelineGraph","viewportEl","resolveSolidPosition","arg","cb","lastName","solidLayout","centerSolid","focusOnSolid","closestSolidInDirection","dir","center","score","dx","dy","NaN","nodeName","37","38","39","40","nextSolid","unfocus","unfocusOutsideContainer","onLeaveCompositeSolid","cancelAnimations","onClickBackground","SVGContainer","PIPELINE_GRAPH_SOLID_FRAGMENT","SOLID_NODE_INVOCATION_FRAGMENT","SOLID_NODE_DEFINITION_FRAGMENT","svg","Worker_fn","Worker","SOLID_BASE_HEIGHT","IO_HEIGHT","PORT_INSET_X","PARENT_INVOCATION_PADDING","flattenIO","arrays","array","layoutExternalConnections","links","layoutWidth","insetWidth","inset","baseX","yShift","link","shiftDirection","layoutSolid","accY","inputsLayouts","buildIOSmallLayout","centeringOffsetX","buildIOLayout","outputLayouts","_layoutCacheKey","solidKey","parentKey","getDagrePipelineLayout","memoize","pipelineSolids","dagre","Graph","parentIOPadding","marginy","marginx","PARENT_DEFINITION_PADDING","setGraph","rankdir","setDefaultEdgeLabel","solidNamesPresent","setNode","setEdge","w","weight","nodesBySolid","conn","boundingBottom","layoutParentCompositeSolid","asyncDagrePipelineLayout","asyncMemoize","Promise","resolve","worker","LayoutWorker","postMessage","AssetDetails","assetKey","asOf","asSidebarSection","before","ASSET_QUERY","showAlert","assetOrError","materializationAsOfTime","assetMaterializations","mostRecentMaterialization","materializationEvent","isPartitioned","partition","timeFormat","showSeconds","showTimezone","latest","latestEvent","latestRun","runOrError","latestAssetLineage","assetLineage","rows","elements","materialization","metadataEntries","entry","expandSmallValues","Boolean","AssetLineageInfoElement","lineage_info","partition_list_label","partitions","partition_list_str","encodeURIComponent","curr","Fragment","AssetLineageElements","collapsed","setCollapsed","info","METADATA_ENTRY_FRAGMENT","toGraphQueryItems","plan","runtimeStepMetadata","keyExpansionMap","kind","StepKind","UNRESOLVED_MAPPED","nodeTable","stepRuntimeKeys","nodeInput","upstream","upstreamKeys","UNRESOLVED_COLLECT","upstreamKey","upstreamOutput","ColumnWidthsStorageKey","ColumnWidths","getJSONForKey","ColumnWidthsProvider","onWidthsChangedFromContext","columnWidths","onWidthsChanged","Provider","Header","isDragging","screenX","onResize","handleSide","isDraggable","HeaderContainer","HeaderDragHandle","Headers","HeadersContainer","useCopyToClipboard","clipboardAPI","clipboard","createElement","appendChild","removeChild","writeText","select","execCommand","SchedulesNextTicks","repos","nextTicks","repo","schedules","futureTickSchedules","schedule","futureTicks","minMaxTimestamp","executionTimezone","NextTickMenu","tickTimestamp","scheduleSelector","repoAddressToSelector","scheduleName","SCHEDULE_TICK_CONFIG_QUERY","loadTickConfig","evaluationResult","scheduleOrError","futureTick","menuItems","NextTickMenuItems","onItemOpen","NextTickDialog","runRequests","runRequest","configRef","selectedRunRequest","setSelectedRunRequest","close","ConfigBody","SkipWrapper","RunRequestBody","runKey","copyValue","innerText","GOLD5","explodeComposite","handle","inmap","outmap","nested","interiorTarget","matchingInput","concat","matchingOutput","NonIdealPipelineQueryResult","FLOW_BRANCH","jumpTargetSolid","showText","parentDefinition","others","metadataForIO","PipelineExplorerJobContext","createContext","SidebarModeSection","resources","resource","ContextResourceContainer","Gray700","ContextResourceHeader","configField","configType","recursiveConfigTypes","loggers","logger","ContextLoggerContainer","ContextLoggerHeader","SIDEBAR_MODE_INFO_FRAGMENT","SolidTypeSignature","inputSide","breakOnUnderscores","outputSide","TypeSignature","SOLID_TYPE_SIGNATURE_FRAGMENT","Code","ShowAllButton","TypeWrapper","SolidLink","Invocation","handlePath","InvocationContainer","DependencyRow","Cell","DependencyHeaderRow","DependencyHeaderCell","ResourceHeader","td","ResourceContainer","DependencyTable","ENABLED_FILTERS","PipelineRunsRoot","pipelinePath","filterTokens","setFilterTokens","permanentTokens","allTokens","PIPELINE_RUNS_ROOT_QUERY","PAGE_SIZE","displayed","MainContent","RUN_STATUSES","SchedulePartitionStatus","partitionSet","partitionSetName","partitionPath","addQueryPrefix","partitionURL","SCHEDULE_PARTITION_STATUS_QUERY","retrievePartitionStatus","partitionFragment","RetrievedSchedulePartitionStatus","RED1","loadable","partitionStatusesOrError","partitionsByType","displayStatus","runStatus","calculateDisplayStatus","SCHEDULE_PARTITION_STATUS_FRAGMENT","SensorsTable","sensors","sensor","SensorRow","targets","humanizeSensorInterval","minIntervalSeconds","SensorDetails","countdownDuration","hasMultipleTargets","nextTick","layoutSolidKey","PipelineGraphContainer","parentSolidKey","delegateDagrePipelineLayout","manySolids","PipelineGraphLoading","LoadingContainer","$backgroundColor","SolidJumpBar","ShortcutHandler","btnEl","ReactDOM","click","activateSelect","StringSelectNoIntrinsicWidth","itemRenderer","BasicStringRenderer","itemListPredicate","BasicStringPredicate","noResults","onItemSelect","Select","ofType","handleClick","TypeExplorer","inputSchemaType","outputSchemaType","TYPE_EXPLORER_FRAGMENT","TypeExplorerContainer","typeName","TYPE_EXPLORER_CONTAINER_QUERY","dagsterTypeName","pipelineOrError","dagsterTypeOrError","TypeList","types","Custom","isBuiltin","groupTypes","TypeLI","TYPE_LIST_FRAGMENT","li","TypeListContainer","TYPE_LIST_CONTAINER_QUERY","dagsterTypes","SidebarPipelineInfo","SIDEBAR_PIPELINE_INFO_FRAGMENT","SidebarSolidInvocation","paddingTop","SIDEBAR_SOLID_INVOCATION_FRAGMENT","SidebarSolidContainer","showingSubsolids","SIDEBAR_TABBED_CONTAINER_SOLID_QUERY","selector","SidebarSolidDefinition","onClickInvocation","SIDEBAR_SOLID_DEFINITION_FRAGMENT","SidebarTabbedContainer","solidHandleID","parentSolidHandleID","jobContext","activeTab","TabDefinitions","sidebarTab","TabContainer","Tab","SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT","PipelineExplorer","setHighlighted","handleQueryChange","solidsQuery","handleAdjustPath","fn","handleClickSolid","solidNames","handleEnterCompositeSolid","requestAnimationFrame","last","solidsQueryEnabled","explodeCompositesEnabled","queryResultSolids","backgroundTranslucent","Color","fade","PathOverlay","currentBreadcrumbRenderer","PipelineGraphQueryInputContainer","SearchOverlay","SolidHighlightInput","OptionsOverlay","RightInfoPanel","LargeDAGNotice","LargeDAGContainer","LargeDAGInstructionBox","EmptyDAGNotice","AssetMaterializationTable","hasLineage","materializations","shouldBucketPartitions","list","assetMaterialization","AssetMaterializationRow","predecessors","Timestamp","AssetPredecessorLink","Sparkline","ctx","getContext","yScale","xScale","maxXNumeric","minXNumeric","clearRect","resetTransform","translate","beginPath","strokeStyle","lineWidth","lineJoin","lineCap","penUp","xPx","xNumeric","yPx","moveTo","lineTo","COL_WIDTH","LABEL_STEP_EXECUTION_TIME","xForAssetMaterialization","am","xAxis","EMPTY_CELL_DASH","AssetMaterializationMatrix","xHover","onHoverX","graphDataByMetadataLabel","graphedLabels","setGraphedLabels","hoveredLabel","setHoveredLabel","anyPredecessors","visibleRangeStart","visibleCount","ceil","OVERSCROLL","visible","lastXHover","metadataLabels","flatMap","PartitionRunMatrixContainer","HeaderRowLabel","bordered","graphData","graphEnabled","onToggleGraphEnabled","historicalMaterialization","visibleIdx","stepStats","startTime","endTime","borderBottom","plaintextFor","MetadataEntry","EmptyMessage","MetadataRowLabel","textOverflow","floatValue","intValue","intRepr","url","AssetValueGraph","labels","datasets","lineTension","pointBorderWidth","pointHoverBorderWidth","pointHoverRadius","pointHoverBorderColor","radius","dataset","dataIndex","scales","plugins","legend","activeElements","itemIdx","NO_PARTITION_KEY","AssetMaterializations","asset","setActiveTab","setXAxis","bucketed","buckets","materializationsForKey","separate","reverse","hasOwnProperty","useMaterializationBuckets","reversed","selectedTabId","AssetMaterializationMatrixAndGraph","setXHover","extractNumericData","flexWrap","flexDirection","series","numericMetadataLabels","append","existingForPartition","serie","xs","ys","SidebarComponent","startCase","notebookPath","repoLocName","src","sandbox","seamless","sql","ipynb","snowflake","Plugin","kindMetadata","generic","pluginForMetadata","isComposite","requiredResources","subheadString","requirement","resourceKey","outputDef","invocations","InvocationList","showAll","setShowAll","OverflowFade","OverflowButtonContainer","OverflowButton","CellTruncationProvider","isOverflowing","contentContainerRef","onView","onExpand","defaultExpand","detectOverflow","firstElementChild","textContent","forceExpandability","LogsRowStructuredContent","failureMetadata","errorSource","eventIntent","currentQuery","updatedQuery","logType","eventColor","typeCheck","success","expectationResult","pipelineFailureError","engineError","rawLogsUrl","rawLogsLink","DefaultContent","FailureContent","contextMessage","errorMessage","errorStack","errorCause","ErrorSource","USER_CODE_ERROR","cause","stack","MaterializationContent","assetDashboardLink","styles","paddingBottom","Structured","PythonErrorInfo","StructuredMemoizedContent","LOGS_ROW_STRUCTURED_FRAGMENT","Unstructured","UnstructuredMemoizedContent","LOGS_ROW_UNSTRUCTURED_FRAGMENT","LogsScrollingTable","filterKey","filterStepKeys","didResize","filteredNodes","allNodes","levels","sinceTime","hasTextFilter","logQuery","textMatchNodes","hideNonMatches","filterLogs","LogsScrollingTableSized","cache","CellMeasurerCache","defaultHeight","fixedWidth","keyMapper","rowIndex","clientsideKey","isAtBottomOrZero","scrollToBottomObserver","atTopAndStarting","atBottom","scrollToTime","alignment","iterations","getOffsetForRow","scrollToPosition","rowRenderer","focusedTimeMatch","textMatch","lastRowStyles","noContentRenderer","CONSOLE","attachScrollToBottomObserver","recomputeGridSize","clearAll","forceUpdate","listEl","lastHeight","MutationObserver","rowgroupEl","attributes","subtree","ListEmptyState","deferredMeasurementCache","rowCount","rowHeight","overscanRowCount","AutoSizer","measure","RO","contentRect","SolidConfigPort","pathLength","strokeDasharray","font","SolidTagsInner","tag","hue","charCodeAt","hueForTag","SolidTags","SELECTED_STYLE","dashed","FOCUSED_STYLE","TOOLTIP_STYLE","handleDoubleClick","handleEnterComposite","handleKindClicked","Event","composite","renderSurroundingBox","renderSolidCompositeIndicator","isDynamicMapped","renderSolid","ReconcileButton","canReconcileSchedulerState","repositorySelector","refetchQueries","RECONCILE_SCHEDULE_STATE_MUTATION","reconcileScheduleState","DISABLED_MESSAGE","SchedulesTable","partitionStatus","errorDisplay","runningScheduleCount","PopoverInteractionKind","CLICK","popoverClassName","RIGHT","ScheduleRow","runningCount","ScheduleSwitch","TimestampDisplay","NavigationBlock","handler","returnValue"],"mappings":"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","file":"static/js/2.6b289806.chunk.js","sourcesContent":["import {QueryResult} from '@apollo/client';\nimport {NonIdealState} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport {Box} from './Box';\nimport {Spinner} from './Spinner';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error && !error.networkError) {\n    console.error(error);\n    return (\n      <Box padding={64} flex={{justifyContent: 'center'}}>\n        <NonIdealState icon={IconNames.ERROR} title=\"GraphQL Error - see console for details\" />\n      </Box>\n    );\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  overflow-y: auto;\n  padding: 20px;\n  width: 100%;\n`;\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {IconWIP} from '../ui/Icon';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {PipelineSnapshotLink} from './PipelinePathUtils';\n\ninterface Props {\n  pipelineName: string;\n  pipelineHrefContext: 'repo-unknown' | RepoAddress | 'no-link';\n  snapshotId?: string | null;\n  mode: string;\n  showIcon?: boolean;\n  fontSize?: number;\n}\n\nexport const PipelineReference: React.FC<Props> = ({\n  pipelineName,\n  pipelineHrefContext,\n  mode,\n  snapshotId,\n  showIcon,\n}) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n\n  const modeLabel =\n    mode === 'default' ? null : <span style={{color: Colors.GRAY3}}>{`: ${mode}`}</span>;\n\n  const pipeline =\n    pipelineHrefContext === 'repo-unknown' ? (\n      <Link to={workspacePipelinePathGuessRepo(pipelineName, mode)}>\n        {pipelineName}\n        {modeLabel}\n      </Link>\n    ) : pipelineHrefContext === 'no-link' ? (\n      <>\n        {pipelineName}\n        {modeLabel}\n      </>\n    ) : (\n      <Link\n        to={workspacePipelinePath(\n          pipelineHrefContext.name,\n          pipelineHrefContext.location,\n          pipelineName,\n          mode,\n        )}\n      >\n        {pipelineName}\n        {modeLabel}\n      </Link>\n    );\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center'}}>\n      {showIcon && (\n        <Box margin={{right: 8}}>\n          <IconWIP\n            color={ColorsWIP.Gray300}\n            name={flagPipelineModeTuples ? 'workspaces' : 'schema'}\n          />\n        </Box>\n      )}\n      <span>\n        {pipeline}\n        {snapshotId && ' @ '}\n        {snapshotId && (\n          <PipelineSnapshotLink\n            snapshotId={snapshotId}\n            pipelineName={pipelineName}\n            pipelineMode={mode}\n          />\n        )}\n      </span>\n    </Box>\n  );\n};\n","import {Collapse, Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {IconWIP} from '../ui/Icon';\nimport {FontFamily} from '../ui/styles';\n\ninterface ISidebarSectionProps {\n  title: string;\n  collapsedByDefault?: boolean;\n}\n\nexport const SidebarSection: React.FC<ISidebarSectionProps> = (props) => {\n  const {title, collapsedByDefault, children} = props;\n  const storageKey = `sidebar-${title}`;\n\n  const [open, setOpen] = React.useState(() => {\n    const stored = window.localStorage.getItem(storageKey);\n    if (stored === 'true' || stored === 'false') {\n      return stored === 'true';\n    }\n    return !collapsedByDefault;\n  });\n\n  const onToggle = React.useCallback(() => {\n    setOpen((current) => {\n      window.localStorage.setItem(storageKey, `${!current}`);\n      return !current;\n    });\n  }, [storageKey]);\n\n  return (\n    <div>\n      <CollapsingHeaderBar onClick={onToggle}>\n        {title}\n        <DisclosureIcon name={open ? 'expand_more' : 'chevron_left'} />\n      </CollapsingHeaderBar>\n      <Collapse isOpen={open}>\n        <div>{children}</div>\n      </Collapse>\n    </div>\n  );\n};\n\nconst DisclosureIcon = styled(IconWIP)`\n  opacity: 0.5;\n`;\n\nexport const SidebarTitle = styled.h3`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 0;\n  margin-bottom: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const SectionHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 18px;\n  margin: 2px 0 0 0;\n`;\n\nexport const SectionSmallHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  font-weight: 500;\n  margin: 2px 0;\n`;\n\nexport const SidebarSubhead = styled.div`\n  color: ${Colors.GRAY3};\n  font-size: 0.7rem;\n`;\n\nexport const SectionItemContainer = styled.div`\n  border-bottom: 1px solid ${Colors.LIGHT_GRAY2};\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  font-size: 0.8rem;\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 5px;\n  }\n`;\n\n// Internal\n\nconst CollapsingHeaderBar = styled.div`\n  padding: 6px;\n  padding-left: 12px;\n  background: linear-gradient(to bottom, ${Colors.LIGHT_GRAY5}, ${Colors.LIGHT_GRAY4});\n  border-top: 1px solid ${Colors.LIGHT_GRAY4};\n  border-bottom: 1px solid ${Colors.LIGHT_GRAY3};\n  color: ${Colors.GRAY1};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-transform: uppercase;\n  font-size: 0.75rem;\n`;\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {ColorsWIP} from './Colors';\nimport {Group} from './Group';\nimport {IconName, IconWIP} from './Icon';\n\nexport interface Props {\n  intent: 'info' | 'warning' | 'error' | 'success';\n  title: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: ColorsWIP.Yellow50,\n          borderColor: ColorsWIP.Yellow500,\n          icon: 'warning',\n          iconColor: ColorsWIP.Yellow500,\n        };\n      case 'error':\n        return {\n          backgroundColor: ColorsWIP.Red50,\n          borderColor: ColorsWIP.Red500,\n          icon: 'error',\n          iconColor: ColorsWIP.Red500,\n        };\n      case 'success':\n        return {\n          backgroundColor: ColorsWIP.Green50,\n          borderColor: ColorsWIP.Green500,\n          icon: 'done',\n          iconColor: ColorsWIP.Green500,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: ColorsWIP.Gray50,\n          borderColor: ColorsWIP.Blue500,\n          icon: 'info',\n          iconColor: ColorsWIP.Blue500,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <Box\n      background={backgroundColor}\n      padding={{horizontal: 16, vertical: 12}}\n      style={{\n        boxShadow: `inset 4px 0 ${borderColor}, inset -1px 1px ${Colors.LIGHT_GRAY3}, inset 0 -1px ${Colors.LIGHT_GRAY3}`,\n      }}\n    >\n      <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n        <IconWIP name={icon as IconName} color={iconColor} />\n        <Group direction=\"column\" spacing={8}>\n          <AlertTitle>{title}</AlertTitle>\n          {description ? <AlertDescription>{description}</AlertDescription> : null}\n        </Group>\n      </Group>\n    </Box>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst AlertTitle = styled.div`\n  color: ${Colors.DARK_GRAY3};\n  font-weight: 600;\n  -webkit-font-smoothing: antialiased;\n`;\n\nconst AlertDescription = styled.div`\n  color: ${Colors.DARK_GRAY3};\n  font-weight: 400;\n`;\n","import isEqual from 'lodash/isEqual';\nimport querystring from 'query-string';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\n\ntype QueryPersistedDataType =\n  | {[key: string]: any}\n  | Array<any>\n  | (string | undefined | number)\n  | null;\n\nlet currentQueryString: {[key: string]: any} = {};\n\nexport type QueryPersistedStateConfig<T extends QueryPersistedDataType> = {\n  queryKey?: string;\n  defaults?: {[key: string]: any};\n  decode?: (raw: {[key: string]: any}) => T;\n  encode?: (raw: T) => {[key: string]: any};\n};\n\n/**\n * This goal of this hook is to make it easy to replace `React.useState` with a version\n * that persists the value to the page querystring so it is saved across page reload, etc.\n * Hopefully by making it easy, we'll do this often and improve overall UX.\n *\n * Examples:\n *\n * // Single (string | undefined) key saved to querystring with default value applied inline\n *\n * const [search = '', setSearch] = useQueryPersistedState({queryKey: 'q'})\n *\n * // Object saved to querystring with default values pre-filled\n * // Note: String and boolean values are automatically encoded / decoded, see below for others\n *\n * const [query, setQuery] = useQueryPersistedState<{cursor: string, filter: string}>({\n *   defaults: {cursor: '', filter: ''},\n * })\n *\n * // Custom transformer mapping to / from querystring representation (for our filter tokens)\n * // Note: `setIdeas` will be a different function on every render unless you memoize the options\n * // passed to the hook! Pull the encode/decode functions out into a file constant or use React.useRef\n *\n * const [ideas, setIdeas] = useQueryPersistedState<string[]>({\n *   encode: (ideas) => ({q: ideas.join(',')}),\n *   decode: ({q}) => (q || '').split(','),\n * })\n *\n * Note: if you combine encode/decode with defaults, the defaults are applied to the query\n * string BEFORE decoding.\n */\nexport function useQueryPersistedState<T extends QueryPersistedDataType>(\n  options: QueryPersistedStateConfig<T>,\n): [T, (updates: T) => void] {\n  const {queryKey, defaults} = options;\n  let {encode, decode} = options;\n\n  if (queryKey) {\n    // Just a short-hand way of providing encode/decode that go from qs object => string\n    if (!encode) {\n      encode = (raw: T) => ({[queryKey]: raw});\n    }\n    if (!decode) {\n      decode = (qs: {[key: string]: any}) => inferTypeOfQueryParam<T>(qs[queryKey]);\n    }\n  }\n\n  const location = useLocation();\n  const history = useHistory();\n\n  // We stash the query string into a ref so that the setter can operate on the /current/\n  // location even if the user retains it and calls it after other query string changes.\n  currentQueryString = querystring.parse(location.search);\n\n  const qsWithDefaults = {...(defaults || {}), ...currentQueryString};\n\n  // Note: If you have provided defaults and no encoder/decoder, the `value` exposed by\n  // useQueryPersistedState only includes those keys so other params don't leak into your value.\n  const qsDecoded = decode ? decode(qsWithDefaults) : inferTypeOfQueryParams<T>(qsWithDefaults);\n\n  // If `decode` yields a non-primitive type (eg: object or array), by default we yield\n  // an object with a new identity on every render. To prevent possible render loops caused by\n  // our value as a useEffect dependency, etc., we re-use the last yielded object if it isEqual.\n  const valueRef = React.useRef<T>(qsDecoded);\n  const onChangeRef = React.useCallback<(updated: T) => void>(\n    (updated: T) => {\n      const next = {\n        ...currentQueryString,\n        ...(encode ? encode(updated) : (updated as {[key: string]: any})),\n      };\n      // omit any keys that are equal to the defaults to keep URLs minimal\n      for (const [key, value] of Object.entries(next)) {\n        if (options.defaults && options.defaults[key] === value) {\n          delete next[key];\n        }\n      }\n      currentQueryString = next;\n      history.replace(`${location.pathname}?${querystring.stringify(next)}`);\n    },\n    [history, encode, location.pathname, options],\n  );\n\n  if (!isEqual(valueRef.current, qsDecoded)) {\n    valueRef.current = qsDecoded;\n  }\n  return [valueRef.current, onChangeRef];\n}\n\nfunction inferTypeOfQueryParam<T>(q: any): T {\n  return q === 'false' ? false : q === 'true' ? true : q;\n}\n\nfunction inferTypeOfQueryParams<T>(qs: {[key: string]: any}) {\n  const result: {[key: string]: any} = {};\n  for (const key of Object.keys(qs)) {\n    result[key] = inferTypeOfQueryParam<any>(qs[key]);\n  }\n  return result as T;\n}\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {RunMetadataProviderMessageFragment} from './types/RunMetadataProviderMessageFragment';\n\nexport enum IStepState {\n  PREPARING = 'preparing',\n  RETRY_REQUESTED = 'retry-requested',\n  RUNNING = 'running',\n  SUCCEEDED = 'succeeded',\n  SKIPPED = 'skipped',\n  FAILED = 'failed',\n  UNKNOWN = 'unknown',\n}\n\nconst BOX_EXIT_STATES = [IStepState.RETRY_REQUESTED, IStepState.SUCCEEDED, IStepState.FAILED];\n\ninterface IMarker {\n  key: string;\n  start?: number;\n  end?: number;\n}\n\nexport interface IStepAttempt {\n  start: number;\n  end?: number;\n  exitState?: IStepState;\n}\n\nexport interface IStepMetadata {\n  // current state\n  state: IStepState;\n\n  // execution start and stop (user-code) inclusive of all retries\n  start?: number;\n  end?: number;\n\n  // current state + prev state transition times\n  transitions: {\n    state: IStepState;\n    time: number;\n  }[];\n\n  // transition times organized into start+stop+exit state pairs.\n  // This is the metadata used to render boxes on the realtime vi.z\n  attempts: IStepAttempt[];\n\n  // accumulated metadata\n  markers: IMarker[];\n}\n\nexport interface ILogCaptureInfo {\n  logKey: string;\n  stepKeys: string[];\n  pid?: string;\n}\n\nexport interface IRunMetadataDict {\n  firstLogAt: number;\n  mostRecentLogAt: number;\n  startingProcessAt?: number;\n  startedProcessAt?: number;\n  startedPipelineAt?: number;\n  exitedAt?: number;\n  processId?: number;\n  globalMarkers: IMarker[];\n  steps: {\n    [stepKey: string]: IStepMetadata;\n  };\n  logCaptureSteps?: {\n    [logKey: string]: ILogCaptureInfo;\n  };\n}\n\nexport const EMPTY_RUN_METADATA: IRunMetadataDict = {\n  firstLogAt: 0,\n  mostRecentLogAt: 0,\n  globalMarkers: [],\n  steps: {},\n};\n\nexport const extractLogCaptureStepsFromLegacySteps = (stepKeys: string[]) => {\n  const logCaptureSteps = {};\n  stepKeys.forEach(\n    (stepKey) => (logCaptureSteps[stepKey] = {logKey: stepKey, stepKeys: [stepKey]}),\n  );\n  return logCaptureSteps;\n};\n\nexport function extractMetadataFromLogs(\n  logs: RunMetadataProviderMessageFragment[],\n): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n\n  // Returns the most recent marker with the given `key` without an end time\n  const upsertMarker = (set: IMarker[], key: string) => {\n    let marker = set.find((f) => f.key === key && !f.end);\n    if (!marker) {\n      marker = {key};\n      set.unshift(marker);\n    }\n    return marker;\n  };\n\n  const upsertState = (step: IStepMetadata, time: number, state: IStepState) => {\n    step.transitions.push({time, state});\n    step.state = state;\n    step.attempts = [];\n  };\n\n  logs.forEach((log) => {\n    const timestamp = Number.parseInt(log.timestamp, 10);\n\n    metadata.firstLogAt = metadata.firstLogAt\n      ? Math.min(metadata.firstLogAt, timestamp)\n      : timestamp;\n    metadata.mostRecentLogAt = Math.max(metadata.mostRecentLogAt, timestamp);\n\n    if (log.__typename === 'PipelineStartEvent') {\n      metadata.startedPipelineAt = timestamp;\n    }\n    if (\n      log.__typename === 'PipelineFailureEvent' ||\n      log.__typename === 'PipelineSuccessEvent' ||\n      log.__typename === 'PipelineCanceledEvent'\n    ) {\n      metadata.exitedAt = timestamp;\n      for (const step of Object.values(metadata.steps)) {\n        if (step.state === IStepState.RUNNING) {\n          upsertState(step, timestamp, IStepState.UNKNOWN);\n        }\n      }\n    }\n\n    if (log.__typename === 'EngineEvent' && !log.stepKey) {\n      if (log.markerStart) {\n        upsertMarker(metadata.globalMarkers, log.markerStart).start = timestamp;\n      }\n      if (log.markerEnd) {\n        upsertMarker(metadata.globalMarkers, log.markerEnd).end = timestamp;\n      }\n    }\n\n    if (log.__typename === 'LogsCapturedEvent') {\n      if (!metadata.logCaptureSteps) {\n        metadata.logCaptureSteps = {};\n      }\n      metadata.logCaptureSteps[log.logKey] = {\n        logKey: log.logKey,\n        stepKeys: log.stepKeys || [],\n        pid: String(log.pid),\n      };\n    }\n\n    if (log.stepKey) {\n      const stepKey = log.stepKey;\n      const step =\n        metadata.steps[stepKey] ||\n        ({\n          state: IStepState.PREPARING,\n          attempts: [],\n          transitions: [\n            {\n              state: IStepState.PREPARING,\n              time: timestamp,\n            },\n          ],\n          start: undefined,\n          end: undefined,\n          markers: [],\n        } as IStepMetadata);\n\n      if (log.__typename === 'ExecutionStepStartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n        step.start = timestamp;\n      } else if (log.__typename === 'ExecutionStepSuccessEvent') {\n        upsertState(step, timestamp, IStepState.SUCCEEDED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepSkippedEvent') {\n        upsertState(step, timestamp, IStepState.SKIPPED);\n      } else if (log.__typename === 'ExecutionStepFailureEvent') {\n        upsertState(step, timestamp, IStepState.FAILED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepUpForRetryEvent') {\n        // We only get one event when the step fails/aborts and is queued for retry,\n        // but we create an \"exit\" state separate from the \"preparing for retry\" state\n        // so that the box representing the attempt doesn't have a final state = preparing.\n        // That'd be more confusing.\n        upsertState(step, timestamp, IStepState.RETRY_REQUESTED);\n        upsertState(step, timestamp + 1, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepRestartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n      } else if (log.__typename === 'EngineEvent') {\n        if (log.markerStart) {\n          upsertMarker(step.markers, log.markerStart).start = timestamp;\n        }\n        if (log.markerEnd) {\n          upsertMarker(step.markers, log.markerEnd).end = timestamp;\n        }\n      } else if (log.__typename === 'ObjectStoreOperationEvent') {\n        // this indicates the step was skipped and its previous intermediates were copied\n        // so we will drop the step because we didn't execute it\n        if (log.operationResult.op === 'CP_OBJECT') {\n          return;\n        }\n      }\n\n      metadata.steps[stepKey] = step;\n    }\n  });\n\n  // Post processing\n\n  for (const step of Object.values(metadata.steps)) {\n    // Sort step transitions because logs may not arrive in order\n    step.transitions = step.transitions.sort((a, b) => a.time - b.time);\n\n    // Build step \"attempts\" from transitions\n    let start = null;\n    for (const t of step.transitions) {\n      if (t.state === IStepState.RUNNING) {\n        start = t.time;\n      }\n      if (start && BOX_EXIT_STATES.includes(t.state)) {\n        step.attempts.push({start, end: t.time, exitState: t.state});\n        start = null;\n      }\n    }\n    if (start !== null) {\n      step.attempts.push({start});\n    }\n  }\n\n  return metadata;\n}\n\ninterface IRunMetadataProviderProps {\n  logs: RunMetadataProviderMessageFragment[];\n  children: (metadata: IRunMetadataDict) => React.ReactElement<any>;\n}\n\nexport const RunMetadataProvider: React.FC<IRunMetadataProviderProps> = ({logs, children}) => {\n  const metadata = React.useMemo(() => extractMetadataFromLogs(logs), [logs]);\n  return <>{children(metadata)}</>;\n};\n\nexport const RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT = gql`\n  fragment RunMetadataProviderMessageFragment on PipelineRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      stepKey\n    }\n    ... on EngineEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on LogsCapturedEvent {\n      logKey\n      stepKeys\n      pid\n    }\n  }\n`;\n","import {Button, ButtonGroup, Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nconst DIVIDER_THICKNESS = 4;\n\ninterface SplitPanelContainerProps {\n  axis?: 'horizontal' | 'vertical';\n  identifier: string;\n  first: React.ReactNode;\n  firstInitialPercent: number;\n  firstMinSize?: number;\n  second: React.ReactNode;\n}\n\ninterface SplitPanelContainerState {\n  size: number;\n  key: string;\n  resizing: boolean;\n}\n\nexport class SplitPanelContainer extends React.Component<\n  SplitPanelContainerProps,\n  SplitPanelContainerState\n> {\n  constructor(props: SplitPanelContainerProps) {\n    super(props);\n\n    const key = `dagit.panel-width.${this.props.identifier}`;\n    const value = window.localStorage.getItem(key);\n    let size = Number(value);\n    if (value === null || isNaN(size)) {\n      size = this.props.firstInitialPercent;\n    }\n\n    this.state = {size, key, resizing: false};\n  }\n\n  onChangeSize = (size: number) => {\n    this.setState({size});\n    window.localStorage.setItem(this.state.key, `${size}`);\n  };\n\n  render() {\n    const {firstMinSize, first, second} = this.props;\n    const {size, resizing} = this.state;\n    const axis = this.props.axis || 'horizontal';\n\n    const firstPaneStyles: React.CSSProperties = {flexShrink: 0};\n\n    // Note: The divider appears after the first panel, so making the first panel 100% wide\n    // hides the divider offscreen. To prevent this, we subtract the divider depth.\n    if (axis === 'horizontal') {\n      firstPaneStyles.minWidth = firstMinSize;\n      firstPaneStyles.width = `calc(${size}% - ${DIVIDER_THICKNESS}px)`;\n    } else {\n      firstPaneStyles.minHeight = firstMinSize;\n      firstPaneStyles.height = `calc(${size}% - ${DIVIDER_THICKNESS}px)`;\n    }\n\n    return (\n      <Container axis={axis} id=\"split-panel-container\" resizing={resizing}>\n        <div className=\"split-panel\" style={firstPaneStyles}>\n          {first}\n        </div>\n        <PanelDivider\n          axis={axis}\n          resizing={resizing}\n          onSetResizing={(resizing) => this.setState({resizing})}\n          onMove={this.onChangeSize}\n        />\n        <div className=\"split-panel\" style={{flex: 1}}>\n          {second}\n        </div>\n      </Container>\n    );\n  }\n}\n\ninterface IDividerProps {\n  axis: 'horizontal' | 'vertical';\n  resizing: boolean;\n  onSetResizing: (resizing: boolean) => void;\n  onMove: (vw: number) => void;\n}\n\nclass PanelDivider extends React.Component<IDividerProps> {\n  ref = React.createRef<any>();\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    this.props.onSetResizing(true);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const parent = this.ref.current?.closest('#split-panel-container');\n      if (!parent) {\n        return;\n      }\n      const parentRect = parent.getBoundingClientRect();\n\n      const firstPanelPercent =\n        this.props.axis === 'horizontal'\n          ? ((event.clientX - parentRect.left) * 100) / parentRect.width\n          : ((event.clientY - parentRect.top) * 100) / parentRect.height;\n\n      this.props.onMove(Math.min(100, Math.max(0, firstPanelPercent)));\n    };\n\n    const onMouseUp = () => {\n      this.props.onSetResizing(false);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  render() {\n    const Wrapper = DividerWrapper[this.props.axis];\n    const HitArea = DividerHitArea[this.props.axis];\n    return (\n      <Wrapper resizing={this.props.resizing} ref={this.ref}>\n        <HitArea onMouseDown={this.onMouseDown} />\n      </Wrapper>\n    );\n  }\n}\n\ninterface PanelToggleProps {\n  axis: 'horizontal' | 'vertical';\n  container: React.RefObject<SplitPanelContainer>;\n}\n\nexport const FirstOrSecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  return (\n    <ButtonGroup style={{flexShrink: 0}}>\n      <Button\n        small={true}\n        title={'Focus First Pane'}\n        icon={axis === 'vertical' ? 'add-row-top' : 'add-column-left'}\n        onClick={() => container.current?.onChangeSize(100)}\n      />\n      <Button\n        small={true}\n        title={'Focus Second Pane'}\n        icon={axis === 'vertical' ? 'add-row-bottom' : 'add-column-right'}\n        onClick={() => container.current?.onChangeSize(0)}\n      />\n    </ButtonGroup>\n  );\n};\n\n// Todo: This component attempts to sync itself with the container, but it can't\n// observe the container's width without a React context or adding a listener, etc.\n// If we keep making components that manipulate panel state we may want to move it\n// all to a context consumed by both.\n//\nexport const SecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const [prevSize, setPrevSize] = React.useState<number | 'unknown'>('unknown');\n  const initialIsOpen = (container.current?.state.size || 0) < 100;\n\n  const [open, setOpen] = React.useState<boolean>(initialIsOpen);\n  React.useEffect(() => setOpen(initialIsOpen), [initialIsOpen]);\n\n  return (\n    <Button\n      small={true}\n      active={open}\n      title={'Toggle Second Pane'}\n      icon={axis === 'vertical' ? 'add-row-bottom' : 'add-column-right'}\n      onClick={() => {\n        if (!container.current) {\n          return;\n        }\n        const current = container.current.state.size;\n        if (current < 90) {\n          setPrevSize(current);\n          setOpen(false);\n          container.current.onChangeSize(100);\n        } else {\n          setOpen(true);\n          container.current.onChangeSize(\n            prevSize === 'unknown' ? container.current.props.firstInitialPercent : prevSize,\n          );\n        }\n      }}\n    />\n  );\n};\n\nconst DividerWrapper = {\n  horizontal: styled.div<{resizing: boolean}>`\n    width: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${Colors.WHITE};\n    border-left: 1px solid ${(p) => (p.resizing ? Colors.GRAY5 : Colors.LIGHT_GRAY2)};\n    border-right: 1px solid ${(p) => (p.resizing ? Colors.GRAY3 : Colors.GRAY5)};\n    overflow: visible;\n    position: relative;\n  `,\n  vertical: styled.div<{resizing: boolean}>`\n    height: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${Colors.WHITE};\n    border-top: 1px solid ${(p) => (p.resizing ? Colors.GRAY5 : Colors.LIGHT_GRAY2)};\n    border-bottom: 1px solid ${(p) => (p.resizing ? Colors.GRAY3 : Colors.GRAY5)};\n    overflow: visible;\n    position: relative;\n  `,\n};\n\nconst DividerHitArea = {\n  horizontal: styled.div`\n    width: 17px;\n    height: 100%;\n    z-index: 1;\n    cursor: ew-resize;\n    position: relative;\n    left: -8px;\n  `,\n  vertical: styled.div`\n    height: 17px;\n    width: 100%;\n    z-index: 1;\n    cursor: ns-resize;\n    position: relative;\n    top: -8px;\n  `,\n};\n\nconst Container = styled.div<{\n  axis?: 'horizontal' | 'vertical';\n  resizing: boolean;\n}>`\n  display: flex;\n  flex-direction: ${({axis}) => (axis === 'vertical' ? 'column' : 'row')};\n  flex: 1 1;\n  width: 100%;\n  min-width: 0;\n  min-height: 0;\n\n  .split-panel {\n    position: relative;\n    transition: ${({axis, resizing}) =>\n      resizing ? 'none' : axis === 'horizontal' ? 'width' : 'height'}\n      200ms ease-out;\n    flex-direction: column;\n    display: flex;\n    min-${({axis}) => (axis === 'vertical' ? 'height' : 'width')}: 0;\n    z-index: 0;\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {RunStatus} from '../runs/RunStatusDots';\nimport {titleForRun} from '../runs/RunUtils';\nimport {Group} from '../ui/Group';\nimport {Mono} from '../ui/Text';\nimport {REPOSITORY_ORIGIN_FRAGMENT} from '../workspace/RepositoryInformation';\n\nimport {TICK_TAG_FRAGMENT} from './InstigationTick';\nimport {InstigationStateFragment} from './types/InstigationStateFragment';\n\nexport const InstigatedRunStatus: React.FC<{\n  instigationState: InstigationStateFragment;\n}> = ({instigationState}) => {\n  if (!instigationState.runs.length) {\n    return <span style={{color: Colors.GRAY4}}>None</span>;\n  }\n  const run = instigationState.runs[0];\n  return (\n    <Group direction=\"row\" spacing={4} alignItems=\"center\">\n      <RunStatus status={run.status} />\n      <Link to={`/instance/runs/${run.runId}`} target=\"_blank\" rel=\"noreferrer\">\n        <Mono>{titleForRun({runId: run.runId})}</Mono>\n      </Link>\n    </Group>\n  );\n};\n\nexport const INSTIGATION_STATE_FRAGMENT = gql`\n  fragment InstigationStateFragment on InstigationState {\n    id\n    name\n    instigationType\n    status\n    repositoryOrigin {\n      id\n      ...RepositoryOriginFragment\n    }\n    typeSpecificData {\n      ... on SensorData {\n        lastRunKey\n      }\n      ... on ScheduleData {\n        cronSchedule\n      }\n    }\n    runs(limit: 1) {\n      id\n      runId\n      status\n    }\n    status\n    ticks(limit: 1) {\n      id\n      ...TickTagFragment\n    }\n    runningCount\n  }\n  ${REPOSITORY_ORIGIN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${TICK_TAG_FRAGMENT}\n`;\n\nexport const StatusTable = styled.table`\n  font-size: 13px;\n  border-spacing: 0;\n\n  &&&&& tr {\n    box-shadow: none;\n  }\n\n  &&&&& tbody > tr > td {\n    background: transparent;\n    box-shadow: none !important;\n    padding: 1px 0;\n  }\n\n  &&&&& tbody > tr > td:first-child {\n    color: ${Colors.GRAY2};\n  }\n`;\n","import {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepState} from '../runs/RunMetadataProvider';\n\nexport type IGanttNode = GraphQueryItem;\n\nexport interface GanttViewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface GanttChartPlacement {\n  key: string; // A React-friendly unique key like `step:retry-1`\n  width: number;\n  x: number; // Note: This is a pixel value\n  y: number; // Note: This is a \"row number\" not a pixel value\n}\n\nexport interface GanttChartBox extends GanttChartPlacement {\n  state: IStepState | undefined;\n  children: GanttChartBox[];\n  node: IGanttNode;\n  root: boolean;\n}\n\nexport interface GanttChartMarker extends GanttChartPlacement {}\n\nexport interface GanttChartLayout {\n  boxes: GanttChartBox[];\n\n  // only present in timescaled layout\n  markers: GanttChartMarker[];\n}\n\nexport interface GanttChartLayoutOptions {\n  mode: GanttChartMode;\n  zoom: number; // 1 => 100\n  hideWaiting: boolean;\n  hideTimedMode: boolean;\n  hideUnselectedSteps: boolean;\n}\n\nexport enum GanttChartMode {\n  FLAT = 'flat',\n  WATERFALL = 'waterfall',\n  WATERFALL_TIMED = 'waterfall-timed',\n}\n\nexport const MIN_SCALE = 0.0002;\nexport const MAX_SCALE = 0.5;\nexport const LEFT_INSET = 5;\nexport const FLAT_INSET_FROM_PARENT = 15;\nexport const BOX_HEIGHT = 30;\nexport const BOX_MARGIN_Y = 5;\nexport const BOX_SPACING_X = 20;\nexport const BOX_WIDTH = 100;\nexport const BOX_DOT_WIDTH_CUTOFF = 8;\nexport const BOX_SHOW_LABEL_WIDTH_CUTOFF = 30;\nexport const BOX_DOT_SIZE = 6;\nexport const BOX_DOT_MARGIN_Y = (BOX_HEIGHT - BOX_DOT_SIZE) / 2;\n\nexport const LINE_SIZE = 2;\nexport const CSS_DURATION = 100;\n\nexport const DEFAULT_OPTIONS: GanttChartLayoutOptions = {\n  mode: GanttChartMode.WATERFALL,\n  hideWaiting: false,\n  hideTimedMode: false,\n  zoom: 1,\n  hideUnselectedSteps: false,\n};\n","const MAX_RENDERED_FOR_EMPTY_QUERY = 100;\n\nexport interface GraphQueryItem {\n  name: string;\n  inputs: {\n    dependsOn: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  outputs: {\n    dependedBy: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\ntype TraverseStepFunction<T> = (item: T, callback: (nextItem: T) => void) => void;\n\nclass GraphTraverser<T extends GraphQueryItem> {\n  itemNameMap: {[name: string]: T} = {};\n\n  // TODO: One reason doing DFS on the client side is sub optimal.\n  // javascript is tail end recursive tho so we could go for ever without worrying about\n  // stack overflow problems?\n\n  constructor(items: T[]) {\n    items.forEach((item) => (this.itemNameMap[item.name] = item));\n  }\n\n  itemNamed(name: string): T | undefined {\n    return this.itemNameMap[name];\n  }\n\n  traverse(\n    item: T,\n    step: TraverseStepFunction<T>,\n    depth: number,\n    results: {[key: string]: T} = {},\n  ) {\n    results[item.name] = item;\n\n    if (depth > 0) {\n      step(item, (next) => {\n        if (!(next.name in results)) {\n          this.traverse(next, step, depth - 1, results);\n        }\n      });\n    }\n    return Object.values(results);\n  }\n\n  fetchUpstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.inputs.forEach((input) =>\n        input.dependsOn.forEach((d) => callback(this.itemNamed(d.solid.name)!)),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n\n  fetchDownstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.outputs.forEach((output) =>\n        output.dependedBy.forEach((d) => callback(this.itemNamed(d.solid.name)!)),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n}\n\nfunction expansionDepthForClause(clause: string) {\n  return clause.includes('*') ? Number.MAX_SAFE_INTEGER : clause.length;\n}\n\nexport function filterByQuery<T extends GraphQueryItem>(items: T[], query: string) {\n  if (query === '*') {\n    return {all: items, focus: []};\n  }\n  if (query === '') {\n    return {\n      all: items.length < MAX_RENDERED_FOR_EMPTY_QUERY ? items : [],\n      focus: [],\n    };\n  }\n\n  const traverser = new GraphTraverser<T>(items);\n  const results = new Set<T>();\n  const clauses = query.split(/(,| AND | and | )/g);\n  const focus = new Set<T>();\n\n  for (const clause of clauses) {\n    const parts = /(\\*?\\+*)([.\\w\\d\\[\\]_-]+)(\\+*\\*?)/.exec(clause.trim());\n    if (!parts) {\n      continue;\n    }\n    const [, parentsClause, itemName, descendentsClause] = parts;\n    const itemsMatching = items.filter((s) => s.name.includes(itemName));\n\n    for (const item of itemsMatching) {\n      const upDepth = expansionDepthForClause(parentsClause);\n      const downDepth = expansionDepthForClause(descendentsClause);\n\n      focus.add(item);\n      results.add(item);\n      traverser.fetchUpstream(item, upDepth).forEach((other) => results.add(other));\n      traverser.fetchDownstream(item, downDepth).forEach((other) => results.add(other));\n    }\n  }\n\n  return {\n    all: Array.from(results),\n    focus: Array.from(focus),\n  };\n}\n","import {gql, useQuery} from '@apollo/client';\nimport {Tag, Dialog, Button, Intent, NonIdealState, Classes, Colors} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {assertUnreachable} from '../app/Util';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from '../runs/RunTable';\nimport {InstigationTickStatus, InstigationType} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Spinner} from '../ui/Spinner';\nimport {Body} from '../ui/Text';\n\nimport {LaunchedRunListQuery, LaunchedRunListQueryVariables} from './types/LaunchedRunListQuery';\nimport {TickTagFragment} from './types/TickTagFragment';\n\nexport const TickTag: React.FunctionComponent<{\n  tick: TickTagFragment;\n  instigationType?: InstigationType;\n}> = ({tick, instigationType}) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  switch (tick.status) {\n    case InstigationTickStatus.STARTED:\n      return (\n        <Tag minimal={true} intent={Intent.NONE}>\n          Started\n        </Tag>\n      );\n    case InstigationTickStatus.SUCCESS:\n      if (!tick.runIds.length) {\n        return (\n          <Tag minimal={true} intent={Intent.PRIMARY}>\n            Requested\n          </Tag>\n        );\n      }\n      return (\n        <>\n          <Tag minimal={true} intent={Intent.PRIMARY} interactive={true}>\n            <ButtonLink underline=\"never\" onClick={() => setOpen(true)}>\n              {tick.runIds.length} Requested\n            </ButtonLink>\n          </Tag>\n          <Dialog\n            isOpen={open}\n            onClose={() => setOpen(false)}\n            style={{width: '90vw'}}\n            title={`Launched runs`}\n          >\n            <Box background={Colors.WHITE} padding={16} margin={{bottom: 16}}>\n              {open && <RunList runIds={tick.runIds} />}\n            </Box>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button intent=\"primary\" onClick={() => setOpen(false)}>\n                  OK\n                </Button>\n              </div>\n            </div>\n          </Dialog>\n        </>\n      );\n    case InstigationTickStatus.SKIPPED:\n      if (!tick.skipReason) {\n        return (\n          <Tag minimal={true} intent={Intent.WARNING}>\n            Skipped\n          </Tag>\n        );\n      }\n      return (\n        <Tooltip position={'right'} content={tick.skipReason} targetTagName=\"div\">\n          <Tag minimal={true} intent={Intent.WARNING}>\n            Skipped\n          </Tag>\n        </Tooltip>\n      );\n    case InstigationTickStatus.FAILURE:\n      if (!tick.error) {\n        return (\n          <Tag minimal={true} intent={Intent.DANGER}>\n            Failure\n          </Tag>\n        );\n      } else {\n        const error = tick.error;\n        return (\n          <LinkButton\n            onClick={() =>\n              showCustomAlert({\n                title: instigationType\n                  ? instigationType === InstigationType.SCHEDULE\n                    ? 'Schedule Response'\n                    : 'Sensor Response'\n                  : 'Python Error',\n                body: <PythonErrorInfo error={error} />,\n              })\n            }\n          >\n            <Tag minimal={true} intent={Intent.DANGER} interactive={true}>\n              Failure\n            </Tag>\n          </LinkButton>\n        );\n      }\n    default:\n      return assertUnreachable(tick.status);\n  }\n};\n\nexport const RunList: React.FunctionComponent<{\n  runIds: string[];\n}> = ({runIds}) => {\n  const {data, loading} = useQuery<LaunchedRunListQuery, LaunchedRunListQueryVariables>(\n    LAUNCHED_RUN_LIST_QUERY,\n    {\n      variables: {\n        filter: {\n          runIds,\n        },\n      },\n    },\n  );\n\n  if (loading || !data) {\n    return <Spinner purpose=\"section\" />;\n  }\n\n  if (data.pipelineRunsOrError.__typename !== 'PipelineRuns') {\n    return (\n      <NonIdealState\n        icon=\"error\"\n        title=\"Query Error\"\n        description={data.pipelineRunsOrError.message}\n      />\n    );\n  }\n  return (\n    <div>\n      <RunTable runs={data.pipelineRunsOrError.results} onSetFilter={() => {}} />\n    </div>\n  );\n};\n\nexport const FailedRunList: React.FunctionComponent<{\n  originRunIds?: string[];\n}> = ({originRunIds}) => {\n  if (!originRunIds || !originRunIds.length) {\n    return null;\n  }\n  return (\n    <Group direction=\"column\" spacing={16}>\n      <Box padding={12} border={{side: 'bottom', width: 1, color: Colors.LIGHT_GRAY1}}>\n        <Body>\n          Failed Runs\n          <Tooltip content=\"Failed runs this tick reacted on and reported back to.\">\n            <IconWIP name=\"info\" color={ColorsWIP.Gray500} />\n          </Tooltip>\n        </Body>\n\n        <RunList runIds={originRunIds} />\n      </Box>\n      <Box padding={12} margin={{bottom: 8}}>\n        <Body>\n          Requested Runs\n          <Tooltip content=\"Runs launched by the run requests in this tick.\">\n            <IconWIP name=\"info\" color={ColorsWIP.Gray500} />\n          </Tooltip>\n        </Body>\n        <NonIdealState description=\"Sensor does not target a pipeline.\" />\n      </Box>\n    </Group>\n  );\n};\nconst LinkButton = styled.button`\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  font-size: inherit;\n  text-decoration: none;\n  padding: 0;\n`;\n\nexport const TICK_TAG_FRAGMENT = gql`\n  fragment TickTagFragment on InstigationTick {\n    id\n    status\n    timestamp\n    skipReason\n    runIds\n    error {\n      ...PythonErrorFragment\n    }\n  }\n`;\n\nconst LAUNCHED_RUN_LIST_QUERY = gql`\n  query LaunchedRunListQuery($filter: PipelineRunsFilter!) {\n    pipelineRunsOrError(filter: $filter, limit: 500) {\n      ... on PipelineRuns {\n        results {\n          ...RunTableRunFragment\n          id\n          runId\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ... on PythonError {\n        ...PythonErrorFragment\n      }\n    }\n  }\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {useQuery} from '@apollo/client';\nimport {DocumentNode} from 'graphql';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {CursorPaginationProps} from '../ui/CursorControls';\n\ninterface CursorPaginationQueryVariables {\n  cursor?: string | null;\n  limit?: number | null;\n}\n\nexport const POLL_INTERVAL = 15 * 1000;\n\n/**\n * This is a React hook that makes it easier to build paginated list views based on a GraphQL\n * query. It is intended to be used in place of Apollo's `useQuery` and assumes that the query\n * takes at least `cursor` and `limit` variables. It manages those two variables internally,\n * and you can pass additional variables via the options.\n *\n * The current pagination \"cursor\" is saved to the URL query string, which allows the user to\n * navigate \"back\" in their browser history to move to previous pages.\n *\n * The returned paginationProps expose methods for moving to the next / previous page and are\n * used by <CursorPaginationControls /> to render the pagination buttons.\n */\nexport function useCursorPaginatedQuery<T, TVars extends CursorPaginationQueryVariables>(options: {\n  query: DocumentNode;\n  nextCursorForResult: (result: T) => string | undefined;\n  variables: Omit<Omit<TVars, 'cusor'>, 'limit'>;\n  pageSize: number;\n  getResultArray: (result: T | undefined) => any[];\n}) {\n  const [cursorStack, setCursorStack] = React.useState<string[]>(() => []);\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n\n  const queryVars: any = {\n    ...options.variables,\n    cursor: cursor,\n    limit: options.pageSize + 1,\n  };\n\n  const queryResult = useQuery<T, TVars>(options.query, {\n    fetchPolicy: 'cache-and-network',\n    pollInterval: POLL_INTERVAL,\n    partialRefetch: true,\n    variables: queryVars,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const resultArray = options.getResultArray(queryResult.data);\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!cursor,\n    hasNextCursor: resultArray.length === options.pageSize + 1,\n    popCursor: () => {\n      const nextStack = [...cursorStack];\n      setCursor(nextStack.pop());\n      setCursorStack(nextStack);\n    },\n    advanceCursor: () => {\n      if (cursor) {\n        setCursorStack((current) => [...current, cursor]);\n      }\n      const nextCursor = queryResult.data && options.nextCursorForResult(queryResult.data);\n      if (!nextCursor) {\n        return;\n      }\n      setCursor(nextCursor);\n    },\n    reset: () => {\n      setCursorStack([]);\n      setCursor(undefined);\n    },\n  };\n\n  return {queryResult, paginationProps};\n}\n","import {Menu, MenuItem, Popover, TagInput} from '@blueprintjs/core';\nimport isEqual from 'lodash/isEqual';\nimport React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Spinner} from './Spinner';\n\nconst MAX_SUGGESTIONS = 100;\n\nexport interface SuggestionProvider {\n  token: string;\n  values: () => string[];\n}\n\ninterface Suggestion {\n  text: string;\n  final: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\nexport interface TokenizingFieldValue {\n  token?: string;\n  value: string;\n}\n\ninterface TokenizingFieldProps {\n  values: TokenizingFieldValue[];\n  maxValues?: number;\n  onChange: (values: TokenizingFieldValue[]) => void;\n  onChangeBeforeCommit?: boolean;\n  onFocus?: () => void;\n\n  placeholder?: string;\n  loading?: boolean;\n  className?: string;\n  small?: boolean;\n\n  suggestionProviders: SuggestionProvider[];\n  suggestionProvidersFilter?: (\n    suggestionProvider: SuggestionProvider[],\n    values: TokenizingFieldValue[],\n  ) => SuggestionProvider[];\n}\n\nfunction findProviderByToken(token: string, providers: SuggestionProvider[]) {\n  return providers.find((p) => p.token.toLowerCase() === token.toLowerCase());\n}\n\nexport function tokenizedValuesFromString(str: string, providers: SuggestionProvider[]) {\n  if (str === '') {\n    return [];\n  }\n  const tokens = str.split(',');\n  return tokens.map((token) => tokenizedValueFromString(token, providers));\n}\n\nexport function tokenizedValueFromString(\n  str: string,\n  providers: SuggestionProvider[],\n): TokenizingFieldValue {\n  const parts = str.split(':');\n  const token = parts[0];\n  if (findProviderByToken(token, providers)) {\n    if (parts.length === 2) {\n      return {token, value: parts[1]};\n    }\n    // Jobs can be `pipeline:mode` tuples, so join the \"value\" tokens back together.\n    if (token === 'job') {\n      return {token, value: parts.slice(1).join(':')};\n    }\n  }\n  return {value: str};\n}\n\nexport function stringFromValue(value: TokenizingFieldValue[]) {\n  return value\n    .filter((v) => v.value !== '')\n    .map((v) => (v.token ? `${v.token}:${v.value}` : v.value))\n    .join(',');\n}\n\n/** Provides a text field with typeahead autocompletion for key value pairs,\nwhere the key is one of a known set of \"suggestion provider tokens\". Provide\none or more SuggestionProviders to build the tree of autocompletions. The\ninput also allows for freeform typing (`value` items with no token value) */\nexport const TokenizingField: React.FC<TokenizingFieldProps> = ({\n  suggestionProviders,\n  suggestionProvidersFilter,\n  values: externalValues,\n  maxValues,\n  onChange,\n  onChangeBeforeCommit,\n  onFocus,\n  placeholder,\n  loading,\n  small,\n  className,\n}) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n  const [typed, setTyped] = React.useState<string>('');\n\n  const values = React.useMemo(() => [...externalValues], [externalValues]);\n  const typedValue = tokenizedValueFromString(typed, suggestionProviders);\n  if (isEqual(typedValue, values[values.length - 1])) {\n    values.pop();\n  }\n\n  const atMaxValues = maxValues !== undefined && values.length >= maxValues;\n\n  const filteredSuggestionProviders = suggestionProvidersFilter\n    ? suggestionProvidersFilter(suggestionProviders, values)\n    : suggestionProviders;\n\n  // Build the set of suggestions that should be displayed for the current input value.\n  // Note: \"typed\" is the text that has not yet been submitted, separate from values[].\n  const parts = typed.split(':');\n  const lastPart = parts[parts.length - 1].toLowerCase();\n  const suggestions = React.useMemo(() => {\n    if (atMaxValues) {\n      return [];\n    }\n\n    let suggestionsArr: Suggestion[] = [];\n\n    const suggestionMatchesTypedText = (s: Suggestion) =>\n      !lastPart ||\n      s.text\n        .toLowerCase()\n        .split(':')\n        .some((c) => c.includes(lastPart));\n\n    const availableSuggestionsForProvider = (provider: SuggestionProvider) => {\n      const suggestionNotUsed = (v: string) =>\n        !values.some((e) => e.token === provider.token && e.value === v);\n\n      return provider\n        .values()\n        .filter(suggestionNotUsed)\n        .map((v) => ({text: `${provider.token}:${v}`, final: true}))\n        .filter(suggestionMatchesTypedText)\n        .slice(0, MAX_SUGGESTIONS); // never show too many suggestions for one provider\n    };\n\n    if (parts.length === 1) {\n      // Suggest providers (eg: `pipeline:`) so users can discover the search space\n      suggestionsArr = filteredSuggestionProviders\n        .map((s) => ({text: `${s.token}:`, final: false}))\n        .filter(suggestionMatchesTypedText);\n\n      // Suggest value completions so users can type \"airline_\" without the \"pipeline\"\n      // prefix and get the correct suggestion.\n      if (typed.length > 0) {\n        for (const p of filteredSuggestionProviders) {\n          suggestionsArr.push(...availableSuggestionsForProvider(p));\n        }\n      }\n    }\n\n    if (parts.length === 2) {\n      // Suggest values from the chosen provider (eg: `pipeline:abc`)\n      const provider = findProviderByToken(parts[0], filteredSuggestionProviders);\n      suggestionsArr = provider ? availableSuggestionsForProvider(provider) : [];\n    }\n\n    // Truncate suggestions to the ones currently matching the typed text,\n    // and always sort them in alphabetical order.\n    suggestionsArr.sort((a, b) => a.text.localeCompare(b.text));\n\n    return suggestionsArr;\n  }, [atMaxValues, filteredSuggestionProviders, lastPart, parts, typed.length, values]);\n\n  // We need to manage selection in the dropdown by ourselves. To ensure the\n  // best behavior we store the active item's index and text (the text allows\n  // us to relocate it if it's moved and the index allows us to keep selection\n  // at the same location if the previous item is gone.)\n\n  // This hook keeps the active row state in sync with the suggestions, which\n  // are derived from the current input value.\n\n  React.useEffect(() => {\n    // If suggestions are present, autoselect the first one so the user can press\n    // enter to complete their search. (Esc + enter is how you enter your raw text.)\n    if (!active && suggestions.length) {\n      setActive({text: suggestions[0].text, idx: 0});\n      return;\n    }\n    if (!active) {\n      return;\n    }\n    if (suggestions.length === 0) {\n      setActive(null);\n      return;\n    }\n\n    // Relocate the currently active item in the latest suggestions list\n    const pos = suggestions.findIndex((a) => a.text === active.text);\n\n    // The new index is the index of the active item, or whatever item\n    // is now at it's location if it's gone, bounded to the array.\n    let nextIdx = pos !== -1 ? pos : active.idx;\n    nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n    const nextText = suggestions[nextIdx] && suggestions[nextIdx].text;\n\n    if (nextIdx !== active.idx || nextText !== active.text) {\n      setActive({text: nextText, idx: nextIdx});\n    }\n  }, [active, suggestions]);\n\n  const onConfirmSuggestion = (suggestion: Suggestion) => {\n    if (atMaxValues) {\n      return;\n    }\n\n    if (suggestion.final) {\n      // The user has finished a key-value pair\n      onConfirmText(suggestion.text);\n      setTyped('');\n      setActive(null);\n      setOpen(false);\n    } else {\n      // The user has finished a key\n      setTyped(suggestion.text);\n    }\n  };\n\n  const onConfirmText = (str: string) => {\n    if (atMaxValues) {\n      return;\n    }\n    if (str.endsWith(':')) {\n      return;\n    }\n    if (str === '') {\n      return;\n    }\n\n    setTyped('');\n    onChange([...values, tokenizedValueFromString(str, filteredSuggestionProviders)]);\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<any>) => {\n    if (atMaxValues && e.key !== 'Delete' && e.key !== 'Backspace') {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    // Enter and Return confirm the currently selected suggestion or\n    // confirm the freeform text you've typed if no suggestions are shown.\n    if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n      if (active) {\n        const picked = suggestions.find((s) => s.text === active.text);\n        if (!picked) {\n          throw new Error('Selection out of sync with suggestions');\n        }\n        onConfirmSuggestion(picked);\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (typed.length) {\n        onConfirmText(typed);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      return;\n    }\n\n    // Typing space confirms your freeform text\n    if (e.key === ' ') {\n      e.preventDefault();\n      onConfirmText(typed);\n      return;\n    }\n\n    // Escape closes the options. The options re-open if you type another char or click.\n    if (e.key === 'Escape') {\n      setActive(null);\n      setOpen(false);\n      return;\n    }\n\n    if (!open && e.key !== 'Delete' && e.key !== 'Backspace') {\n      setOpen(true);\n    }\n\n    // The up/down arrow keys shift selection in the dropdown.\n    // Note: The first down arrow press activates the first item.\n    const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n    if (shift && suggestions.length > 0) {\n      e.preventDefault();\n      let idx = (active ? active.idx : -1) + shift;\n      idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n      setActive({text: suggestions[idx].text, idx});\n    }\n  };\n\n  const menuRef = React.createRef<HTMLDivElement>();\n  React.useEffect(() => {\n    if (menuRef.current && active) {\n      const el = menuRef.current.querySelector(`[data-idx='${active.idx}']`);\n      if (el && el instanceof HTMLElement && 'scrollIntoView' in el) {\n        el.scrollIntoView({block: 'nearest'});\n      }\n    }\n  }, [menuRef, active]);\n\n  return (\n    <Popover\n      minimal={true}\n      isOpen={open && suggestions.length > 0 && !atMaxValues}\n      position={'bottom-left'}\n      content={\n        suggestions.length > 0 ? (\n          <div style={{maxHeight: 235, overflowY: 'scroll'}} ref={menuRef}>\n            <StyledMenu>\n              {suggestions.map((suggestion, idx) => (\n                <StyledMenuItem\n                  data-idx={idx}\n                  key={suggestion.text}\n                  text={suggestion.text}\n                  shouldDismissPopover={false}\n                  active={active ? active.idx === idx : false}\n                  onMouseDown={(e: React.MouseEvent<any>) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onConfirmSuggestion(suggestion);\n                    setActive(null);\n                  }}\n                />\n              ))}\n            </StyledMenu>\n          </div>\n        ) : (\n          <div />\n        )\n      }\n    >\n      <StyledTagInput\n        small={small}\n        className={className}\n        values={values.map((v) => (v.token ? `${v.token}:${v.value}` : v.value))}\n        inputValue={typed}\n        onRemove={(_, idx) => {\n          const next = [...values];\n          next.splice(idx, 1);\n          onChange(next);\n        }}\n        onInputChange={(e) => {\n          setTyped(e.currentTarget.value);\n\n          if (onChangeBeforeCommit) {\n            const tokenized = tokenizedValueFromString(\n              e.currentTarget.value,\n              filteredSuggestionProviders,\n            );\n            onChange([...values, tokenized]);\n          }\n        }}\n        inputProps={{\n          onFocus: () => {\n            setOpen(true);\n            onFocus && onFocus();\n          },\n          onBlur: () => setOpen(false),\n        }}\n        onAdd={() => false}\n        onKeyDown={onKeyDown}\n        tagProps={{minimal: true}}\n        placeholder={placeholder || 'Filter…'}\n        rightElement={\n          loading && open ? (\n            <Box style={{alignSelf: 'center'}} margin={{right: 4}}>\n              <Spinner purpose=\"body-text\" />\n            </Box>\n          ) : undefined\n        }\n      />\n    </Popover>\n  );\n};\n\nconst StyledTagInput = styled(TagInput)<{small?: boolean}>`\n  min-width: 400px;\n  max-width: 600px;\n  input {\n    font-size: 12px;\n  }\n\n  ${({small}) =>\n    small\n      ? `height: 20px;\n    min-width: 200px;\n    max-width: 800px;\n    &.bp3-tag-input {\n      min-height: 26px;\n    }\n    &.bp3-tag-input .bp3-tag-input-values {\n      height: 23px;\n      margin-top: 3px;\n    }`\n      : ``}\n`;\n\nconst StyledMenu = styled(Menu)`\n  width: 400px;\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  font-size: 13px;\n  line-height: 15px;\n`;\n","import * as React from 'react';\n\nimport {FontFamily} from '../ui/styles';\n\nconst PX_TO_UNITS = 0.62;\n\ninterface ISize {\n  width: number;\n  height: number;\n  compressionPriority?: number;\n}\n\ninterface ISVGEllipseInRectProps extends React.SVGProps<SVGEllipseElement> {\n  x?: number;\n  y?: number;\n  width: number;\n  height: number;\n}\n\n/*\nWraps <ellipse>, but takes a width and height rather than center + radius,\nmaking it compatible with SVGFlowLayoutRect (which inspects it's children's widths.)\n*/\nexport const SVGEllipseInRect = React.memo<ISVGEllipseInRectProps>((props) => {\n  const {width, height, x, y, ...rest} = props;\n  const rx = width / 2;\n  const ry = height / 2;\n  return <ellipse cx={(x || 0) + rx} cy={(y || 0) + ry} rx={rx} ry={ry} {...rest} />;\n});\n\ninterface ISVGMonospaceTextProps {\n  width?: number;\n  size: number;\n  text: string;\n  allowTwoLines?: boolean;\n}\n\nconst LINE_SPACING = 1.25;\n\nconst clipToLength = (str: string, len: number) => {\n  return str.length > len ? str.substr(0, len - 1) + '…' : str;\n};\n\n/*\nWraps <text>, exposes an intrinsic size and automatically truncates with ellipsis\nif it's given a fixed width less than the space required for it's text.\n*/\nexport class SVGMonospaceText extends React.PureComponent<\n  ISVGMonospaceTextProps & React.SVGAttributes<SVGElement>\n> {\n  static intrinsicSizeForProps(props: ISVGMonospaceTextProps): ISize {\n    return {\n      width: Math.min(props.text.length * props.size * PX_TO_UNITS),\n      height: props.size,\n    };\n  }\n\n  render() {\n    const {y, width, size, text, allowTwoLines, ...rest} = this.props;\n\n    const lineChars = width ? Math.round(width / (size * PX_TO_UNITS)) : text.length;\n    let line1 = '';\n    let line2 = '';\n\n    if (allowTwoLines) {\n      const parts = text.split('_');\n      while (parts.length && line1.length + parts[0].length <= lineChars) {\n        line1 += parts.shift() + (parts.length > 0 ? '_' : '');\n      }\n      line2 = clipToLength(parts.join('_'), lineChars);\n    } else {\n      line1 = clipToLength(text, lineChars);\n    }\n\n    const line1Y = (Number(y) || 0) - (line2.length > 0 ? (Number(size) * LINE_SPACING) / 2 : 0);\n\n    const style: React.CSSProperties = {\n      fontFamily: FontFamily.monospace,\n      fontSize: `${size}px`,\n      pointerEvents: 'none',\n    };\n\n    return (\n      <>\n        <text\n          {...rest}\n          y={line1Y}\n          style={style}\n          width={line1.length * size * PX_TO_UNITS}\n          height={size}\n          dominantBaseline=\"hanging\"\n        >\n          {line1}\n        </text>\n        {line2 && (\n          <text\n            {...rest}\n            y={line1Y + Number(size) * LINE_SPACING}\n            style={style}\n            width={line2.length * size * PX_TO_UNITS}\n            height={size}\n            dominantBaseline=\"hanging\"\n          >\n            {line2}\n          </text>\n        )}\n      </>\n    );\n  }\n}\n\ninterface ISVGFlowLayoutRectProps {\n  x?: number;\n  y?: number;\n  width?: number;\n  height: number;\n  padding: number;\n  spacing: number;\n  maxWidth?: number;\n}\n\ninterface SVGFlowLayoutChildLayout {\n  el: React.ReactElement<any>;\n  width: number;\n  height: number;\n  compressionPriority: number;\n}\n\nfunction reactChildrenToArray(children: React.ReactNode): React.ReactElement<any>[] {\n  const flattened: React.ReactNodeArray = [];\n\n  const appendChildren = (arr: React.ReactNodeArray) => {\n    arr.forEach((item) => {\n      if (!item) {\n        return;\n      }\n      if (item instanceof Array) {\n        appendChildren(item);\n      } else {\n        flattened.push(item);\n      }\n    });\n  };\n\n  appendChildren(children instanceof Array ? children : [children]);\n\n  // Not accurate, but trying to please strict TS.\n  return flattened as React.ReactElement<any>[];\n}\n/*\nRenders a <rect> and lays out it's children along a horizontal axis using the\ngiven `padding` and inter-item `spacing`. Children must either have a `width`\nprop or implement an `intrinsicSizeForProps` method that returns {width, height}.\nChildren are cloned and receive x, y, and width props from this parent.\n\nIf width or maxWidth is present, the SVGFlowLayoutRect evenly compresses\nchildren that provided an intrinsic width rather than a fixed prop width to fit\nin the available space. (TODO: Variable compression resistance?)\n*/\nexport class SVGFlowLayoutRect extends React.Component<\n  React.SVGAttributes<SVGElement> & ISVGFlowLayoutRectProps\n> {\n  static intrinsicSizeForProps(props: ISVGFlowLayoutRectProps): ISize {\n    return SVGFlowLayoutRect.computeLayout(props);\n  }\n\n  static computeLayout(\n    props: React.SVGAttributes<SVGElement> & ISVGFlowLayoutRectProps,\n  ): {\n    width: number;\n    height: number;\n    childLayouts: Array<SVGFlowLayoutChildLayout>;\n  } {\n    const {children, spacing, padding, height} = props;\n\n    const childLayouts = reactChildrenToArray(children).map((el: React.ReactElement<any>) => {\n      if (el.type && (el.type as any).intrinsicSizeForProps) {\n        return {\n          el,\n          compressionPriority: 1,\n          ...(el.type as any).intrinsicSizeForProps(el.props),\n        };\n      }\n      if (!el.props || el.props.width === undefined) {\n        console.error(el);\n        throw new Error(\n          `SVGFlowLayoutRect children must have a width prop or implement intrinsicSizeForProps`,\n        );\n      }\n      return {\n        el: el,\n        compressionPriority: 0,\n        width: el.props.width,\n        height: el.props.height,\n      };\n    });\n\n    return {\n      width:\n        childLayouts.reduce((sum, dim) => sum + dim.width, 0) +\n        padding * 2 +\n        spacing * (childLayouts.length - 1),\n      height: height,\n      childLayouts: childLayouts,\n    };\n  }\n\n  render() {\n    const {x, y, spacing, padding, maxWidth, ...rest} = this.props;\n    const layout = SVGFlowLayoutRect.computeLayout(this.props);\n    rest.children = [];\n\n    // Use the explicit width we're given, fall back to our intrinsic layout width\n    const finalWidth = this.props.width\n      ? this.props.width\n      : Math.min(maxWidth || 10000, layout.width);\n\n    // If the intrinsic layout width is greater than our final width, we need to\n    // compress the child layouts to fit in available space. We compress children\n    // with the highest compressionPriority first, distribute compression evenly\n    // among children with that priority, and then work our way down in priority\n    // until we've created enough space.\n    if (layout.width > finalWidth) {\n      const grouped: {\n        [priority: string]: SVGFlowLayoutChildLayout[];\n      } = {};\n\n      // Group child layouts by compression priority\n      layout.childLayouts.forEach((l) => {\n        const p = `${l.compressionPriority}`;\n        grouped[p] = grouped[p] || [];\n        grouped[p].push(l);\n      });\n\n      // Sort priority values so we shrink the most compressible nodes first\n      const priorities = Object.keys(grouped).sort((a, b) => parseInt(b) - parseInt(a));\n\n      for (let i = 0; i < priorities.length; i++) {\n        const passLayouts = grouped[priorities[i]];\n        const passWidth = passLayouts.reduce((sum, cl) => sum + cl.width, 0);\n        const ratio = Math.max(1, passWidth - (layout.width - finalWidth)) / passWidth;\n        if (ratio >= 0.99) {\n          break;\n        }\n\n        passLayouts.forEach((childLayout) => (childLayout.width *= ratio));\n        layout.width -= passWidth * (1 - ratio);\n      }\n    }\n\n    let acc = padding;\n\n    // Clone our react children, applying `x`, `y`, and `width`, based on our\n    // computed layout and the desired padding + inter-item spacing.\n    const arranged = layout.childLayouts.map((childLayout, idx) => {\n      const clone = React.cloneElement(childLayout.el, {\n        x: (x || 0) + acc,\n        y: (y || 0) + layout.height / 2 - childLayout.height / 2,\n        width: childLayout.width,\n        key: idx,\n      });\n\n      acc += childLayout.width;\n      if (idx + 1 < layout.childLayouts.length) {\n        acc += spacing;\n      }\n      return clone;\n    });\n\n    acc += padding;\n\n    return (\n      <>\n        <rect {...rest} x={x} y={y} width={finalWidth} height={layout.height} />\n        {arranged}\n      </>\n    );\n  }\n}\n\nexport class SVGFlowLayoutFiller extends React.PureComponent {\n  static intrinsicSizeForProps(): ISize {\n    return {\n      compressionPriority: 2,\n      width: 1000,\n      height: 1,\n    };\n  }\n  render() {\n    return <g />;\n  }\n}\n\nexport const SVGLabeledRect: React.FC<{\n  x: number;\n  y: number;\n  minified: boolean;\n  width: number;\n  height: number;\n  label: string;\n  fill: string;\n  className?: string;\n}> = ({minified, label, fill, className, ...rect}) => (\n  <g>\n    <rect {...rect} fill={fill} stroke=\"#979797\" strokeWidth={1} className={className} />\n    <SVGMonospaceText\n      x={rect.x + (minified ? 10 : 5)}\n      y={rect.y + (minified ? 10 : 5)}\n      height={undefined}\n      size={minified ? 30 : 16}\n      text={label}\n      fill={'#979797'}\n    />\n  </g>\n);\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Markdown} from '../ui/Markdown';\n\ninterface IDescriptionProps {\n  description: string | null;\n}\n\ninterface IDescriptionState {\n  hasMore: boolean;\n  expanded: boolean;\n}\n\nconst MaxHeight = 320;\n\n/*\nIf `input` begins with whitespace and every line contains at least that whitespace,\nit removes it. Otherwise, return the original string.\n*/\nfunction removeLeadingSpaces(input: string) {\n  const leadingSpaces = /^\\n?( +)/.exec(input);\n  if (leadingSpaces == null) {\n    return input;\n  }\n\n  const lines = input.split('\\n');\n  if (!lines.every((l) => l.substr(0, leadingSpaces[1].length).trim() === '')) {\n    return input;\n  }\n\n  return lines.map((l) => l.substr(leadingSpaces[1].length)).join('\\n');\n}\n\nexport class Description extends React.Component<IDescriptionProps, IDescriptionState> {\n  private _container: React.RefObject<HTMLDivElement> = React.createRef();\n\n  public state: IDescriptionState = {\n    hasMore: false,\n    expanded: false,\n  };\n\n  componentDidMount() {\n    this.updateHandleState();\n  }\n\n  componentDidUpdate() {\n    this.updateHandleState();\n  }\n\n  updateHandleState() {\n    if (!this._container.current) {\n      return;\n    }\n    const hasMore = this._container.current.clientHeight > MaxHeight;\n    if (hasMore !== this.state.hasMore) {\n      this.setState({hasMore});\n    }\n  }\n\n  render() {\n    if (!this.props.description || this.props.description.length === 0) {\n      return null;\n    }\n\n    const {expanded, hasMore} = this.state;\n    return (\n      <Container\n        onDoubleClick={() => {\n          const sel = document.getSelection();\n          if (!sel || !this._container.current) {\n            return;\n          }\n          const range = document.createRange();\n          range.selectNodeContents(this._container.current);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }}\n        style={{\n          maxHeight: expanded ? undefined : MaxHeight,\n        }}\n      >\n        {!expanded && hasMore && <Mask />}\n        {hasMore && (\n          <ShowMoreHandle onClick={() => this.setState({expanded: !expanded})}>\n            {expanded ? 'Show Less' : 'Show More'}\n          </ShowMoreHandle>\n        )}\n\n        <div ref={this._container} style={{overflowX: 'auto'}}>\n          <Markdown>{removeLeadingSpaces(this.props.description)}</Markdown>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  overflow: hidden;\n  font-size: 0.8rem;\n  position: relative;\n  p:last-child {\n    margin-bottom: 5px;\n  }\n`;\n\nconst Mask = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0) 70%,\n    rgba(255, 255, 255, 1)\n  );\n  pointer-events: none;\n  border-bottom: 1px solid #eee;\n`;\n\nconst ShowMoreHandle = styled.a`\n  line-height: 20px;\n  position: absolute;\n  padding: 0 14px;\n  bottom: 0;\n  left: 50%;\n  height: 20px;\n  transform: translate(-50%);\n  background: #eee;\n`;\n","import {NetworkStatus, QueryResult} from '@apollo/client';\nimport * as React from 'react';\n\nimport {useCountdown} from '../ui/Countdown';\nimport {RefreshableCountdown} from '../ui/RefreshableCountdown';\n\ninterface Props<TData> {\n  pollInterval: number;\n  queryResult: QueryResult<TData, any>;\n}\n\nexport const QueryCountdown = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {pollInterval, queryResult} = props;\n  const {networkStatus, refetch} = queryResult;\n\n  const countdownStatus = networkStatus === NetworkStatus.ready ? 'counting' : 'idle';\n  const timeRemaining = useCountdown({\n    duration: pollInterval,\n    status: countdownStatus,\n  });\n  const countdownRefreshing = countdownStatus === 'idle' || timeRemaining === 0;\n\n  return (\n    <RefreshableCountdown\n      refreshing={countdownRefreshing}\n      seconds={Math.floor(timeRemaining / 1000)}\n      onRefresh={() => refetch()}\n    />\n  );\n};\n","import {Button, Colors, InputGroup, Intent, Menu, MenuItem, Popover} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {dynamicKeyWithoutIndex, isDynamicStep} from '../gantt/DynamicStepSupport';\n\ninterface GraphQueryInputProps {\n  intent?: Intent;\n  items: GraphQueryItem[];\n  value: string;\n  placeholder: string;\n  autoFocus?: boolean;\n  presets?: {name: string; value: string}[];\n  width?: string | number;\n  small?: boolean;\n  className?: string;\n  disabled?: boolean;\n\n  onChange: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onFocus?: () => void;\n  onBlur?: (value: string) => void;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\n/** Generates placeholder text for the solid query box that includes a\n * practical example from the current DAG by finding the solid with the highest\n * number of immediate input or output connections and randomly highlighting\n * either the ++solid or solid++ or solid+* syntax.\n */\nconst placeholderTextForItems = (base: string, items: GraphQueryItem[]) => {\n  const seed = items.length % 3;\n\n  let placeholder = base;\n  if (items.length === 0) {\n    return placeholder;\n  }\n\n  const ranked = items.map<{\n    incount: number;\n    outcount: number;\n    name: string;\n  }>((s) => ({\n    incount: s.inputs.reduce((sum, o) => sum + o.dependsOn.length, 0),\n    outcount: s.outputs.reduce((sum, o) => sum + o.dependedBy.length, 0),\n    name: s.name,\n  }));\n\n  if (seed === 0) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+*)`;\n  } else if (seed === 1) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+)`;\n  } else if (seed === 2) {\n    const example = ranked.sort((a, b) => b.incount - a.incount)[0];\n    placeholder = `${placeholder} (ex: ++${example!.name})`;\n  }\n  return placeholder;\n};\n\nexport const GraphQueryInput = React.memo(\n  (props: GraphQueryInputProps) => {\n    const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [pendingValue, setPendingValue] = React.useState<string>(props.value);\n\n    React.useEffect(() => {\n      // props.value is our source of truth, but we hold \"un-committed\" changes in\n      // pendingValue while the field is being edited. Ensure the pending value\n      // is synced whenever props.value changes.\n      setPendingValue(props.value);\n    }, [props.value]);\n\n    const lastClause = /(\\*?\\+*)([\\w\\d\\[\\]_-]+)(\\+*\\*?)$/.exec(pendingValue);\n    let menu: JSX.Element | undefined = undefined;\n\n    const [, prefix, lastElementName, suffix] = lastClause || [];\n    const suggestions = React.useMemo(() => {\n      const available = props.items.map((s) => s.name);\n      for (const name of available) {\n        if (isDynamicStep(name)) {\n          available.push(dynamicKeyWithoutIndex(name));\n        }\n      }\n\n      return lastElementName && !suffix\n        ? uniq(available)\n            .sort()\n            .filter((n) => n.startsWith(lastElementName))\n        : [];\n    }, [lastElementName, props.items, suffix]);\n\n    const onConfirmSuggestion = (suggestion: string) => {\n      const preceding = lastClause ? pendingValue.substr(0, lastClause.index) : '';\n      setPendingValue(preceding + prefix + suggestion + suffix);\n    };\n\n    if (suggestions.length && focused) {\n      menu = (\n        <Menu style={{width: props.width || '30vw'}}>\n          {suggestions.slice(0, 15).map((suggestion) => (\n            <StyledMenuItem\n              key={suggestion}\n              text={suggestion}\n              active={active ? active.text === suggestion : false}\n              onMouseDown={(e: React.MouseEvent<any>) => {\n                e.preventDefault();\n                e.stopPropagation();\n                onConfirmSuggestion(suggestion);\n              }}\n            />\n          ))}\n        </Menu>\n      );\n    }\n\n    React.useEffect(() => {\n      if (!active && suggestions.length) {\n        setActive({text: suggestions[0], idx: 0});\n        return;\n      }\n      if (!active) {\n        return;\n      }\n      // Relocate the currently active item in the latest suggestions list\n      const pos = suggestions.findIndex((a) => a === active.text);\n\n      // The new index is the index of the active item, or whatever item\n      // is now at it's location if it's gone, bounded to the array.\n      let nextIdx = pos !== -1 ? pos : active.idx;\n      nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n      const nextText = suggestions[nextIdx];\n\n      if (nextIdx !== active.idx || nextText !== active.text) {\n        setActive({text: nextText, idx: nextIdx});\n      }\n    }, [active, suggestions]);\n\n    const onKeyDown = (e: React.KeyboardEvent<any>) => {\n      if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n        if (active && active.text) {\n          onConfirmSuggestion(active.text);\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n\n      // The up/down arrow keys shift selection in the dropdown.\n      // Note: The first down arrow press activates the first item.\n      const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n      if (shift && suggestions.length > 0) {\n        e.preventDefault();\n        let idx = (active ? active.idx : -1) + shift;\n        idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n        setActive({text: suggestions[idx], idx});\n      }\n\n      props.onKeyDown?.(e);\n    };\n\n    const onKeyUp = (e: React.KeyboardEvent<any>) => {\n      if (\n        e.key === 'Enter' ||\n        e.key === 'Return' ||\n        e.key === 'Tab' ||\n        e.key === '+' ||\n        e.key === ' ' ||\n        (e.key === '*' && pendingValue.length > 1) ||\n        (e.key === 'Backspace' && pendingValue.length)\n      ) {\n        props.onChange(pendingValue);\n      }\n    };\n\n    return (\n      <>\n        <Popover minimal={true} isOpen={menu !== undefined} position={'bottom'} content={menu}>\n          <GraphQueryInputField\n            small={props.small}\n            disabled={props.disabled}\n            intent={props.intent}\n            title=\"graph-query-input\"\n            type=\"text\"\n            value={pendingValue}\n            leftIcon={'send-to-graph'}\n            autoFocus={props.autoFocus}\n            placeholder={placeholderTextForItems(props.placeholder, props.items)}\n            onChange={(e: React.ChangeEvent<any>) => setPendingValue(e.target.value)}\n            onFocus={() => {\n              setFocused(true);\n              props.onFocus?.();\n            }}\n            onBlur={() => {\n              setFocused(false);\n              props.onChange(pendingValue);\n              props.onBlur?.(pendingValue);\n            }}\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n            style={{width: props.width || '30vw'}}\n            className={props.className}\n          />\n        </Popover>\n        {props.presets &&\n          (props.presets.find((p) => p.value === pendingValue) ? (\n            <Button\n              style={{marginLeft: 5}}\n              icon={IconNames.LAYERS}\n              rightIcon={IconNames.CROSS}\n              onClick={() => {\n                props.onChange('*');\n              }}\n            />\n          ) : (\n            <Popover\n              content={\n                <Menu>\n                  {props.presets.map((preset) => (\n                    <MenuItem\n                      key={preset.name}\n                      text={preset.name}\n                      onMouseDown={(e: React.MouseEvent<any>) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        props.onChange(preset.value);\n                      }}\n                    />\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                style={{marginLeft: 5}}\n                icon={IconNames.LAYERS}\n                rightIcon={IconNames.CARET_UP}\n              />\n            </Popover>\n          ))}\n      </>\n    );\n  },\n\n  (prevProps, nextProps) =>\n    prevProps.items === nextProps.items &&\n    prevProps.width === nextProps.width &&\n    prevProps.value === nextProps.value &&\n    isEqual(prevProps.presets, nextProps.presets),\n);\n\nconst GraphQueryInputField = styled(InputGroup)`\n  font-size: 14px;\n  & > input {\n    transition: width 100ms ease-in-out;\n  }\n\n  &.has-step {\n    box-shadow: 0 0 0 2px ${Colors.GOLD3};\n    border-radius: 3px;\n  }\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  font-size: 13px;\n  line-height: 15px;\n`;\n","import {useMutation} from '@apollo/client';\nimport {Checkbox, Button, Classes, Dialog, ProgressBar} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {TerminatePipelinePolicy} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Mono} from '../ui/Text';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {\n  Terminate,\n  Terminate_terminatePipelineExecution_PipelineRunNotFoundError,\n  Terminate_terminatePipelineExecution_PythonError,\n  Terminate_terminatePipelineExecution_UnauthorizedError,\n  Terminate_terminatePipelineExecution_TerminatePipelineExecutionFailure,\n} from './types/Terminate';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\ntype Error =\n  | Terminate_terminatePipelineExecution_TerminatePipelineExecutionFailure\n  | Terminate_terminatePipelineExecution_PipelineRunNotFoundError\n  | Terminate_terminatePipelineExecution_UnauthorizedError\n  | Terminate_terminatePipelineExecution_PythonError\n  | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<Terminate>(TERMINATE_MUTATION);\n  const policy = state.mustForce\n    ? TerminatePipelinePolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminatePipelinePolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminatePipelineExecutionSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: data?.terminatePipelineExecution});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <Checkbox\n                  checked={state.mustForce}\n                  labelElement={\n                    <Box flex={{display: 'inline-flex'}}>\n                      <Group direction=\"row\" spacing={8}>\n                        <IconWIP name=\"warning\" color={ColorsWIP.Yellow500} />\n                        <div>\n                          Force termination immediately. <strong>Warning:</strong> computational\n                          resources created by runs may not be cleaned up.\n                        </div>\n                      </Group>\n                    </Box>\n                  }\n                  onChange={onToggleForce}\n                />\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <IconWIP name=\"warning\" color={ColorsWIP.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <IconWIP name=\"check_circle\" color={ColorsWIP.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <IconWIP name=\"warning\" color={ColorsWIP.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      isCloseButtonShown={canQuicklyClose}\n      onClose={onClose}\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>{buttons()}</div>\n      </div>\n    </Dialog>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\n\nimport {SCHEDULER_FRAGMENT} from './SchedulerInfo';\nimport {SchedulerFragment} from './types/SchedulerFragment';\n\nexport const SCHEDULE_FRAGMENT = gql`\n  fragment ScheduleFragment on Schedule {\n    id\n    name\n    cronSchedule\n    executionTimezone\n    pipelineName\n    solidSelection\n    mode\n    description\n    partitionSet {\n      id\n      name\n    }\n    scheduleState {\n      id\n      ...InstigationStateFragment\n    }\n    futureTicks(limit: 5) {\n      results {\n        timestamp\n      }\n    }\n  }\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n\nexport const REPOSITORY_SCHEDULES_FRAGMENT = gql`\n  fragment RepositorySchedulesFragment on Repository {\n    name\n    id\n    location {\n      id\n      name\n    }\n    schedules {\n      id\n      ...ScheduleFragment\n    }\n    ...RepositoryInfoFragment\n  }\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FRAGMENT}\n`;\n\nexport const SCHEDULES_ROOT_QUERY = gql`\n  query SchedulesRootQuery(\n    $repositorySelector: RepositorySelector!\n    $instigationType: InstigationType!\n  ) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      __typename\n      ... on Repository {\n        id\n        ...RepositorySchedulesFragment\n      }\n      ...PythonErrorFragment\n    }\n    scheduler {\n      ...SchedulerFragment\n    }\n    unloadableInstigationStatesOrError(instigationType: $instigationType) {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${SCHEDULER_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${REPOSITORY_SCHEDULES_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n\nexport const SchedulerTimezoneNote: React.FC<{\n  schedulerOrError: SchedulerFragment;\n}> = ({schedulerOrError}) => {\n  if (\n    schedulerOrError.__typename !== 'Scheduler' ||\n    schedulerOrError.schedulerClass !== 'SystemCronScheduler'\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        color: Colors.GRAY3,\n        fontSize: 12.5,\n      }}\n    >\n      Schedule cron intervals displayed below are in the system time of the machine running the\n      scheduler.\n    </div>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Code} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {DaemonHealthFragment} from '../instance/types/DaemonHealthFragment';\nimport {Alert} from '../ui/Alert';\nimport {Group} from '../ui/Group';\nimport {FontFamily} from '../ui/styles';\n\nimport {SchedulerFragment} from './types/SchedulerFragment';\n\nexport const SCHEDULER_FRAGMENT = gql`\n  fragment SchedulerFragment on SchedulerOrError {\n    __typename\n    ... on SchedulerNotDefinedError {\n      message\n    }\n    ... on Scheduler {\n      schedulerClass\n    }\n    ...PythonErrorFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const SchedulerInfo: React.FunctionComponent<{\n  errorsOnly?: boolean;\n  schedulerOrError: SchedulerFragment;\n  daemonHealth: DaemonHealthFragment | undefined;\n}> = ({errorsOnly = false, schedulerOrError, daemonHealth}) => {\n  if (schedulerOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={schedulerOrError} />;\n  }\n\n  if (\n    schedulerOrError.__typename === 'Scheduler' &&\n    schedulerOrError.schedulerClass === 'DagsterDaemonScheduler'\n  ) {\n    let healthy = false;\n\n    if (daemonHealth) {\n      const schedulerHealths = daemonHealth.allDaemonStatuses.filter(\n        (daemon) => daemon.daemonType === 'SCHEDULER',\n      );\n      if (schedulerHealths) {\n        const schedulerHealth = schedulerHealths[0];\n        healthy = !!(schedulerHealth.required && schedulerHealth.healthy);\n      }\n    }\n\n    if (!healthy) {\n      return (\n        <Alert\n          intent=\"warning\"\n          title=\"The scheduler daemon is not running.\"\n          description={\n            <div>\n              See the{' '}\n              <a href=\"https://docs.dagster.io/overview/daemon\">dagster-daemon documentation</a> for\n              more information on how to deploy the dagster-daemon process.\n            </div>\n          }\n        />\n      );\n    }\n  }\n\n  if (schedulerOrError.__typename === 'SchedulerNotDefinedError') {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The current dagster instance does not have a scheduler configured.\"\n        description={\n          <Group direction=\"column\" spacing={12}>\n            <div>\n              A scheduler must be configured on the instance to run schedules. Therefore, the\n              schedules below are not currently running. You can configure a scheduler on the\n              instance through the <Code>dagster.yaml</Code> file in <Code>$DAGSTER_HOME</Code>\n            </div>\n            <div>\n              See the{' '}\n              <a href=\"https://docs.dagster.io/overview/instances/dagster-instance#instance-configuration-yaml\">\n                instance configuration documentation\n              </a>{' '}\n              for more information.\n            </div>\n          </Group>\n        }\n      />\n    );\n  }\n\n  if (!errorsOnly && schedulerOrError.__typename === 'Scheduler') {\n    return (\n      <Alert\n        intent=\"info\"\n        title={\n          <div>\n            Scheduler class:{' '}\n            <span style={{fontFamily: FontFamily.monospace}}>\n              {schedulerOrError.schedulerClass}\n            </span>\n          </div>\n        }\n      />\n    );\n  }\n\n  return null;\n};\n","import * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {PipelineExplorerPath} from './PipelinePathUtils';\n\nexport const useJobTitle = (explorerPath: PipelineExplorerPath) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const {pipelineName, pipelineMode} = explorerPath;\n\n  const value = React.useMemo(() => {\n    if (flagPipelineModeTuples) {\n      return `Job: ${pipelineName}${pipelineMode === 'default' ? '' : `:${pipelineMode}`}`;\n    }\n    return `Pipeline: ${pipelineName}`;\n  }, [flagPipelineModeTuples, pipelineMode, pipelineName]);\n\n  useDocumentTitle(value);\n};\n","import {useMutation} from '@apollo/client';\nimport {Button, Classes, Dialog, ProgressBar} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Mono} from '../ui/Text';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {\n  Delete,\n  Delete_deletePipelineRun_PipelineRunNotFoundError,\n  Delete_deletePipelineRun_PythonError,\n  Delete_deletePipelineRun_UnauthorizedError,\n} from './types/Delete';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\ntype Error =\n  | Delete_deletePipelineRun_PythonError\n  | Delete_deletePipelineRun_UnauthorizedError\n  | Delete_deletePipelineRun_PipelineRunNotFoundError\n  | undefined;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<Delete>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: data?.deletePipelineRun});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <IconWIP name=\"check_circle\" color={ColorsWIP.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <IconWIP name=\"warning\" color={ColorsWIP.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      isCloseButtonShown={canQuicklyClose}\n      onClose={onClose}\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>{buttons()}</div>\n      </div>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery, useMutation} from '@apollo/client';\nimport {Button, Menu, MenuDivider, MenuItem, Popover, Position} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as qs from 'query-string';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {usePermissions} from '../app/Permissions';\nimport {HighlightedCodeBlock} from '../ui/HighlightedCodeBlock';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {RUN_FRAGMENT_FOR_REPOSITORY_MATCH} from './RunFragments';\nimport {doneStatuses} from './RunStatuses';\nimport {\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  RunsQueryRefetchContext,\n  getReexecutionVariables,\n  handleLaunchResult,\n} from './RunUtils';\nimport {TerminationDialog} from './TerminationDialog';\nimport {LaunchPipelineReexecution} from './types/LaunchPipelineReexecution';\nimport {PipelineEnvironmentYamlQuery} from './types/PipelineEnvironmentYamlQuery';\nimport {RunTableRunFragment} from './types/RunTableRunFragment';\n\nexport const RunActionsMenu: React.FC<{\n  run: RunTableRunFragment;\n}> = React.memo(({run}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<'none' | 'terminate' | 'delete'>('none');\n\n  const {basePath, rootServerURI} = React.useContext(AppContext);\n  const {canTerminatePipelineExecution, canDeletePipelineRun} = usePermissions();\n\n  const [reexecute] = useMutation<LaunchPipelineReexecution>(LAUNCH_PIPELINE_REEXECUTION_MUTATION, {\n    onCompleted: refetch,\n  });\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<PipelineEnvironmentYamlQuery>(\n    PIPELINE_ENVIRONMENT_YAML_QUERY,\n    {\n      variables: {runId: run.runId},\n    },\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'PipelineRun' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRun(pipelineRun);\n  const isFinished = doneStatuses.has(run.status);\n\n  const infoReady = called ? !loading : false;\n  return (\n    <>\n      <Popover\n        content={\n          <Menu>\n            <MenuItem\n              text={loading ? 'Loading Configuration...' : 'View Configuration...'}\n              disabled={!runConfigYaml}\n              icon=\"share\"\n              onClick={() =>\n                showCustomAlert({\n                  title: 'Config',\n                  body: <HighlightedCodeBlock value={runConfigYaml || ''} language=\"yaml\" />,\n                })\n              }\n            />\n            <MenuDivider />\n            <>\n              <Tooltip\n                content={OPEN_PLAYGROUND_UNKNOWN}\n                position={Position.BOTTOM}\n                disabled={infoReady}\n                targetTagName=\"div\"\n              >\n                <MenuItem\n                  text=\"Open in Playground...\"\n                  disabled={!infoReady}\n                  icon=\"edit\"\n                  target=\"_blank\"\n                  href={workspacePipelinePathGuessRepo(\n                    run.pipelineName,\n                    run.mode,\n                    `/playground/setup?${qs.stringify({\n                      config: runConfigYaml,\n                      solidSelection: run.solidSelection,\n                    })}`,\n                  )}\n                />\n              </Tooltip>\n              <Tooltip\n                content={\n                  'Re-execute is unavailable because the pipeline is not present in the current workspace.'\n                }\n                position={Position.BOTTOM}\n                disabled={infoReady && !!repoMatch}\n                targetTagName=\"div\"\n              >\n                <MenuItem\n                  text=\"Re-execute\"\n                  disabled={!infoReady || !repoMatch}\n                  icon=\"repeat\"\n                  onClick={async () => {\n                    if (repoMatch && runConfigYaml) {\n                      const result = await reexecute({\n                        variables: getReexecutionVariables({\n                          run: {...run, runConfigYaml},\n                          style: {type: 'all'},\n                          repositoryLocationName: repoMatch.match.repositoryLocation.name,\n                          repositoryName: repoMatch.match.repository.name,\n                        }),\n                      });\n                      handleLaunchResult(basePath, run.pipelineName, result);\n                    }\n                  }}\n                />\n              </Tooltip>\n              {isFinished || !canTerminatePipelineExecution ? null : (\n                <MenuItem\n                  icon=\"stop\"\n                  text=\"Terminate\"\n                  onClick={() => setVisibleDialog('terminate')}\n                />\n              )}\n              <MenuDivider />\n            </>\n            <MenuItem\n              text=\"Download Debug File\"\n              icon=\"download\"\n              download\n              href={`${rootServerURI}/download_debug/${run.runId}`}\n            />\n            {canDeletePipelineRun ? (\n              <MenuItem icon=\"trash\" text=\"Delete\" onClick={() => setVisibleDialog('delete')} />\n            ) : null}\n          </Menu>\n        }\n        position={'bottom'}\n        onOpening={() => {\n          if (!called) {\n            loadEnv();\n          }\n        }}\n      >\n        <Button minimal={true} icon=\"more\" style={{position: 'relative', top: '-6px'}} />\n      </Popover>\n      {canTerminatePipelineExecution ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {canDeletePipelineRun ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const {canTerminatePipelineExecution, canDeletePipelineRun} = usePermissions();\n  const [visibleDialog, setVisibleDialog] = React.useState<'none' | 'terminate' | 'delete'>('none');\n\n  if (!canTerminatePipelineExecution && !canDeletePipelineRun) {\n    return null;\n  }\n\n  const unfinishedRuns = selected.filter((r) => !doneStatuses.has(r?.status));\n  const unfinishedIDs = unfinishedRuns.map((r) => r.id);\n  const unfinishedMap = unfinishedRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const selectedIDs = selected.map((run) => run.runId);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        content={\n          <Menu>\n            {canTerminatePipelineExecution ? (\n              <MenuItem\n                icon=\"stop\"\n                text={`Terminate ${unfinishedIDs.length} ${\n                  unfinishedIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={unfinishedIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeletePipelineRun ? (\n              <MenuItem\n                icon=\"trash\"\n                text={`Delete ${selectedIDs.length} ${selectedIDs.length === 1 ? 'run' : 'runs'}`}\n                disabled={selectedIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n          </Menu>\n        }\n        position={'bottom'}\n      >\n        <Button disabled={selected.length === 0} text=\"Actions\" rightIcon=\"caret-down\" small />\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={unfinishedMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n    </>\n  );\n});\n\nconst OPEN_PLAYGROUND_UNKNOWN =\n  'Playground is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml on load in Runs page. It is slow.\nconst PIPELINE_ENVIRONMENT_YAML_QUERY = gql`\n  query PipelineEnvironmentYamlQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on PipelineRun {\n        id\n        pipeline {\n          name\n        }\n        pipelineSnapshotId\n        runConfigYaml\n        ...RunFragmentForRepositoryMatch\n      }\n    }\n  }\n  ${RUN_FRAGMENT_FOR_REPOSITORY_MATCH}\n`;\n","import {gql} from '@apollo/client';\nimport {Checkbox, Colors, NonIdealState} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {usePermissions} from '../app/Permissions';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {PipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Table} from '../ui/Table';\nimport {Mono} from '../ui/Text';\nimport {TokenizingFieldValue} from '../ui/TokenizingField';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {canceledStatuses, queuedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunElapsed, RunTime, RUN_TIME_FRAGMENT, titleForRun} from './RunUtils';\nimport {RunTableRunFragment} from './types/RunTableRunFragment';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  onSetFilter: (search: TokenizingFieldValue[]) => void;\n  nonIdealState?: React.ReactNode;\n\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n}\n\ntype State = {\n  checkedRuns: Set<string>;\n  lastCheckedID: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; runId: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; runId: string; allRuns: RunTableRunFragment[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allRuns: RunTableRunFragment[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedRuns));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, runId} = action.payload;\n      checked ? copy.add(runId) : copy.delete(runId);\n      return {lastCheckedID: runId, checkedRuns: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, runId, allRuns} = action.payload;\n      const {lastCheckedID} = state;\n\n      const indexOfLast = allRuns.findIndex((run) => run.runId === lastCheckedID);\n      const indexOfChecked = allRuns.findIndex((run) => run.runId === runId);\n      if (indexOfLast === undefined || indexOfChecked === undefined) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      for (let ii = start; ii <= end; ii++) {\n        const runAtIndex = allRuns[ii];\n        checked ? copy.add(runAtIndex.runId) : copy.delete(runAtIndex.runId);\n      }\n\n      return {\n        lastCheckedID: runId,\n        checkedRuns: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allRuns} = action.payload;\n      return {\n        lastCheckedID: null,\n        checkedRuns: checked ? new Set(Array.from(allRuns.map((run) => run.runId))) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedRuns: new Set(),\n  lastCheckedID: null,\n};\n\nexport const RunTable = (props: RunTableProps) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const {runs, onSetFilter, nonIdealState, highlightedIds} = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {checkedRuns} = state;\n\n  const {canTerminatePipelineExecution, canDeletePipelineRun} = usePermissions();\n  const canTerminateOrDelete = canTerminatePipelineExecution || canDeletePipelineRun;\n\n  const onToggle = (runId: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedID) {\n      dispatch({type: 'toggle-slice', payload: {checked, runId, allRuns: runs}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, runId}});\n    }\n  };\n\n  const toggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allRuns: runs}});\n  };\n\n  const onChangeAll = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      toggleAll(e.target.checked);\n    }\n  };\n\n  if (runs.length === 0) {\n    return (\n      <Box margin={{vertical: 64}}>\n        {nonIdealState || (\n          <NonIdealState\n            icon=\"history\"\n            title=\"No runs to display\"\n            description=\"Use the Playground to launch a run.\"\n          />\n        )}\n      </Box>\n    );\n  }\n\n  const selectedFragments = runs.filter((run) => checkedRuns.has(run.runId));\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th colSpan={2}>\n            {canTerminateOrDelete ? (\n              <div style={{display: 'flex', alignItems: 'center'}}>\n                <Checkbox\n                  style={{marginBottom: 0, marginTop: 1}}\n                  indeterminate={checkedRuns.size > 0 && checkedRuns.size !== runs.length}\n                  checked={checkedRuns.size === runs.length}\n                  onChange={onChangeAll}\n                />\n                <RunBulkActionsMenu\n                  selected={selectedFragments}\n                  clearSelection={() => toggleAll(false)}\n                />\n              </div>\n            ) : null}\n          </th>\n          <th>Run ID</th>\n          <th>{flagPipelineModeTuples ? 'Job' : 'Pipeline'}</th>\n          <th style={{width: 110, minWidth: 110}}>Snapshot ID</th>\n          <th style={{width: 160}}>Timing</th>\n          {props.additionalColumnHeaders}\n          <th style={{width: 52}} />\n        </tr>\n      </thead>\n      <tbody>\n        {runs.map((run) => (\n          <RunRow\n            canTerminateOrDelete={canTerminateOrDelete}\n            run={run}\n            key={run.runId}\n            onSetFilter={onSetFilter}\n            checked={checkedRuns.has(run.runId)}\n            additionalColumns={props.additionalColumnsForRow?.(run)}\n            onToggleChecked={onToggle(run.runId)}\n            isHighlighted={highlightedIds && highlightedIds.includes(run.runId)}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on PipelineRun {\n    id\n    runId\n    status\n    stepKeysToExecute\n    canTerminate\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    solidSelection\n    status\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onSetFilter: (search: TokenizingFieldValue[]) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  isHighlighted?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onSetFilter,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  isHighlighted,\n}) => {\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  return (\n    <Row key={run.runId} highlighted={!!isHighlighted}>\n      <td style={{paddingRight: '4px'}}>\n        {canTerminateOrDelete && onToggleChecked ? (\n          <Checkbox checked={checked} onChange={onChange} />\n        ) : null}\n      </td>\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.runId} />\n      </td>\n      <td>\n        <Link to={`/instance/runs/${run.runId}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Group direction=\"column\" spacing={8}>\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <PipelineReference\n              mode={run.mode}\n              pipelineName={run.pipelineName}\n              pipelineHrefContext=\"no-link\"\n            />\n            <Link to={workspacePipelinePathGuessRepo(run.pipelineName, run.mode)}>\n              <IconWIP name=\"open_in_new\" color={Colors.BLUE3} />\n            </Link>\n          </Group>\n          <RunTags tags={run.tags} onSetFilter={onSetFilter} />\n        </Group>\n      </td>\n      <td>\n        <PipelineSnapshotLink\n          snapshotId={run.pipelineSnapshotId || ''}\n          pipelineMode={run.mode}\n          pipelineName={run.pipelineName}\n        />\n      </td>\n      <td>\n        <RunTime run={run} />\n        {queuedStatuses.has(run.status) || canceledStatuses.has(run.status) ? null : (\n          <RunElapsed run={run} />\n        )}\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu run={run} />\n      </td>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n","import animate from 'amator';\nimport * as React from 'react';\n\nimport {GanttViewport} from './Constants';\n\n/**\n * useViewport is a React hook that exposes a viewport (top/left/width/height)\n * representing the currently visible region of a scrolling contaienr <div>.\n * It uses a ResizeObserver and an onScroll handler to monitor the viewport of the\n * container. To use, spread the returned `containerProps` onto the container div.\n */\nexport const useViewport = (\n  options: {\n    initialOffset?: (el: HTMLElement) => {left: number; top: number};\n  } = {},\n) => {\n  const ref = React.useRef<any>();\n  const [offset, setOffset] = React.useState<{left: number; top: number}>({\n    left: 0,\n    top: 0,\n  });\n  const [size, setSize] = React.useState<{width: number; height: number}>({\n    width: 0,\n    height: 0,\n  });\n\n  const {initialOffset} = options;\n\n  // Monitor the container for size changes (if possible, otherwise fall back)\n  // to capturing the initial size only. (Only old FF).\n  const measureRef = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const onApplySize = (next: {width: number; height: number}) => {\n      setSize({width: next.width, height: next.height});\n      if (!ref.current.__sized && next.width !== 0 && initialOffset) {\n        const targetOffset = initialOffset(ref.current);\n        ref.current.scrollTop = targetOffset.top;\n        ref.current.scrollLeft = targetOffset.left;\n        setOffset(targetOffset);\n        ref.current.__sized = true;\n      }\n    };\n\n    let resizeObserver: any;\n    if (ref.current instanceof HTMLElement) {\n      if ('ResizeObserver' in window) {\n        resizeObserver = new window['ResizeObserver']((entries: any) => {\n          if (entries[0].target === ref.current) {\n            onApplySize({width: ref.current.clientWidth, height: ref.current.clientHeight});\n          }\n        });\n        resizeObserver.observe(ref.current);\n      } else {\n        console.warn(`No ResizeObserver support, or useViewport is attached to a non-DOM node?`);\n        onApplySize({width: ref.current.clientWidth, height: ref.current.clientHeight});\n      }\n    }\n    return () => {\n      resizeObserver?.disconnect();\n    };\n  }, [initialOffset]);\n\n  React.useEffect(measureRef, [measureRef]);\n\n  // Monitor the container for scroll offset changes\n  const animation = React.useRef<any>(null);\n\n  const onScroll = (e: React.UIEvent) => {\n    if (\n      Math.floor(offset.left) === e.currentTarget.scrollLeft &&\n      Math.floor(offset.top) === e.currentTarget.scrollTop\n    ) {\n      return;\n    }\n    if (animation.current) {\n      animation.current.cancel();\n    }\n    setOffset({\n      left: e.currentTarget.scrollLeft,\n      top: e.currentTarget.scrollTop,\n    });\n  };\n\n  const onMoveToViewport = (targetOffset: {left: number; top: number}, animated: boolean) => {\n    const width = ref.current.clientWidth;\n    const height = ref.current.clientHeight;\n\n    if (animation.current) {\n      animation.current.cancel();\n      animation.current = null;\n    }\n\n    targetOffset.left = Math.min(ref.current.scrollWidth - width, Math.max(0, targetOffset.left));\n    targetOffset.top = Math.min(ref.current.scrollHeight - height, Math.max(0, targetOffset.top));\n\n    const onDone = () => {\n      ref.current.scrollTop = targetOffset.top;\n      ref.current.scrollLeft = targetOffset.left;\n      setOffset(targetOffset);\n      animation.current = null;\n    };\n    if (animated) {\n      animation.current = animate(offset, targetOffset, {\n        step: (v: any) => {\n          ref.current.scrollTop = v.top;\n          ref.current.scrollLeft = v.left;\n          setOffset({left: v.left, top: v.top});\n        },\n        done: onDone,\n      });\n    } else {\n      onDone();\n    }\n  };\n\n  // There are scenarios where the exported `container ref` isn't attached to a component immediately\n  // (eg the parent is showing a loading state). This means it may be undefined during our initial render\n  // and we need to measure it when it's actually assigned a value.\n  const setRef = React.useCallback(\n    (el: any) => {\n      if (el === ref.current) {\n        return;\n      }\n      ref.current = el;\n      measureRef();\n    },\n    [measureRef],\n  );\n\n  return {\n    viewport: {...offset, ...size} as GanttViewport,\n    containerProps: {\n      ref: setRef,\n      onScroll,\n    },\n    onMoveToViewport,\n  };\n};\n","import {Colors} from '@blueprintjs/core';\nimport {Tooltip2} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport const STEP_STATUS_COLORS = {\n  SUCCESS: '#009857',\n  FAILURE: Colors.RED3,\n  SKIPPED: Colors.GOLD3,\n};\n\n// In CSS, you can layer multiple backgrounds on top of each other by comma-separating values in\n// `background`. However, this only works with gradients, not with primitive color values. To do\n// hovered + red without color math (?), just stack the colors as flat gradients.\nconst flatGradient = (color: string) => `linear-gradient(to left, ${color} 0%, ${color} 100%)`;\nconst flatGradientStack = (colors: string[]) => colors.map(flatGradient).join(',');\n\nconst SuccessColorForProps = ({dimSuccesses}: {dimSuccesses?: boolean}) =>\n  dimSuccesses ? '#CFE6DC' : STEP_STATUS_COLORS.SUCCESS;\n\nexport const GridColumn = styled.div<{\n  disabled?: boolean;\n  hovered?: boolean;\n  focused?: boolean;\n  multiselectFocused?: boolean;\n  dimSuccesses?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  line-height: 0;\n\n  ${({disabled, focused, multiselectFocused, hovered}) =>\n    !disabled &&\n    !focused &&\n    !multiselectFocused &&\n    `&${hovered ? '' : ':hover'} {\n    background: ${Colors.LIGHT_GRAY3};\n    cursor: default;\n    ${TopLabelTiltedInner} {\n      background: ${Colors.LIGHT_GRAY5};\n      .tilted {\n        background: ${Colors.LIGHT_GRAY3};\n      }\n    }\n  }`}\n\n  ${({disabled}) =>\n    disabled &&\n    `\n      ${TopLabelTiltedInner} {\n        color: ${Colors.GRAY3}\n      }\n    `}\n\n  ${({focused}) =>\n    focused &&\n    `background: ${Colors.BLUE4};\n    ${LeftLabel} {\n      color: white;\n    }\n    ${TopLabelTiltedInner} {\n      background: ${Colors.LIGHT_GRAY5};\n      color: white;\n      .tilted {\n        background: ${Colors.BLUE4};\n      }\n    }\n  }`}\n\n  ${({multiselectFocused}) =>\n    multiselectFocused &&\n    `background: ${Colors.BLUE5};\n    ${LeftLabel} {\n      color: white;\n    }\n    ${TopLabelTiltedInner} {\n      background: ${Colors.LIGHT_GRAY5};\n      color: white;\n      .tilted {\n        background: ${Colors.BLUE5};\n      }\n    }\n  }`}\n\n  .cell {\n    height: 23px;\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 12px;\n    padding: 2px;\n    box-sizing: border-box;\n    line-height: initial;\n  }\n\n  .square {\n    width: 23px;\n    height: 23px;\n    display: inline-block;\n\n    &:hover:not(.empty) {\n      background: ${Colors.BLUE5};\n    }\n    &:before {\n      content: ' ';\n      display: inline-block;\n      width: 15px;\n      height: 15px;\n      margin: 4px;\n    }\n    &.success {\n      &:before {\n        background: ${SuccessColorForProps};\n      }\n    }\n    &.success-skipped {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${SuccessColorForProps} 40%,\n          ${STEP_STATUS_COLORS.SKIPPED} 41%\n        );\n      }\n    }\n    &.success-failure {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${SuccessColorForProps} 40%,\n          ${STEP_STATUS_COLORS.FAILURE} 41%\n        );\n      }\n    }\n    &.failure {\n      &:before {\n        background: ${STEP_STATUS_COLORS.FAILURE};\n      }\n    }\n    &.failure-success {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.FAILURE} 40%,\n          ${SuccessColorForProps} 41%\n        );\n      }\n    }\n    &.failure-skipped {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.FAILURE} 40%,\n          ${STEP_STATUS_COLORS.SKIPPED} 41%\n        );\n      }\n    }\n    &.failure-blank {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.FAILURE} 40%,\n          rgba(150, 150, 150, 0.3) 41%\n        );\n      }\n    }\n    &.skipped {\n      &:before {\n        background: ${STEP_STATUS_COLORS.SKIPPED};\n      }\n    }\n    &.skipped-success {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.SKIPPED} 40%,\n          ${SuccessColorForProps} 41%\n        );\n      }\n    }\n    &.skipped-failure {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.SKIPPED} 40%,\n          ${STEP_STATUS_COLORS.FAILURE} 41%\n        );\n      }\n    }\n    &.missing {\n      &:before {\n        background: ${Colors.WHITE};\n      }\n    }\n  }\n`;\n\nexport const LeftLabel = styled.div<{hovered?: boolean; redness?: number}>`\n  height: 23px;\n  line-height: 23px;\n  font-size: 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background: ${({redness, hovered}) =>\n    flatGradientStack([\n      redness ? `rgba(255, 0, 0, ${redness * 0.6})` : 'transparent',\n      hovered ? Colors.LIGHT_GRAY2 : 'transparent',\n    ])};\n`;\n\nexport const TopLabel = styled.div`\n  position: relative;\n  height: 70px;\n  padding: 4px;\n  padding-bottom: 0;\n  min-width: 15px;\n  align-items: flex-end;\n  display: flex;\n`;\n\nconst TITLE_HEGIHT = 55;\nconst ROTATION_DEGREES = 41;\n\nexport const TopLabelTilted: React.FC<{label: string}> = ({label}) => {\n  const node = React.useRef<HTMLDivElement>(null);\n  const [tooltip, showTooltip] = React.useState(false);\n\n  // On mount, measure whether the height of the rotated text is greater than the container.\n  // If so, we'll display a tooltip so that the text can be made visible on hover.\n  React.useEffect(() => {\n    if (node.current) {\n      const nodeWidth = node.current.offsetWidth;\n      const rotatedHeight = Math.sin(ROTATION_DEGREES * (Math.PI / 180)) * nodeWidth;\n      if (rotatedHeight > TITLE_HEGIHT) {\n        showTooltip(true);\n      }\n    }\n  }, []);\n\n  const content = (\n    <TopLabelTiltedInner>\n      <div className=\"tilted\" ref={node}>\n        {label}\n      </div>\n    </TopLabelTiltedInner>\n  );\n\n  return tooltip ? (\n    <Tooltip2 placement=\"bottom\" content={label}>\n      {content}\n    </Tooltip2>\n  ) : (\n    content\n  );\n};\n\nconst TopLabelTiltedInner = styled.div`\n  position: relative;\n  height: ${TITLE_HEGIHT}px;\n  padding: 4px;\n  padding-bottom: 0;\n  min-width: 15px;\n  margin-bottom: 15px;\n  align-items: end;\n  display: flex;\n  line-height: normal;\n\n  & > div.tilted {\n    font-size: 12px;\n    white-space: nowrap;\n    position: absolute;\n    bottom: -20px;\n    left: 0;\n    padding: 2px;\n    padding-right: 4px;\n    padding-left: 0;\n    transform: rotate(-${ROTATION_DEGREES}deg);\n    transform-origin: top left;\n  }\n`;\n\nexport const GridFloatingContainer = styled.div<{floating: boolean}>`\n  display: flex;\n  border-right: 1px solid ${Colors.GRAY5};\n  padding-bottom: 16px;\n  width: 330px;\n  z-index: 1;\n  ${({floating}) => (floating ? 'box-shadow: 1px 0 4px rgba(0, 0, 0, 0.15)' : '')};\n`;\n\nexport const GridScrollContainer = styled.div`\n  padding-right: 60px;\n  padding-bottom: 16px;\n  overflow-x: scroll;\n  overscroll-behavior-x: contain;\n  z-index: 0;\n  background: ${Colors.LIGHT_GRAY5};\n  flex: 1;\n  scrollbar-color: ${Colors.GRAY2} ${Colors.LIGHT_GRAY3};\n  scrollbar-width: thin;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar:vertical {\n    width: 11px;\n  }\n  &::-webkit-scrollbar:horizontal {\n    height: 11px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 8px;\n    border: 2px solid ${Colors.LIGHT_GRAY3};\n    background-color: ${Colors.GRAY2};\n  }\n  &::-webkit-scrollbar-track {\n    background-color: ${Colors.LIGHT_GRAY3};\n  }\n`;\n","/**\n * Solids with dynamic outputs yield execution plans like step_a => step_b[?] => step_c[?],\n * where the index syntax indicates that step_b and step_c may be invoked an arbitrary number\n * of times. At runtime, Dagit replaces and duplicates these \"planned dynamic steps\" as it\n * observes invocations in the logs.\n *\n * Dagit currently parses step keys to implement this behavior and assumes that:\n *  - [?] Indicates a planned dynamic step\n *  - [ and ] are only used in dynamic steps\n *  - Index values are arbitrary (eg: step[1] or step[A] or step[US-East-1])\n *  - Index values are propagated through the entire subgraph after a dynamic invocation\n */\nexport function isDynamicStep(stepKey: string) {\n  return stepKey.endsWith(']');\n}\n\nexport function invocationsOfPlannedDynamicStep(plannedStepKey: string, runtimeStepKeys: string[]) {\n  return runtimeStepKeys.filter((k) => k.startsWith(plannedStepKey.replace('?]', '')));\n}\n\nexport function dynamicKeyWithoutIndex(stepKey: string) {\n  return stepKey.split('[')[0];\n}\n\nexport function replacePlannedIndex(stepKey: string, stepKeyWithIndex: string) {\n  return stepKey.replace('[?]', stepKeyWithIndex.match(/(\\[.*\\])/)![1]);\n}\n","import {Colors} from '@blueprintjs/core';\n\nimport {IRunMetadataDict, IStepAttempt, IStepState} from '../runs/RunMetadataProvider';\n\nimport {\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  BOX_WIDTH,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMarker,\n  GanttChartMode,\n  IGanttNode,\n  LEFT_INSET,\n  FLAT_INSET_FROM_PARENT,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\n\nexport interface BuildLayoutParams {\n  nodes: IGanttNode[];\n  mode: GanttChartMode;\n}\n\nconst ROUNDING_GRADIENT = 'linear-gradient(180deg, rgba(255,255,255,0.15), rgba(0,0,0,0.1))';\n\nexport const buildLayout = (params: BuildLayoutParams) => {\n  const {nodes, mode} = params;\n\n  // Step 1: Place the nodes that have no dependencies into the layout.\n  const hasNoDependencies = (g: IGanttNode) =>\n    !g.inputs.some((i) => i.dependsOn.some((s) => nodes.find((o) => o.name === s.solid.name)));\n\n  const boxes: GanttChartBox[] = nodes.filter(hasNoDependencies).map((node) => ({\n    node: node,\n    key: node.name,\n    state: undefined,\n    children: [],\n    x: -1,\n    y: -1,\n    root: true,\n    width: BOX_WIDTH,\n  }));\n\n  // Step 2: Recursively iterate through the graph and insert child nodes\n  // into the `boxes` array, ensuring that their positions in the array are\n  // always greater than their parent(s) position (which requires correction\n  // because boxes can have multiple dependencies.)\n  const roots = [...boxes];\n  roots.forEach((box) => addChildren(boxes, box, params));\n\n  // Step 3: Assign X values (pixels) to each box by traversing the graph from the\n  // roots onward and pushing things to the right as we go.\n  const deepen = (box: GanttChartBox, x: number) => {\n    if (box.x >= x) {\n      // If this box is already further to the right than required by it's parent,\n      // we can safely stop traversing this branch of the graph.\n      return;\n    }\n    box.x = x;\n    box.children.forEach((child) => deepen(child, box.x + box.width + BOX_SPACING_X));\n  };\n  roots.forEach((box) => deepen(box, LEFT_INSET));\n\n  const parents: {[name: string]: GanttChartBox[]} = {};\n  const boxesByY: {[y: string]: GanttChartBox[]} = {};\n\n  // Step 4: Assign Y values (row numbers not pixel values)\n  // First put each box on it's own line. We know this will generate a fine gantt viz\n  // because we sorted the boxes array as we built it.\n  boxes.forEach((box, idx) => {\n    box.y = idx;\n    box.children.forEach((child) => {\n      parents[child.node.name] = parents[child.node.name] || [];\n      parents[child.node.name].push(box);\n    });\n  });\n\n  boxes.forEach((box) => {\n    boxesByY[`${box.y}`] = boxesByY[`${box.y}`] || [];\n    boxesByY[`${box.y}`].push(box);\n  });\n\n  // Next, start at the bottom of the viz and \"collapse\" boxes up on to the previous line\n  // as long as that does not result in them being higher than their parents AND does\n  // not cause them to sit on top of an existing on-the-same-line A ---> B arrow.\n\n  // This makes basic box series (A -> B -> C -> D) one row instead of four rows.\n\n  let changed = true;\n  while (changed) {\n    changed = false;\n    for (let idx = boxes.length - 1; idx > 0; idx--) {\n      const box = boxes[idx];\n      const boxParents = parents[box.node.name] || [];\n      const highestYParent = boxParents.sort((a, b) => b.y - a.y)[0];\n      if (!highestYParent) {\n        continue;\n      }\n      // Don't re-order the first row of nodes that \"fan out\" from a dynamic output. this\n      // ensures that these nodes are always \"waterfall\" visually by ascending index.\n      if (isDynamicStep(box.node.name) && !isDynamicStep(highestYParent.node.name)) {\n        continue;\n      }\n      const onTargetY = boxesByY[`${highestYParent.y}`];\n      const taken = onTargetY.find((r) => r.x === box.x);\n      if (taken) {\n        continue;\n      }\n\n      const parentX = highestYParent.x;\n      const willCross = onTargetY.some((r) => r.x > parentX && r.x < box.x);\n      const willCauseCrossing = onTargetY.some(\n        (r) => r.x < box.x && r.children.some((c) => c.y >= highestYParent.y && c.x > box.x),\n      );\n      if (willCross || willCauseCrossing) {\n        continue;\n      }\n\n      boxesByY[`${box.y}`] = boxesByY[`${box.y}`].filter((b) => b !== box);\n      box.y = highestYParent.y;\n      boxesByY[`${box.y}`].push(box);\n\n      changed = true;\n      break;\n    }\n  }\n\n  if (mode === GanttChartMode.FLAT) {\n    // Now that we've inlined chains of boxes where possible, flatten everything back out onto the\n    // Y axis. Doing this after inlining ensures that children are close to their parents in the\n    // resulting tree rather than placed randomly before their mutual dependents.\n    let bottomY = 0;\n    for (const y of Object.keys(boxesByY)) {\n      const row = boxesByY[y];\n      if (!row.length) {\n        continue;\n      }\n      let x = row[0].root ? LEFT_INSET : parents[row[0].node.name][0].x + FLAT_INSET_FROM_PARENT;\n      for (const box of row) {\n        box.x = x;\n        box.y = bottomY;\n        bottomY += 1;\n        x += FLAT_INSET_FROM_PARENT;\n      }\n    }\n    boxes.sort((a, b) => a.y - b.y || a.x - b.x);\n  } else {\n    // Since we've inlined boxes, shift rows up and fill empty space until every Y value has a box.\n    changed = true;\n    while (changed) {\n      changed = false;\n      const maxY = boxes.reduce((m, r) => Math.max(m, r.y), 0);\n      for (let y = 0; y < maxY; y++) {\n        const empty = !boxes.some((r) => r.y === y);\n        if (empty) {\n          boxes.filter((r) => r.y > y).forEach((r) => (r.y -= 1));\n          changed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {boxes, markers: []} as GanttChartLayout;\n};\n\nconst ensureChildrenAfterParentInArray = (\n  boxes: GanttChartBox[],\n  childIdx: number,\n  parentIdx: number,\n) => {\n  if (parentIdx <= childIdx) {\n    return;\n  }\n  const [child] = boxes.splice(childIdx, 1);\n  boxes.push(child);\n  const newIdx = boxes.length - 1;\n  for (const subchild of child.children) {\n    ensureChildrenAfterParentInArray(boxes, boxes.indexOf(subchild), newIdx);\n  }\n};\n\nconst addChildren = (boxes: GanttChartBox[], box: GanttChartBox, params: BuildLayoutParams) => {\n  const idx = boxes.indexOf(box);\n  const seen: string[] = [];\n  const added: GanttChartBox[] = [];\n\n  for (const out of box.node.outputs) {\n    for (const dep of out.dependedBy) {\n      const depNode = params.nodes.find((n) => dep.solid.name === n.name);\n      if (!depNode) {\n        continue;\n      }\n\n      if (seen.includes(depNode.name)) {\n        continue;\n      }\n      seen.push(depNode.name);\n\n      const depBoxIdx = boxes.findIndex((r) => r.node === depNode);\n      let depBox: GanttChartBox;\n\n      if (depBoxIdx === -1) {\n        depBox = {\n          children: [],\n          key: depNode.name,\n          node: depNode,\n          state: undefined,\n          width: BOX_WIDTH,\n          root: false,\n          x: 0,\n          y: -1,\n        };\n        boxes.push(depBox);\n        added.push(depBox);\n      } else {\n        depBox = boxes[depBoxIdx];\n        ensureChildrenAfterParentInArray(boxes, depBoxIdx, idx);\n      }\n\n      box.children.push(depBox);\n    }\n  }\n\n  // Note: To limit the amount of time we spend shifting elements of our `boxes` array to keep it\n  // ordered (knowing that parents appear before children gives us more opportunities for early\n  // returns, etc. elsewhere), we add all of our immediate children and THEN proceed in to the next layer.\n  for (const depBox of added) {\n    addChildren(boxes, depBox, params);\n  }\n};\n\nconst ColorsForStates = {\n  [IStepState.RETRY_REQUESTED]: Colors.ORANGE3,\n  [IStepState.RUNNING]: Colors.GRAY3,\n  [IStepState.SUCCEEDED]: Colors.GREEN3,\n  [IStepState.FAILED]: Colors.RED3,\n  [IStepState.SKIPPED]: 'rgb(173, 185, 152)',\n};\n\nexport const boxStyleFor = (\n  state: IStepState | undefined,\n  context: {\n    metadata: IRunMetadataDict;\n    options: {mode: GanttChartMode};\n  },\n) => {\n  // Not running and not viewing waterfall? We always use a nice blue\n  if (\n    !context.metadata.startedPipelineAt &&\n    context.options.mode !== GanttChartMode.WATERFALL_TIMED\n  ) {\n    return {background: `${ROUNDING_GRADIENT}, #2491eb`};\n  }\n\n  // Step has started and has state? Return state color.\n  if (state && state !== IStepState.PREPARING) {\n    return {\n      background: `${ROUNDING_GRADIENT}, ${ColorsForStates[state] || Colors.GRAY3}`,\n    };\n  }\n\n  // Step has not started, use \"hypothetical dotted box\".\n  return {\n    color: Colors.DARK_GRAY4,\n    background: Colors.WHITE,\n    border: `1.5px dotted ${Colors.LIGHT_GRAY1}`,\n    boxShadow: `none`,\n  };\n};\n\n// Does a shallow clone of the boxes so attributes (`width`, `x`, etc) can be mutated.\n// This requires special logic because (for easy graph travesal), boxes.children references\n// other elements of the boxes array. A basic deepClone would replicate these into\n// copies rather than references.\nconst cloneLayout = ({boxes, markers}: GanttChartLayout): GanttChartLayout => {\n  const map = new WeakMap();\n  const nextMarkers = markers.map((m) => ({...m}));\n  const nextBoxes: GanttChartBox[] = [];\n  for (const box of boxes) {\n    const next = {...box};\n    nextBoxes.push(next);\n    map.set(box, next);\n  }\n  for (let ii = 0; ii < boxes.length; ii++) {\n    nextBoxes[ii].children = boxes[ii].children.map((c) => map.get(c));\n  }\n\n  return {boxes: nextBoxes, markers: nextMarkers};\n};\n\nconst positionAndSplitBoxes = (\n  boxes: GanttChartBox[],\n  metadata: IRunMetadataDict,\n  positionFor: (\n    box: GanttChartBox,\n    run?: IStepAttempt | null,\n    runIdx?: number,\n  ) => {width: number; x: number},\n) => {\n  // Apply X values + widths to boxes, and break apart retries into their own boxes by looking\n  // at the transitions recorded for each step.\n  for (let ii = boxes.length - 1; ii >= 0; ii--) {\n    const box = boxes[ii];\n    const meta = metadata.steps[box.node.name];\n    if (!meta) {\n      Object.assign(box, positionFor(box));\n      continue;\n    }\n    if (meta.attempts.length === 0) {\n      Object.assign(box, positionFor(box));\n      box.state = meta.state;\n      continue;\n    }\n\n    const runBoxes: GanttChartBox[] = [];\n    meta.attempts.forEach((run, runIdx) => {\n      runBoxes.push({\n        ...box,\n        ...positionFor(box, run, runIdx),\n        key: `${box.key}-${runBoxes.length}`,\n        state: run.exitState || IStepState.RUNNING,\n      });\n    });\n\n    // Move the children (used to draw outbound lines) to the last box\n    for (let ii = 0; ii < runBoxes.length - 1; ii++) {\n      runBoxes[ii].children = [runBoxes[ii + 1]];\n    }\n    runBoxes[runBoxes.length - 1].children = box.children;\n\n    Object.assign(box, runBoxes[0]);\n    // Add additional boxes we created for retries\n    if (runBoxes.length > 1) {\n      boxes.splice(ii, 0, ...runBoxes.slice(1));\n    }\n  }\n};\n\n/** Traverse the graph from the root and place boxes that still have x=0 locations.\n(Unstarted or skipped boxes) so that they appear downstream of running boxes\nwe have position / time data for. */\nconst positionUntimedBoxes = (boxes: GanttChartBox[], earliestAllowedX: number) => {\n  const unstarted = boxes.filter((box) => box.x === 0);\n\n  const visit = (box: GanttChartBox, parentX: number) => {\n    if (box.x === 0) {\n      // If we are visiting the box for the first time (by traversing the tree from\n      // another starting box), starting another pass using it as the root is unnecessary.\n      const idx = unstarted.indexOf(box);\n      if (idx !== -1) {\n        unstarted.splice(idx, 1);\n      }\n    }\n\n    box.x = Math.max(box.x, earliestAllowedX, parentX);\n\n    const minXForUnstartedChildren = box.x + box.width + BOX_SPACING_X;\n    for (const child of box.children) {\n      if (child.x < minXForUnstartedChildren) {\n        visit(child, minXForUnstartedChildren);\n      }\n    }\n  };\n\n  let box: GanttChartBox | undefined;\n  while ((box = unstarted.shift())) {\n    visit(box, earliestAllowedX);\n  }\n};\n\nexport const adjustLayoutWithRunMetadata = (\n  layout: GanttChartLayout,\n  options: GanttChartLayoutOptions,\n  metadata: IRunMetadataDict,\n  scale: number,\n  nowMs: number,\n): GanttChartLayout => {\n  // Clone the layout into a new set of JS objects so that React components can do shallow\n  // comparison between the old set and the new set and code below can traverse + mutate\n  // in place.\n  let {boxes} = cloneLayout(layout);\n  const markers: GanttChartMarker[] = [];\n\n  // Move and size boxes based on the run metadata. Note that we don't totally invalidate\n  // the pre-computed layout for the execution plan, (and shouldn't have to since the run's\n  // step ordering, etc. should obey the constraints we already planned for). We just push\n  // boxes around on their existing rows.\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    const startedPipelineAt = metadata.startedPipelineAt || nowMs;\n    const xForMs = (time: number) => LEFT_INSET + (time - startedPipelineAt) * scale;\n    const widthForMs = ({start, end}: {start: number; end?: number}) =>\n      Math.max(BOX_DOT_WIDTH_CUTOFF, ((end || nowMs) - start) * scale);\n\n    positionAndSplitBoxes(boxes, metadata, (box, run) => ({\n      x: run ? xForMs(run.start) : 0,\n      width: run ? widthForMs(run) : BOX_WIDTH,\n    }));\n\n    positionUntimedBoxes(boxes, xForMs(nowMs) + BOX_SPACING_X);\n\n    // Add markers to the layout using the run metadata\n    metadata.globalMarkers.forEach((m) => {\n      if (m.start === undefined) {\n        return;\n      }\n      markers.push({\n        key: `global:${m.key}`,\n        y: 0,\n        x: xForMs(m.start),\n        width: widthForMs({start: m.start, end: m.end}),\n      });\n    });\n    Object.entries(metadata.steps).forEach(([name, step]) => {\n      for (const m of step.markers) {\n        if (m.start === undefined) {\n          continue;\n        }\n        const stepBox = layout.boxes.find((b) => b.node.name === name);\n        if (!stepBox) {\n          continue;\n        }\n\n        markers.push({\n          key: `${name}:${m.key}`,\n          y: stepBox.y,\n          x: xForMs(m.start),\n          width: widthForMs({start: m.start, end: m.end}),\n        });\n      }\n    });\n\n    // Apply display options / filtering\n    if (options.hideWaiting) {\n      boxes = boxes.filter((b) => !!metadata.steps[b.node.name]?.state);\n    }\n  } else if (options.mode === GanttChartMode.WATERFALL) {\n    positionAndSplitBoxes(boxes, metadata, (box, run, runIdx) => ({\n      x: box.x + (runIdx ? (BOX_SPACING_X + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else if (options.mode === GanttChartMode.FLAT) {\n    positionAndSplitBoxes(boxes, metadata, (box, run, runIdx) => ({\n      x: box.x + (runIdx ? (2 + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else {\n    throw new Error('Invalid mdoe ');\n  }\n\n  return {boxes, markers};\n};\n\n/**\n * Returns a set of query presets that highlight interesting slices of the visualization.\n */\nexport const interestingQueriesFor = (metadata: IRunMetadataDict, layout: GanttChartLayout) => {\n  if (layout.boxes.length === 0) {\n    return;\n  }\n  const results: {name: string; value: string}[] = [];\n\n  const errorsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k].state === IStepState.FAILED)\n    .map((k) => `+${k}`)\n    .join(', ');\n  if (errorsQuery) {\n    results.push({name: 'Errors', value: errorsQuery});\n  }\n\n  const slowStepsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]?.end && metadata.steps[k]?.start)\n    .sort(\n      (a, b) =>\n        metadata.steps[b]!.end! -\n        metadata.steps[b]!.start! -\n        (metadata.steps[a]!.end! - metadata.steps[a]!.start!),\n    )\n    .slice(0, 5)\n    .map((k) => `${k}`)\n    .join(', ');\n  if (slowStepsQuery) {\n    results.push({name: 'Slowest Individual Steps', value: slowStepsQuery});\n  }\n\n  const rightmostCompletedBox = [...layout.boxes]\n    .filter((b) => metadata.steps[b.node.name]?.end)\n    .sort((a, b) => b.x + b.width - (a.x + a.width))[0];\n\n  if (rightmostCompletedBox) {\n    results.push({\n      name: 'Slowest Path',\n      value: `*${rightmostCompletedBox.node.name}`,\n    });\n  }\n\n  return results;\n};\n","import {Button} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {IconWIP} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FunctionComponent<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <div style={{textAlign: 'center', marginBottom: 10}}>\n      <Button\n        style={{\n          marginRight: 4,\n        }}\n        disabled={!hasPrevCursor}\n        icon={IconNames.ARROW_LEFT}\n        onClick={popCursor}\n      >\n        Prev Page\n      </Button>\n      <Button\n        style={{\n          marginLeft: 4,\n        }}\n        disabled={!hasNextCursor}\n        rightIcon={IconNames.ARROW_RIGHT}\n        onClick={advanceCursor}\n      >\n        Next Page\n      </Button>\n    </div>\n  );\n};\n\nexport const CursorHistoryControls: React.FunctionComponent<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorHistoryControlsContainer>\n      <Button\n        icon={<IconWIP name=\"arrow_back\" />}\n        style={{marginRight: 4}}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n      <Button\n        rightIcon={<IconWIP name=\"arrow_forward\" />}\n        style={{marginLeft: 4}}\n        disabled={!hasPrevCursor}\n        onClick={popCursor}\n      >\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n    </CursorHistoryControlsContainer>\n  );\n};\n\nconst CursorHistoryControlsContainer = styled.div`\n  text-align: center;\n  white-space: nowrap;\n\n  @media (max-width: 1000px) {\n    & .hideable-button-text {\n      display: none;\n    }\n  }\n`;\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","export type Edge = {a: string; b: string};\n\nexport const isHighlighted = (edges: Edge[], {a, b}: Edge) =>\n  edges.some((h) => (h.a === a && h.b === b) || (h.b === a && h.a === b));\n\nexport const isSolidHighlighted = (edges: Edge[], name: string) =>\n  edges.some((h) => h.a.split(':')[0] === name || h.b.split(':')[0] === name);\n","import {gql} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\ntype ConfigTypeSchemaTheme = 'dark' | 'light';\n\ninterface ConfigTypeSchemaProps {\n  type: TypeData;\n  typesInScope: TypeData[];\n  theme?: ConfigTypeSchemaTheme;\n  maxDepth?: number;\n}\n\ninterface FieldData {\n  name: string;\n  description: string | null;\n  isRequired: boolean;\n  configTypeKey: string;\n}\n\ninterface CommonTypeData {\n  key: string;\n  description: string | null;\n}\n\ninterface CompositeTypeData extends CommonTypeData {\n  __typename: 'CompositeConfigType';\n  isSelector: boolean;\n  fields: FieldData[];\n}\n\ninterface ListTypeData extends CommonTypeData {\n  __typename: 'ArrayConfigType';\n  typeParamKeys: string[];\n}\n\ninterface NullableTypeData extends CommonTypeData {\n  __typename: 'NullableConfigType';\n  typeParamKeys: string[];\n}\n\ninterface EnumTypeData extends CommonTypeData {\n  __typename: 'EnumConfigType';\n  givenName: string;\n}\n\ninterface RegularTypeData extends CommonTypeData {\n  __typename: 'RegularConfigType';\n  givenName: string;\n}\n\ninterface ScalarUnionTypeData extends CommonTypeData {\n  __typename: 'ScalarUnionConfigType';\n  nonScalarTypeKey: string;\n  scalarTypeKey: string;\n}\n\nexport type TypeData =\n  | CompositeTypeData\n  | ListTypeData\n  | NullableTypeData\n  | RegularTypeData\n  | EnumTypeData\n  | ScalarUnionTypeData;\n\nfunction renderTypeRecursive(\n  type: TypeData,\n  typeLookup: {[typeName: string]: TypeData},\n  depth: number,\n  props: ConfigTypeSchemaProps,\n): React.ReactElement<HTMLElement> {\n  if (type.__typename === 'CompositeConfigType' && props.maxDepth && depth === props.maxDepth) {\n    return <span>...</span>;\n  }\n  if (type.__typename === 'CompositeConfigType') {\n    const innerIndent = '  '.repeat(depth + 1);\n    return (\n      <>\n        {`{`}\n        {type.isSelector && (\n          <DictBlockComment indent={innerIndent} content={`One of the following:`} />\n        )}\n        {type.fields.map((fieldData) => (\n          <DictEntry key={fieldData.name}>\n            <DictBlockComment indent={innerIndent} content={fieldData.description} />\n            {innerIndent}\n            <DictKey theme={props.theme}>{fieldData.name}</DictKey>\n            {!fieldData.isRequired && Optional}\n            {`: `}\n            {renderTypeRecursive(typeLookup[fieldData.configTypeKey], typeLookup, depth + 1, props)}\n          </DictEntry>\n        ))}\n        {'  '.repeat(depth) + '}'}\n      </>\n    );\n  }\n  if (type.__typename === 'ArrayConfigType') {\n    const ofTypeKey = type.typeParamKeys[0];\n    return <>[{renderTypeRecursive(typeLookup[ofTypeKey], typeLookup, depth, props)}]</>;\n  }\n  if (type.__typename === 'NullableConfigType') {\n    const ofTypeKey = type.typeParamKeys[0];\n    return (\n      <>\n        {renderTypeRecursive(typeLookup[ofTypeKey], typeLookup, depth, props)}\n        {Optional}\n      </>\n    );\n  }\n\n  if (type.__typename === 'ScalarUnionConfigType') {\n    const nonScalarTypeMarkup = renderTypeRecursive(\n      typeLookup[type.nonScalarTypeKey],\n      typeLookup,\n      depth,\n      props,\n    );\n    const scalarTypeMarkup = renderTypeRecursive(\n      typeLookup[type.scalarTypeKey],\n      typeLookup,\n      depth,\n      props,\n    );\n\n    return (\n      <span>\n        {scalarTypeMarkup} | {nonScalarTypeMarkup}\n      </span>\n    );\n  }\n\n  return <span>{type.givenName}</span>;\n}\n\nexport const ConfigTypeSchema = React.memo((props: ConfigTypeSchemaProps) => {\n  const {type, typesInScope} = props;\n\n  const typeLookup = {};\n  for (const typeInScope of typesInScope) {\n    typeLookup[typeInScope.key] = typeInScope;\n  }\n\n  return (\n    <TypeSchemaContainer>\n      <DictBlockComment content={type.description} indent=\"\" />\n      {renderTypeRecursive(type, typeLookup, 0, props)}\n    </TypeSchemaContainer>\n  );\n});\n\nexport const CONFIG_TYPE_SCHEMA_FRAGMENT = gql`\n  fragment ConfigTypeSchemaFragment on ConfigType {\n    ... on EnumConfigType {\n      givenName\n    }\n    ... on RegularConfigType {\n      givenName\n    }\n    key\n    description\n    isSelector\n    typeParamKeys\n    ... on CompositeConfigType {\n      fields {\n        name\n        description\n        isRequired\n        configTypeKey\n      }\n    }\n    ... on ScalarUnionConfigType {\n      scalarTypeKey\n      nonScalarTypeKey\n    }\n  }\n`;\n\nconst TypeSchemaContainer = styled.code`\n  color: ${Colors.GRAY3};\n  display: block;\n  white-space: pre-wrap;\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nconst DictEntry = styled.div``;\n\nconst DictKey = styled.span<{theme: ConfigTypeSchemaTheme | undefined}>`\n  color: ${({theme}) => (theme === 'dark' ? Colors.WHITE : Colors.BLACK)};\n`;\n\nconst DictComment = styled.div`\n  /* This allows long comments to wrap as nice indented blocks, while\n     copy/pasting as a single line with space-based indentation. */\n  text-indent: -1.85em;\n  padding-left: 1.85em;\n  white-space: initial;\n`;\n\nconst DictBlockComment = ({indent = '', content}: {indent: string; content: string | null}) =>\n  content !== null && content !== '' ? (\n    <DictComment>{`${indent.replace(/ /g, '\\u00A0')}/* ${content} */`}</DictComment>\n  ) : null;\n\nconst Optional = <span style={{fontWeight: 500, color: Colors.ORANGE2}}>?</span>;\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface ITypeWithTooltipProps {\n  type: {\n    name: string | null;\n    displayName: string;\n    description: string | null;\n  };\n}\n\nexport const TypeWithTooltip = (props: ITypeWithTooltipProps) => {\n  const {name, displayName} = props.type;\n\n  // TODO: link to most inner type\n  if (name) {\n    return (\n      <Link to={{search: `?tab=types&typeName=${displayName}`}}>\n        <TypeName>{displayName}</TypeName>\n      </Link>\n    );\n  }\n\n  return <TypeName>{displayName}</TypeName>;\n};\n\nexport const DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT = gql`\n  fragment DagsterTypeWithTooltipFragment on DagsterType {\n    name\n    displayName\n    description\n  }\n`;\n\nconst TypeName = styled.code`\n  background: #d6ecff;\n  border: none;\n  padding: 1px 4px;\n  border-bottom: 1px solid #2491eb;\n  border-radius: 0.25em;\n  font-size: 14px;\n  font-weight: 500;\n`;\n","import {useMutation} from '@apollo/client';\nimport {Colors, Switch} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\n\nimport {useConfirmation} from '../app/CustomConfirmationProvider';\nimport {\n  STOP_SCHEDULE_MUTATION,\n  displayScheduleMutationErrors,\n} from '../schedules/ScheduleMutations';\nimport {humanCronString} from '../schedules/humanCronString';\nimport {StopSchedule} from '../schedules/types/StopSchedule';\nimport {displaySensorMutationErrors, STOP_SENSOR_MUTATION} from '../sensors/SensorMutations';\nimport {StopSensor} from '../sensors/types/StopSensor';\nimport {InstigationType, InstigationStatus} from '../types/globalTypes';\nimport {Alert} from '../ui/Alert';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\nimport {Table} from '../ui/Table';\nimport {Subheading} from '../ui/Text';\nimport {RepositoryOriginInformation} from '../workspace/RepositoryInformation';\n\nimport {TickTag} from './InstigationTick';\nimport {InstigatedRunStatus} from './InstigationUtils';\nimport {InstigationStateFragment} from './types/InstigationStateFragment';\n\nexport const UnloadableSensors: React.FunctionComponent<{\n  sensorStates: InstigationStateFragment[];\n}> = ({sensorStates}) => {\n  if (!sensorStates.length) {\n    return null;\n  }\n  return (\n    <>\n      <Subheading>Unloadable sensors</Subheading>\n      <UnloadableSensorInfo />\n\n      <Table>\n        <thead>\n          <tr>\n            <th style={{maxWidth: '60px'}}></th>\n            <th>Sensor Name</th>\n            <th style={{width: '100px'}}>Last Tick</th>\n            <th>Last Run</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sensorStates.map((sensorState) => (\n            <SensorStateRow sensorState={sensorState} key={sensorState.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport const UnloadableSchedules: React.FunctionComponent<{\n  scheduleStates: InstigationStateFragment[];\n}> = ({scheduleStates}) => {\n  if (!scheduleStates.length) {\n    return null;\n  }\n  return (\n    <>\n      <Subheading>Unloadable schedules</Subheading>\n      <UnloadableScheduleInfo />\n\n      <Table>\n        <thead>\n          <tr>\n            <th style={{maxWidth: '60px'}}></th>\n            <th>Schedule Name</th>\n            <th style={{width: '150px'}}>Schedule</th>\n            <th style={{width: '100px'}}>Last Tick</th>\n            <th>Last Run</th>\n            <th>Partition Set Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scheduleStates.map((scheduleState) => (\n            <ScheduleStateRow scheduleState={scheduleState} key={scheduleState.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst UnloadableSensorInfo = () => (\n  <Box margin={{vertical: 20}}>\n    <Alert\n      intent=\"warning\"\n      title={\n        <div>\n          Note: You can turn off any of the following sensors, but you cannot turn them back on.{' '}\n        </div>\n      }\n      description={\n        <div>\n          The following sensors were previously started but now cannot be loaded. They may be part\n          of a different workspace or from a sensor or repository that no longer exists in code. You\n          can turn them off, but you cannot turn them back on since they can’t be loaded.\n        </div>\n      }\n    />\n  </Box>\n);\n\nconst UnloadableScheduleInfo = () => (\n  <Box margin={{vertical: 20}}>\n    <Alert\n      intent=\"warning\"\n      title={\n        <div>\n          Note: You can turn off any of the following schedules, but you cannot turn them back on.\n        </div>\n      }\n      description={\n        <div>\n          The following schedules were previously started but now cannot be loaded. They may be part\n          of a different workspace or from a schedule or repository that no longer exists in code.\n          You can turn them off, but you cannot turn them back on since they can’t be loaded.\n        </div>\n      }\n    />\n  </Box>\n);\n\nconst SensorStateRow = ({sensorState}: {sensorState: InstigationStateFragment}) => {\n  const {id, name, status, repositoryOrigin, ticks} = sensorState;\n\n  const [stopSensor, {loading: toggleOffInFlight}] = useMutation<StopSensor>(STOP_SENSOR_MUTATION, {\n    onCompleted: displaySensorMutationErrors,\n  });\n  const [showRepositoryOrigin, setShowRepositoryOrigin] = React.useState(false);\n\n  const onChangeSwitch = () => {\n    if (status === InstigationStatus.RUNNING) {\n      stopSensor({variables: {jobOriginId: id}});\n    }\n  };\n\n  const latestTick = ticks.length ? ticks[0] : null;\n\n  return (\n    <tr key={name}>\n      <td style={{width: 60}}>\n        <Switch\n          disabled={toggleOffInFlight || status === InstigationStatus.STOPPED}\n          large\n          innerLabelChecked=\"on\"\n          innerLabel=\"off\"\n          checked={status === InstigationStatus.RUNNING}\n          onChange={onChangeSwitch}\n        />\n      </td>\n      <td>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          {name}\n          <ButtonLink\n            onClick={() => {\n              setShowRepositoryOrigin(!showRepositoryOrigin);\n            }}\n          >\n            show info\n          </ButtonLink>\n        </Group>\n        {showRepositoryOrigin && <RepositoryOriginInformation origin={repositoryOrigin} />}\n      </td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SENSOR} />\n        ) : (\n          <span style={{color: Colors.GRAY4}}>None</span>\n        )}\n      </td>\n      <td>\n        <div style={{display: 'flex'}}>\n          <InstigatedRunStatus instigationState={sensorState} />\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nconst ScheduleStateRow: React.FunctionComponent<{\n  scheduleState: InstigationStateFragment;\n}> = ({scheduleState}) => {\n  const [stopSchedule, {loading: toggleOffInFlight}] = useMutation<StopSchedule>(\n    STOP_SCHEDULE_MUTATION,\n    {\n      onCompleted: displayScheduleMutationErrors,\n    },\n  );\n  const [showRepositoryOrigin, setShowRepositoryOrigin] = React.useState(false);\n  const confirm = useConfirmation();\n  const {id, name, ticks, status, repositoryOrigin, typeSpecificData} = scheduleState;\n  const latestTick = ticks.length > 0 ? ticks[0] : null;\n  const cronSchedule =\n    typeSpecificData && typeSpecificData.__typename === 'ScheduleData'\n      ? typeSpecificData.cronSchedule\n      : null;\n  const onChangeSwitch = async () => {\n    if (status === InstigationStatus.RUNNING) {\n      await confirm({\n        title: 'Are you sure you want to stop this schedule?',\n        description:\n          'The schedule definition for this schedule is not available. ' +\n          'If you turn off this schedule, you will not be able to turn it back on from ' +\n          'the currently loaded workspace.',\n      });\n      stopSchedule({variables: {scheduleOriginId: id}});\n    }\n  };\n\n  return (\n    <tr key={name}>\n      <td style={{width: 60}}>\n        <Switch\n          checked={status === InstigationStatus.RUNNING}\n          large={true}\n          disabled={status !== InstigationStatus.RUNNING || toggleOffInFlight}\n          innerLabelChecked=\"on\"\n          innerLabel=\"off\"\n          onChange={onChangeSwitch}\n        />\n      </td>\n      <td>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          <div>{name}</div>\n          <ButtonLink\n            onClick={() => {\n              setShowRepositoryOrigin(!showRepositoryOrigin);\n            }}\n          >\n            show info\n          </ButtonLink>\n        </Group>\n        {showRepositoryOrigin && <RepositoryOriginInformation origin={repositoryOrigin} />}\n      </td>\n      <td style={{maxWidth: 150}}>\n        <div\n          style={{\n            position: 'relative',\n            width: '100%',\n            whiteSpace: 'pre-wrap',\n            display: 'block',\n          }}\n        >\n          {cronSchedule ? (\n            <Tooltip position={'bottom'} content={cronSchedule}>\n              {humanCronString(cronSchedule)}\n            </Tooltip>\n          ) : (\n            <div>&mdash;</div>\n          )}\n        </div>\n      </td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SCHEDULE} />\n        ) : null}\n      </td>\n      <td>\n        <InstigatedRunStatus instigationState={scheduleState} />\n      </td>\n      <td>\n        <div style={{display: 'flex'}}>&mdash;</div>\n      </td>\n    </tr>\n  );\n};\n","import {Button, ButtonGroup} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nexport const GanttChartModeControl: React.FunctionComponent<{\n  value: GanttChartMode;\n  hideTimedMode: boolean;\n  onChange: (mode: GanttChartMode) => void;\n}> = React.memo(({value, onChange, hideTimedMode}) => (\n  <ButtonGroup style={{flexShrink: 0}}>\n    <Button\n      key={GanttChartMode.FLAT}\n      small={true}\n      icon=\"column-layout\"\n      title={'Flat'}\n      active={value === GanttChartMode.FLAT}\n      onClick={() => onChange(GanttChartMode.FLAT)}\n    />\n    <Button\n      key={GanttChartMode.WATERFALL}\n      small={true}\n      icon=\"gantt-chart\"\n      title={'Waterfall'}\n      active={value === GanttChartMode.WATERFALL}\n      onClick={() => onChange(GanttChartMode.WATERFALL)}\n    />\n    {!hideTimedMode && (\n      <Button\n        key={GanttChartMode.WATERFALL_TIMED}\n        small={true}\n        icon=\"time\"\n        rightIcon=\"gantt-chart\"\n        title={'Waterfall with Execution Timing'}\n        active={value === GanttChartMode.WATERFALL_TIMED}\n        onClick={() => onChange(GanttChartMode.WATERFALL_TIMED)}\n      />\n    )}\n  </ButtonGroup>\n));\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\n\nimport {CSS_DURATION, GanttViewport, LEFT_INSET} from './Constants';\n\nconst msToMinuteLabel = (ms: number) => `${Math.round(ms / 1000 / 60)}m`;\nconst msToSecondLabel = (ms: number) => `${(ms / 1000).toFixed(0)}s`;\nconst msToSubsecondLabel = (ms: number) => `${(ms / 1000).toFixed(1)}s`;\n\n// We want to gracefully transition the tick marks shown as you zoom, but it's\n// nontrivial to programatically pick good intervals. (500ms => 1s => 5s, etc.)\n// This lookup table defines the available tick mark intervals and the labeling\n// that should be used for each one(\"2:00\" or \"2m\" or \"2s\" or \"0.05s\", etc.).\n//\n// We use the first configuration that places ticks at least 80 pixels apart\n// at the rendered scale.\n//\nconst TICK_LABEL_WIDTH = 40;\nconst TICK_CONFIG = [\n  {\n    tickIntervalMs: 0.5 * 1000,\n    tickLabels: msToSubsecondLabel,\n  },\n  {\n    tickIntervalMs: 1 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 5 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 10 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 30 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 60 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 2 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 5 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 10 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 20 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 6 * 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n];\n\ninterface GanttChartTimescaleProps {\n  scale: number;\n  viewport: GanttViewport;\n  layoutSize: {width: number; height: number};\n  nowMs: number;\n  startMs: number;\n  highlightedMs: number[];\n}\n\nexport const GanttChartTimescale = ({\n  scale,\n  viewport,\n  nowMs,\n  startMs,\n  highlightedMs,\n  layoutSize,\n}: GanttChartTimescaleProps) => {\n  const transform = `translate(${LEFT_INSET - viewport.left}px)`;\n  const ticks: React.ReactChild[] = [];\n  const lines: React.ReactChild[] = [];\n\n  const pxPerMs = scale;\n  const tickConfig = TICK_CONFIG.find((t) => t.tickIntervalMs * pxPerMs > 80);\n  if (tickConfig) {\n    const {tickIntervalMs, tickLabels} = tickConfig;\n    const pxPerTick = tickIntervalMs * pxPerMs;\n    const firstTickX = Math.floor(viewport.left / pxPerTick) * pxPerTick;\n\n    for (let x = firstTickX; x < firstTickX + viewport.width; x += pxPerTick) {\n      if (x - viewport.left < 10) {\n        continue;\n      }\n      const ms = x / pxPerMs;\n      const key = `${ms.toFixed(2)}`;\n      const label = tickLabels(ms);\n      lines.push(<div className=\"line\" key={key} style={{left: x, transform}} />);\n      ticks.push(\n        <div className=\"tick\" key={key} style={{left: x - TICK_LABEL_WIDTH / 2, transform}}>\n          {label}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <TimescaleContainer>\n      <TimescaleTicksContainer>\n        {ticks}\n        {highlightedMs.length === 2 && (\n          <div\n            key={`highlight-duration`}\n            className=\"tick duration\"\n            style={{\n              left: (highlightedMs[0] - startMs) * pxPerMs + 2,\n              width: (highlightedMs[1] - highlightedMs[0]) * pxPerMs - 2,\n              transform,\n            }}\n          >\n            {formatElapsedTime(highlightedMs[1] - highlightedMs[0])}\n          </div>\n        )}\n        {highlightedMs.map((ms, idx) => {\n          const timeX = (ms - startMs) * pxPerMs;\n          const labelOffset =\n            idx === 0 && timeX > TICK_LABEL_WIDTH + viewport.left ? -(TICK_LABEL_WIDTH - 1) : 0;\n\n          return (\n            <div\n              key={`highlight-${idx}`}\n              className=\"tick highlight\"\n              style={{left: timeX + labelOffset, transform}}\n            >\n              {msToSubsecondLabel(ms - startMs)}\n            </div>\n          );\n        })}\n      </TimescaleTicksContainer>\n      <TimescaleLinesContainer style={{width: viewport.width, height: viewport.height}}>\n        {lines}\n        {highlightedMs.map((ms, idx) => (\n          <div\n            className=\"line highlight\"\n            key={`highlight-${idx}`}\n            style={{left: (ms - startMs) * pxPerMs, transform}}\n          />\n        ))}\n        {nowMs > startMs && (\n          <div\n            className=\"fog-of-war\"\n            style={{\n              left: (nowMs - startMs) * pxPerMs,\n              width: Math.max(layoutSize.width, viewport.width) - (nowMs - startMs) * pxPerMs + 100,\n              transform,\n            }}\n          ></div>\n        )}\n      </TimescaleLinesContainer>\n    </TimescaleContainer>\n  );\n};\n\nconst TimescaleContainer = styled.div`\n  width: 100%;\n\n  & .tick {\n    position: absolute;\n    padding-top: 3px;\n    width: ${TICK_LABEL_WIDTH}px;\n    height: 20px;\n    box-sizing: border-box;\n    transition: left ${CSS_DURATION}ms linear, width ${CSS_DURATION}ms linear;\n    text-align: center;\n    font-size: 11px;\n  }\n  & .tick.duration {\n    color: ${Colors.GRAY2};\n    background: ${Colors.LIGHT_GRAY2};\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .tick.highlight {\n    color: white;\n    margin-top: 1px;\n    padding-top: 2px;\n    height: 17px;\n    background: linear-gradient(to bottom, #949493 0%, #757573 100%);\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .line {\n    position: absolute;\n    border-left: 1px solid #eee;\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n  }\n  & .line.highlight {\n    border-left: 1px solid #949493;\n    z-index: 3;\n    top: -1px;\n  }\n\n  & .fog-of-war {\n    position: absolute;\n    background: rgb(203, 216, 224, 0.3);\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n    width: 100%;\n  }\n`;\n\nconst TimescaleTicksContainer = styled.div`\n  height: 20px;\n  z-index: 4;\n  position: relative;\n  background: ${Colors.LIGHT_GRAY4};\n  display: flex;\n  color: ${Colors.GRAY3};\n  font-size: 11px;\n  border-bottom: 1px solid ${Colors.LIGHT_GRAY1};\n  overflow: hidden;\n`;\n\nconst TimescaleLinesContainer = styled.div`\n  z-index: 0;\n  top: 20px;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  overflow: hidden;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RunStatus} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunElapsed, RunTime, RUN_TIME_FRAGMENT} from '../runs/RunUtils';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\n\nimport {RunGroupPanelQuery} from './types/RunGroupPanelQuery';\n\nfunction subsetTitleForRun(run: {tags: {key: string; value: string}[]}) {\n  const stepsTag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  return stepsTag ? stepsTag.value : '*';\n}\n\nexport const RunGroupPanel: React.FC<{runId: string}> = ({runId}) => {\n  const queryResult = useQuery<RunGroupPanelQuery>(RUN_GROUP_PANEL_QUERY, {\n    variables: {runId},\n    fetchPolicy: 'cache-and-network',\n    pollInterval: 15000, // 15s\n  });\n\n  const group = queryResult.data?.runGroupOrError;\n\n  if (!group || group.__typename === 'RunGroupNotFoundError') {\n    return <div />;\n  }\n  if (group.__typename === 'PythonError') {\n    return (\n      <Group direction=\"row\" spacing={8} padding={8}>\n        <IconWIP name=\"warning\" color={ColorsWIP.Yellow500} />\n        <div style={{fontSize: '13px'}}>\n          The run group for this run could not be loaded.{' '}\n          <ButtonLink\n            color={Colors.BLUE3}\n            underline=\"always\"\n            onClick={() => {\n              showCustomAlert({\n                title: 'Python error',\n                body: group.message,\n              });\n            }}\n          >\n            View error\n          </ButtonLink>\n        </div>\n      </Group>\n    );\n  }\n\n  if (group.runs?.length === 1) {\n    return <div />;\n  }\n\n  const runs = (group.runs || []).filter((g) => g !== null);\n\n  return (\n    <SidebarSection title={runs[0] ? `${runs[0].pipelineName} (${runs.length})` : ''}>\n      <>\n        {runs.map((g, idx) =>\n          g ? (\n            <RunGroupRun\n              key={g.runId}\n              to={`/instance/runs/${g.runId}`}\n              selected={g.runId === runId}\n            >\n              {idx < runs.length - 1 && <ThinLine style={{height: 36}} />}\n              <Box padding={{top: 4}}>\n                <RunStatus status={g.status} />\n              </Box>\n\n              <div\n                style={{\n                  flex: 1,\n                  marginLeft: 5,\n                  minWidth: 0,\n                  color: Colors.DARK_GRAY5,\n                }}\n              >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <RunTitle>\n                    {g.runId.split('-')[0]}\n                    {idx === 0 && RootTag}\n                  </RunTitle>\n                  <RunTime run={g} />\n                </div>\n\n                <div\n                  style={{\n                    display: 'flex',\n                    color: Colors.DARK_GRAY5,\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {subsetTitleForRun(g)}\n                  <RunElapsed run={g} />\n                </div>\n              </div>\n            </RunGroupRun>\n          ) : null,\n        )}\n      </>\n    </SidebarSection>\n  );\n};\n\nconst RUN_GROUP_PANEL_QUERY = gql`\n  query RunGroupPanelQuery($runId: ID!) {\n    runGroupOrError(runId: $runId) {\n      __typename\n      ... on PythonError {\n        message\n      }\n      ... on RunGroup {\n        rootRunId\n        runs {\n          id\n          runId\n          parentRunId\n          status\n          stepKeysToExecute\n          pipelineName\n          tags {\n            key\n            value\n          }\n          ...RunTimeFragment\n        }\n      }\n    }\n  }\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunGroupRun = styled(Link)<{selected: boolean}>`\n  align-items: flex-start;\n  background: ${({selected}) => (selected ? Colors.LIGHT_GRAY2 : Colors.WHITE)};\n  padding: 3px 6px;\n  font-size: 13px;\n  line-height: 20px;\n  display: flex;\n  position: relative;\n  padding-left: 6px;\n  &:hover {\n    text-decoration: none;\n    background: ${({selected}) => (selected ? Colors.LIGHT_GRAY2 : Colors.LIGHT_GRAY5)};\n  }\n`;\n\nconst ThinLine = styled.div`\n  position: absolute;\n  top: 17px;\n  width: 1px;\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n  left: 11px;\n  z-index: 2;\n`;\n\nconst RunTitle = styled.span`\n  color: ${Colors.BLACK};\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: text;\n  flex: 1;\n`;\n\nconst RootTag = (\n  <span\n    style={{\n      borderRadius: 2,\n      fontSize: 12,\n      lineHeight: '14px',\n      background: 'rgb(118, 144, 188, 0.5)',\n      color: 'white',\n      padding: '0 4px',\n      fontWeight: 400,\n      userSelect: 'none',\n      marginLeft: 4,\n    }}\n  >\n    ROOT\n  </span>\n);\n","import {Checkbox, Colors, NonIdealState} from '@blueprintjs/core';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {GraphQueryItem, filterByQuery} from '../app/GraphQueryImpl';\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {EMPTY_RUN_METADATA, IRunMetadataDict, IStepMetadata} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Spinner} from '../ui/Spinner';\nimport {SplitPanelContainer} from '../ui/SplitPanelContainer';\n\nimport {\n  BOX_DOT_MARGIN_Y,\n  BOX_DOT_SIZE,\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_HEIGHT,\n  BOX_MARGIN_Y,\n  BOX_SHOW_LABEL_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  CSS_DURATION,\n  DEFAULT_OPTIONS,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMode,\n  GanttChartPlacement,\n  GanttViewport,\n  LINE_SIZE,\n  MAX_SCALE,\n  MIN_SCALE,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\nimport {\n  BuildLayoutParams,\n  adjustLayoutWithRunMetadata,\n  boxStyleFor,\n  buildLayout,\n  interestingQueriesFor,\n} from './GanttChartLayout';\nimport {GanttChartModeControl} from './GanttChartModeControl';\nimport {GanttChartTimescale} from './GanttChartTimescale';\nimport {GanttStatusPanel} from './GanttStatusPanel';\nimport {OptionsContainer, OptionsDivider, OptionsSpacer} from './VizComponents';\nimport {ZoomSlider} from './ZoomSlider';\nimport {useGanttChartMode} from './useGanttChartMode';\nimport {useViewport} from './useViewport';\n\nexport {GanttChartMode} from './Constants';\n\nconst HIGHLIGHT_TIME_EVENT = 'gantt-highlight-time';\n\nlet highlightTimer: NodeJS.Timeout;\n\n/**\n * Set or clear the highlighted time on the Gantt chart. Goal of this convenience\n * method is to make the implementation (via event dispatch) private to this file.\n */\nexport function setHighlightedGanttChartTime(timestamp: null | string, debounced = true) {\n  clearTimeout(highlightTimer);\n\n  if (debounced) {\n    highlightTimer = setTimeout(() => setHighlightedGanttChartTime(timestamp, false), 100);\n  } else {\n    document.dispatchEvent(new CustomEvent(HIGHLIGHT_TIME_EVENT, {detail: timestamp}));\n  }\n}\n\ninterface GanttChartProps {\n  selection: StepSelection;\n  focusedTime: number | null;\n  runId: string;\n  graph: GraphQueryItem[];\n  options?: Partial<GanttChartLayoutOptions>;\n  metadata?: IRunMetadataDict;\n  toolbarActions?: React.ReactChild;\n  toolbarLeftActions?: React.ReactChild;\n\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n  onSetSelection: (query: string) => void;\n\n  // for storybooks\n  overrideNowTime?: number;\n}\n\ninterface GanttChartState {\n  options: GanttChartLayoutOptions;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {graph, onSetSelection, options, selection, toolbarActions, toolbarLeftActions} = props;\n  const [mode, setMode] = useGanttChartMode();\n  const [state, setState] = React.useState(() => ({\n    ...DEFAULT_OPTIONS,\n    ...options,\n    mode,\n  }));\n\n  const cachedLayout = React.useRef<GanttChartLayout | null>(null);\n  const cachedLayoutParams = React.useRef<BuildLayoutParams | null>(null);\n  const graphFiltered = filterByQuery(graph, selection.query);\n  const layoutParams = React.useMemo(\n    () => ({\n      nodes: state.hideUnselectedSteps ? graphFiltered.all : graph,\n      mode: state.mode,\n    }),\n    [graph, graphFiltered.all, state.hideUnselectedSteps, state.mode],\n  );\n\n  const layout = React.useMemo(() => {\n    const names = (ns: GraphQueryItem[]) => ns.map((n) => n.name).join(',');\n    if (\n      !cachedLayoutParams.current ||\n      names(cachedLayoutParams.current.nodes) !== names(layoutParams.nodes) ||\n      cachedLayoutParams.current.mode !== layoutParams.mode\n    ) {\n      cachedLayout.current = buildLayout(layoutParams);\n      cachedLayoutParams.current = layoutParams;\n    }\n    return cachedLayout.current!;\n  }, [layoutParams]);\n\n  const updateOptions = React.useCallback((changes: Partial<GanttChartLayoutOptions>) => {\n    setState((current) => ({...current, ...changes}));\n  }, []);\n\n  const onChangeMode = React.useCallback(\n    (mode: GanttChartMode) => {\n      updateOptions({mode});\n      setMode(mode);\n    },\n    [setMode, updateOptions],\n  );\n\n  const onUpdateQuery = React.useCallback(\n    (query: string) => {\n      onSetSelection(query || '*');\n    },\n    [onSetSelection],\n  );\n\n  const onDoubleClickStep = React.useCallback(\n    (stepKey: string) => {\n      const query = `*${stepKey}*`;\n      onUpdateQuery(selection.query !== query ? query : '*');\n    },\n    [onUpdateQuery, selection.query],\n  );\n\n  return (\n    <GanttChartContainer>\n      <OptionsContainer>\n        {toolbarLeftActions}\n        {toolbarLeftActions && <OptionsDivider />}\n        <GanttChartModeControl\n          value={state.mode}\n          onChange={onChangeMode}\n          hideTimedMode={state.hideTimedMode}\n        />\n        {state.mode === GanttChartMode.WATERFALL_TIMED && (\n          <>\n            <OptionsSpacer />\n            <div style={{width: 200}}>\n              <ZoomSlider value={state.zoom} onChange={(v) => updateOptions({zoom: v})} />\n            </div>\n            <OptionsSpacer />\n            <Checkbox\n              style={{marginBottom: 0}}\n              label=\"Hide not started steps\"\n              checked={state.hideWaiting}\n              onClick={() => updateOptions({hideWaiting: !state.hideWaiting})}\n            />\n          </>\n        )}\n        <div style={{flex: 1}} />\n        {toolbarActions}\n      </OptionsContainer>\n      <GanttChartInner\n        {...props}\n        options={{...state}}\n        layout={layout}\n        graph={graph}\n        onUpdateQuery={onUpdateQuery}\n        onDoubleClickStep={onDoubleClickStep}\n        onChange={() =>\n          updateOptions({\n            hideUnselectedSteps: !state.hideUnselectedSteps,\n          })\n        }\n      />\n    </GanttChartContainer>\n  );\n};\n\ntype GanttChartInnerProps = GanttChartProps &\n  GanttChartState & {\n    graph: GraphQueryItem[];\n    layout: GanttChartLayout;\n    onUpdateQuery: (value: string) => void;\n    onDoubleClickStep: (stepName: string) => void;\n    onChange: () => void;\n  };\n\nconst GanttChartInner = (props: GanttChartInnerProps) => {\n  const {viewport, containerProps, onMoveToViewport} = useViewport();\n  const [hoveredStep, setHoveredNodeName] = React.useState<string | null>(null);\n  const [hoveredTime, setHoveredTime] = React.useState<number | null>(null);\n  const [nowMs, setNowMs] = React.useState<number>(() => props.overrideNowTime || Date.now());\n  const {options, metadata, selection} = props;\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {availability, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = availability === 'available' && status === WebSocket.CLOSED;\n\n  // The slider in the UI updates `options.zoom` from 1-100. We convert that value\n  // into a px-per-ms \"scale\", where the minimum is the value required to zoom-to-fit.\n  // To make the slider feel more linear, we convert the input from log10 to logE.\n  let minScale = MIN_SCALE;\n  if (viewport.width && metadata && metadata.startedPipelineAt) {\n    const zoomToFitWidthPx = Math.max(1, viewport.width - 150);\n    const elapsedMs = Math.max(1, nowMs - metadata.startedPipelineAt);\n    minScale = zoomToFitWidthPx / elapsedMs;\n  }\n\n  const scale = Math.exp(\n    Math.log(minScale) + ((Math.log(MAX_SCALE) - Math.log(minScale)) / 100) * options.zoom,\n  );\n\n  // When the pipeline is running we want the graph to be steadily moving, even if logs\n  // aren't arriving. To achieve this we determine an update interval based on the scale\n  // and advance a \"now\" value that is used as the currnet time when adjusting the layout\n  // to account for run metadata below.\n\n  // Because renders can happen \"out of band\" of our update interval, we set a timer for\n  // \"time until the next interval after the current nowMs\".\n  React.useEffect(() => {\n    if (scale === 0 || lostWebsocket) {\n      return;\n    }\n\n    if (metadata?.exitedAt) {\n      if (nowMs !== metadata.exitedAt) {\n        setNowMs(metadata.exitedAt);\n      }\n      return;\n    }\n\n    const renderInterval = Math.max(CSS_DURATION, 2 / scale);\n    const now = Date.now();\n\n    const timeUntilIntervalElasped = renderInterval - (now - nowMs);\n    const timeout = setTimeout(() => setNowMs(now), timeUntilIntervalElasped);\n    return () => clearTimeout(timeout);\n  }, [scale, nowMs, lostWebsocket, metadata]);\n\n  // Listen for events specifying hover time (eg: a marker at a particular timestamp)\n  // and sync them to our React state for display.\n  React.useEffect(() => {\n    const listener = (e: CustomEvent) => setHoveredTime(e.detail);\n    document.addEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n    return () => document.removeEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n  });\n\n  // The `layout` we receive has been laid out and the rows / \"waterfall\" are final,\n  // but it doesn't incorporate the display scale or run metadata. We stretch and\n  // shift the layout boxes using this data to create the final layout for display.\n  const layout = adjustLayoutWithRunMetadata(\n    props.layout,\n    options,\n    metadata || EMPTY_RUN_METADATA,\n    scale,\n    nowMs,\n  );\n  const layoutSize = {\n    width: Math.max(0, ...layout.boxes.map((b) => b.x + b.width + BOX_SPACING_X)),\n    height: Math.max(0, ...layout.boxes.map((b) => b.y * BOX_HEIGHT + BOX_HEIGHT)),\n  };\n\n  React.useEffect(() => {\n    const node = layout.boxes.find((b) => selection.keys.includes(b.node.name));\n    if (!node) {\n      return;\n    }\n    const bounds = boundsForBox(node);\n    const x = (bounds.maxX + bounds.minX) / 2 - viewport.width / 2;\n    const y = (bounds.maxY + bounds.minY) / 2 - viewport.height / 2;\n    onMoveToViewport({left: x, top: y}, true);\n  }, [selection]); // eslint-disable-line\n\n  const highlightedMs: number[] = [];\n  if (props.focusedTime) {\n    highlightedMs.push(props.focusedTime);\n  }\n\n  if (hoveredTime) {\n    highlightedMs.push(hoveredTime);\n  } else if (selection.keys.length > 0) {\n    const selectedMeta = selection.keys\n      .map((stepKey) => metadata?.steps[stepKey])\n      .filter((x): x is IStepMetadata => x !== undefined);\n    const sortedSelectedSteps = selectedMeta.sort((a, b) =>\n      a.start && b.start ? a.start - b.start : 0,\n    );\n    const firstMeta = sortedSelectedSteps[0];\n    const lastMeta = sortedSelectedSteps[sortedSelectedSteps.length - 1];\n    if (firstMeta?.start) {\n      highlightedMs.push(firstMeta.start);\n    }\n    if (lastMeta?.end) {\n      highlightedMs.push(lastMeta.end);\n    }\n  }\n\n  const measurementComplete = viewport.width > 0;\n\n  const content = (\n    <>\n      {options.mode === GanttChartMode.WATERFALL_TIMED && measurementComplete && (\n        <GanttChartTimescale\n          scale={scale}\n          viewport={viewport}\n          layoutSize={layoutSize}\n          startMs={metadata?.startedPipelineAt || 0}\n          highlightedMs={highlightedMs}\n          nowMs={nowMs}\n        />\n      )}\n      <div style={{overflow: 'scroll', flex: 1}} {...containerProps}>\n        <div style={{position: 'relative', marginBottom: 50, ...layoutSize}}>\n          {measurementComplete && (\n            <GanttChartViewportContents\n              options={options}\n              metadata={metadata || EMPTY_RUN_METADATA}\n              layout={layout}\n              hoveredStep={hoveredStep}\n              focusedSteps={selection.keys}\n              viewport={viewport}\n              setHoveredNodeName={setHoveredNodeName}\n              onClickStep={props.onClickStep}\n              onDoubleClickStep={props.onDoubleClickStep}\n            />\n          )}\n        </div>\n      </div>\n\n      <GraphQueryInputContainer>\n        {lostWebsocket ? (\n          <WebsocketWarning>\n            <Box flex={{justifyContent: 'space-around'}} margin={{bottom: 12}}>\n              <Group\n                direction=\"row\"\n                spacing={8}\n                background={`${Colors.ORANGE3}26`}\n                padding={{vertical: 8, horizontal: 12}}\n                alignItems=\"flex-start\"\n              >\n                <IconWIP name=\"warning\" color={ColorsWIP.Yellow700} />\n                <div style={{maxWidth: '400px', whiteSpace: 'normal', overflow: 'hidden'}}>\n                  <strong>Lost connection to Dagit server.</strong>\n                  <span>\n                    {` Verify that your instance is responding to requests at ${rootServerURI} and reload the page.`}\n                  </span>\n                </div>\n              </Group>\n            </Box>\n          </WebsocketWarning>\n        ) : null}\n        <GraphQueryInput\n          items={props.graph}\n          value={props.selection.query}\n          placeholder=\"Type a Step Subset\"\n          onChange={props.onUpdateQuery}\n          presets={metadata ? interestingQueriesFor(metadata, layout) : undefined}\n          className={selection.keys.length > 0 ? 'has-step' : ''}\n        />\n        <Checkbox\n          checked={options.hideUnselectedSteps}\n          label=\"Hide unselected steps\"\n          onChange={props.onChange}\n          inline={true}\n          style={{marginLeft: 5}}\n        />\n      </GraphQueryInputContainer>\n    </>\n  );\n\n  return metadata ? (\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={content}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          {...props}\n          nowMs={nowMs}\n          metadata={metadata}\n          onHighlightStep={(name) => setHoveredNodeName(name)}\n        />\n      }\n    />\n  ) : (\n    content\n  );\n};\n\ninterface GanttChartViewportContentsProps {\n  options: GanttChartLayoutOptions;\n  metadata: IRunMetadataDict;\n  layout: GanttChartLayout;\n  hoveredStep: string | null;\n  focusedSteps: string[];\n  viewport: GanttViewport;\n  setHoveredNodeName: (name: string | null) => void;\n  onDoubleClickStep: (step: string) => void;\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n}\n\nconst GanttChartViewportContents: React.FunctionComponent<GanttChartViewportContentsProps> = (\n  props,\n) => {\n  const {viewport, layout, hoveredStep, focusedSteps, metadata, options} = props;\n  const items: React.ReactChild[] = [];\n\n  // To avoid drawing zillions of DOM nodes, we render only the boxes + lines that\n  // intersect with the current viewport.\n  const intersectsViewport = (bounds: Bounds) =>\n    bounds.minX < viewport.left + viewport.width &&\n    bounds.maxX > viewport.left &&\n    bounds.minY < viewport.top + viewport.height &&\n    bounds.maxY > viewport.top;\n\n  // We track the number of lines that end at each X value (they go over and then down,\n  // so this tracks where the vertical lines are). We shift lines by {count}px if there\n  // are others at the same X so wide \"tracks\" show you where data is being collected.\n  const verticalLinesAtXCoord: {[x: string]: number} = {};\n\n  if (options.mode !== GanttChartMode.FLAT) {\n    layout.boxes.forEach((box) => {\n      box.children.forEach((child, childIdx) => {\n        const bounds = boundsForLine(box, child);\n        if (!intersectsViewport(bounds)) {\n          return;\n        }\n        const childNotDrawn = !layout.boxes.includes(child);\n        const childWaiting = metadata ? !metadata.steps[child.node.name]?.state : false;\n\n        const overlapAtXCoord = verticalLinesAtXCoord[bounds.maxX] || 0;\n        verticalLinesAtXCoord[bounds.maxX] = overlapAtXCoord + 1;\n\n        items.push(\n          <GanttLine\n            darkened={\n              (focusedSteps?.includes(box.node.name) || hoveredStep) === box.node.name ||\n              (focusedSteps?.includes(child.node.name) || hoveredStep) === child.node.name\n            }\n            dotted={childNotDrawn || childWaiting}\n            key={`${box.key}-${child.key}-${childIdx}`}\n            depNotDrawn={childNotDrawn}\n            depIdx={overlapAtXCoord}\n            {...bounds}\n          />,\n        );\n      });\n    });\n  }\n\n  layout.boxes.forEach((box) => {\n    const bounds = boundsForBox(box);\n    const useDot = box.width === BOX_DOT_WIDTH_CUTOFF;\n    if (!intersectsViewport(bounds)) {\n      return;\n    }\n\n    items.push(\n      <div\n        key={box.key}\n        data-tooltip={box.width < box.node.name.length * 5 ? box.node.name : undefined}\n        onClick={(evt: React.MouseEvent<any>) => props.onClickStep(box.node.name, evt)}\n        onDoubleClick={() => props.onDoubleClickStep(box.node.name)}\n        onMouseEnter={() => props.setHoveredNodeName(box.node.name)}\n        onMouseLeave={() => props.setHoveredNodeName(null)}\n        className={`\n            chart-element\n            ${useDot ? 'dot' : 'box'}\n            ${focusedSteps.includes(box.node.name) && 'focused'}\n            ${hoveredStep === box.node.name && 'hovered'}\n            ${isDynamicStep(box.node.name) && 'dynamic'}`}\n        style={{\n          left: bounds.minX,\n          top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n          width: useDot ? BOX_DOT_SIZE : box.width,\n          ...boxStyleFor(box.state, {metadata, options}),\n        }}\n      >\n        {box.width > BOX_SHOW_LABEL_WIDTH_CUTOFF ? box.node.name : undefined}\n      </div>,\n    );\n  });\n\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    // Note: We sort the markers from left to right so that they're added to the DOM in that\n    // order and a long one doesn't make ones \"behind it\" unclickable.\n    layout.markers\n      .map((marker, idx) => ({marker, idx, bounds: boundsForBox(marker)}))\n      .filter(({bounds}) => intersectsViewport(bounds))\n      .sort((a, b) => a.bounds.minX - b.bounds.minX)\n      .forEach(({marker, bounds, idx}) => {\n        const useDot = marker.width === BOX_DOT_WIDTH_CUTOFF;\n\n        items.push(\n          <div\n            key={idx}\n            data-tooltip={marker.key}\n            className={`\n            chart-element\n            ${useDot ? 'marker-dot' : 'marker-whiskers'}`}\n            style={{\n              left: bounds.minX,\n              top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n              width: useDot ? BOX_DOT_SIZE : marker.width,\n            }}\n          >\n            <div />\n          </div>,\n        );\n      });\n  }\n\n  return <>{items}</>;\n};\n\ninterface Bounds {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n/**\n * Returns the top left + bottom right bounds for the provided Gantt chart box\n * so that the box can be drawn and tested for intersection with the viewport.\n */\nconst boundsForBox = (a: GanttChartPlacement): Bounds => {\n  return {\n    minX: a.x,\n    minY: a.y * BOX_HEIGHT,\n    maxX: a.x + a.width,\n    maxY: a.y * BOX_HEIGHT + BOX_HEIGHT,\n  };\n};\n\n/**\n * Returns the top left + bottom right bounds for the line between two Gantt\n * chart boxes. The boxes do not need to be provided in left -> right order.\n * @param a: GanttChartBox\n */\nconst boundsForLine = (a: GanttChartBox, b: GanttChartBox): Bounds => {\n  if (b.y < a.y) {\n    [a, b] = [b, a];\n  }\n\n  const aIsDot = a.width === BOX_DOT_WIDTH_CUTOFF;\n  const aCenterY = aIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const bIsDot = b.width === BOX_DOT_WIDTH_CUTOFF;\n  const bCenterY = bIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const straight = b.y === a.y;\n\n  // Line comes out of the center of the right side of the box\n  const minX = Math.min(a.x + a.width, b.x + b.width);\n  const minY = straight ? a.y * BOX_HEIGHT + aCenterY : a.y * BOX_HEIGHT + aCenterY;\n\n  // Line ends on the center left edge of the box if it is on the\n  // same line, or drops into the top center of the box if it's below.\n  const maxX = straight\n    ? Math.max(a.x, b.x)\n    : Math.max(a.x + a.width / 2, b.x + (bIsDot ? BOX_DOT_SIZE : b.width) / 2);\n  const maxY = straight\n    ? b.y * BOX_HEIGHT + bCenterY\n    : b.y * BOX_HEIGHT + (bIsDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y);\n\n  return {minX, minY, maxX, maxY};\n};\n\n/**\n * Renders a line on the Gantt visualization using a thin horizontal <div> and\n * a thin vertical <div> as necessary.\n */\nconst GanttLine = React.memo(\n  ({\n    minX,\n    minY,\n    maxX,\n    maxY,\n    dotted,\n    darkened,\n    depIdx,\n    depNotDrawn,\n  }: {\n    dotted: boolean;\n    darkened: boolean;\n    depIdx: number;\n    depNotDrawn: boolean;\n  } & Bounds) => {\n    const border = `${LINE_SIZE}px ${dotted ? 'dotted' : 'solid'} ${\n      darkened ? Colors.DARK_GRAY1 : Colors.LIGHT_GRAY3\n    }`;\n\n    const maxXAvoidingOverlap = maxX + (depIdx % 10) * LINE_SIZE;\n\n    return (\n      <>\n        <div\n          className=\"line\"\n          style={{\n            height: 1,\n            left: minX,\n            width: depNotDrawn ? 50 : maxXAvoidingOverlap - minX,\n            top: minY - 1,\n            borderTop: border,\n            zIndex: darkened ? 100 : 1,\n          }}\n        />\n        {minY !== maxY && !depNotDrawn && (\n          <div\n            className=\"line\"\n            style={{\n              width: 1,\n              left: maxXAvoidingOverlap,\n              top: minY,\n              height: maxY - minY,\n              borderRight: border,\n              zIndex: darkened ? 100 : 1,\n            }}\n          />\n        )}\n      </>\n    );\n  },\n  isEqual,\n);\n\n// Note: It is much faster to use standard CSS class selectors here than make\n// each box and line a styled-component because all styled components register\n// listeners for the \"theme\" React context.\nconst GanttChartContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  user-select: none;\n  background: ${Colors.WHITE};\n\n  .line {\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n  }\n\n  .chart-element {\n    font-size: 11px;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear;\n    display: inline-block;\n    position: absolute;\n    color: white;\n    overflow: hidden;\n    user-select: text;\n    z-index: 2;\n\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  .dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid transparent;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n\n  .box {\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    padding: 2px;\n    border: 1px solid transparent;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n    border-radius: 2px;\n\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n\n    &.focused {\n      border: 1px solid ${Colors.DARK_GRAY1};\n      box-shadow: 0 0 0 2px ${Colors.GOLD3};\n    }\n    &.hovered {\n      border: 1px solid ${Colors.DARK_GRAY3};\n    }\n    &.dynamic {\n      filter: brightness(125%);\n    }\n  }\n\n  .marker-dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid rgb(27, 164, 206);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n  .marker-whiskers {\n    display: inline-block;\n    position: absolute;\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    background: rgba(27, 164, 206, 0.09);\n    border-left: 1px solid rgba(27, 164, 206, 0.6);\n    border-right: 1px solid rgba(27, 164, 206, 0.6);\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear;\n\n    & > div {\n      border-bottom: 1px dashed rgba(27, 164, 206, 0.6);\n      height: ${(BOX_HEIGHT - BOX_MARGIN_Y * 2) / 2}px;\n    }\n  }\n`;\n\nconst WebsocketWarning = styled.div`\n  position: absolute;\n  bottom: 100%;\n  color: ${Colors.ORANGE2};\n  width: 100%;\n`;\n\nconst GraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nexport const GanttChartLoadingState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={<NonIdealState icon={<Spinner purpose=\"section\" />} />}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n\nexport const QueuedState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <NonIdealState\n          icon=\"time\"\n          description=\"This run is currently queued.\"\n          action={<Link to={`/instance/runs?q=status%3AQUEUED`}>View queued runs</Link>}\n        />\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n","import {Colors, Position} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {IRunMetadataDict, IStepState} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\nimport {Spinner} from '../ui/Spinner';\n\nimport {GanttChartMode} from './Constants';\nimport {boxStyleFor} from './GanttChartLayout';\nimport {RunGroupPanel} from './RunGroupPanel';\n\ninterface GanttStatusPanelProps {\n  metadata: IRunMetadataDict;\n  selection: StepSelection;\n  runId: string;\n  nowMs: number;\n\n  onClickStep?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHighlightStep?: (step: string | null) => void;\n  onDoubleClickStep?: (step: string) => void;\n}\n\nexport const GanttStatusPanel: React.FunctionComponent<GanttStatusPanelProps> = ({\n  runId,\n  nowMs,\n  metadata,\n  selection,\n  onClickStep,\n  onDoubleClickStep,\n  onHighlightStep,\n}) => {\n  const {preparing, executing, errored} = React.useMemo(() => {\n    const keys = Object.keys(metadata.steps);\n    const preparing = [];\n    const executing = [];\n    const errored = [];\n    for (const key of keys) {\n      const state = metadata.steps[key].state;\n      switch (state) {\n        case IStepState.PREPARING:\n          preparing.push(key);\n          break;\n        case IStepState.RUNNING:\n        case IStepState.UNKNOWN:\n          executing.push(key);\n          break;\n        case IStepState.FAILED:\n          errored.push(key);\n      }\n    }\n    return {preparing, executing, errored};\n  }, [metadata]);\n\n  const renderStepItem = (stepName: string) => (\n    <StepItem\n      nowMs={nowMs}\n      name={stepName}\n      key={stepName}\n      metadata={metadata}\n      selected={selection.keys.includes(stepName)}\n      onClick={onClickStep}\n      onDoubleClick={onDoubleClickStep}\n      onHover={onHighlightStep}\n    />\n  );\n\n  const isFinished = metadata?.exitedAt && metadata.exitedAt > 0;\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <RunGroupPanel runId={runId} />\n      <SidebarSection title={`${isFinished ? 'Not Executed' : 'Preparing'} (${preparing.length})`}>\n        <div>\n          {preparing.length === 0 ? (\n            <EmptyNotice>No steps are waiting to execute</EmptyNotice>\n          ) : (\n            preparing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Executing (${executing.length})`}>\n        <div>\n          {executing.length === 0 ? (\n            <EmptyNotice>No steps are executing</EmptyNotice>\n          ) : (\n            executing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Errored (${errored.length})`}>\n        <div>\n          {errored.length === 0 ? (\n            <EmptyNotice>No steps have errored</EmptyNotice>\n          ) : (\n            errored.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n    </div>\n  );\n};\n\nconst StepItem: React.FunctionComponent<{\n  name: string;\n  selected: boolean;\n  metadata: IRunMetadataDict;\n  nowMs: number;\n  onClick?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHover?: (name: string | null) => void;\n  onDoubleClick?: (name: string) => void;\n}> = ({nowMs, name, selected, metadata, onClick, onHover, onDoubleClick}) => {\n  const step = metadata.steps[name];\n  const end = step.end ?? nowMs;\n  return (\n    <StepItemContainer\n      key={name}\n      selected={selected}\n      onClick={(evt: React.MouseEvent<any>) => onClick?.(name, evt)}\n      onDoubleClick={() => onDoubleClick?.(name)}\n      onMouseEnter={() => onHover?.(name)}\n      onMouseLeave={() => onHover?.(null)}\n    >\n      {step.state === IStepState.RUNNING ? (\n        <Spinner purpose=\"body-text\" />\n      ) : step.state === IStepState.UNKNOWN ? (\n        <Tooltip\n          // Modifiers are to prevent flickering: https://github.com/palantir/blueprint/issues/4019\n          modifiers={{\n            preventOverflow: {enabled: false},\n            flip: {enabled: false},\n          }}\n          position={Position.BOTTOM}\n          content={\n            'Unknown step state. Pipeline execution completed without step execution completion.'\n          }\n        >\n          {'?'}\n        </Tooltip>\n      ) : (\n        <StepStatusDot\n          style={{\n            ...boxStyleFor(metadata.steps[name]?.state, {\n              metadata,\n              options: {mode: GanttChartMode.WATERFALL_TIMED},\n            }),\n          }}\n        />\n      )}\n      <StepLabel>{name}</StepLabel>\n      {step.start && <Elapsed>{formatElapsedTime(end - step.start)}</Elapsed>}\n    </StepItemContainer>\n  );\n};\n\nconst StepLabel = styled.div`\n  margin-left: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n`;\n\nconst StepItemContainer = styled.div<{selected: boolean}>`\n  display: flex;\n  line-height: 28px;\n  height: 28px;\n  padding: 0 5px;\n  align-items: center;\n  border-bottom: 1px solid ${Colors.LIGHT_GRAY1};\n  font-size: 13px;\n  ${({selected}) => selected && `background: ${Colors.LIGHT_GRAY4};`}\n\n  &:hover {\n    background: ${Colors.LIGHT_GRAY3};\n  }\n`;\n\nconst StepStatusDot = styled.div`\n  width: 11px;\n  height: 11px;\n  flex-shrink: 0;\n  border-radius: 5.5px;\n`;\n\nconst Elapsed = styled.div`\n  color: ${Colors.GRAY3};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst EmptyNotice = styled.div`\n  font-size: 12px;\n  padding: 12px;\n`;\n","import {Colors} from '@blueprintjs/core';\nimport styled from 'styled-components/macro';\n\nexport const OptionsContainer = styled.div`\nmin-height: 40px;\ndisplay: flex;\nalign-items: center;\npadding: 5px 15px;\nborder-bottom: 1px solid #A7B6C2;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.07);\nbackground: ${Colors.WHITE};\nflex-shrink: 0;\nflex-wrap: wrap;\nz-index: 3;\n}`;\n\nexport const OptionsDivider = styled.div`\n  width: 1px;\n  height: 25px;\n  padding-left: 7px;\n  margin-left: 7px;\n  border-left: 1px solid ${Colors.LIGHT_GRAY3};\n`;\n\nexport const OptionsSpacer = styled.div`\n  width: 15px;\n`;\n","import * as React from 'react';\n\n/**\n * Renders a horizontal slider that lets you adjust the graph's relative zoom from 1-100.\n * It uses Blueprint CSS but not the Slider component, because that renders twice and\n * forces a DOM layout to determine it's size (I think for tick marks, which we aren't using)\n */\nexport const ZoomSlider: React.FunctionComponent<{\n  value: number;\n  onChange: (v: number) => void;\n}> = React.memo((props) => {\n  return (\n    <div\n      className=\"bp3-slider bp3-slider-unlabeled\"\n      onMouseDown={(e: React.MouseEvent) => {\n        const rect = e.currentTarget.closest('.bp3-slider')!.getBoundingClientRect();\n\n        let initialX: number;\n        if (e.target instanceof HTMLElement && e.target.classList.contains('bp3-slider-handle')) {\n          initialX = e.pageX;\n        } else {\n          initialX = rect.left + (props.value / 100) * rect.width;\n        }\n\n        const onUpdate = (e: MouseEvent) => {\n          const nextValue = props.value + (e.pageX - initialX) * (100 / rect.width);\n          props.onChange(Math.max(0, Math.min(100, nextValue)));\n        };\n        const onRelease = (e: MouseEvent) => {\n          onUpdate(e);\n          document.removeEventListener('mousemove', onUpdate);\n          document.removeEventListener('mouseup', onRelease);\n        };\n        document.addEventListener('mousemove', onUpdate);\n        document.addEventListener('mouseup', onRelease);\n      }}\n    >\n      <div className=\"bp3-slider-track\">\n        <div className=\"bp3-slider-progress\" style={{left: 0, right: 0, top: 0}} />\n        <div\n          className=\"bp3-slider-progress bp3-intent-primary\"\n          style={{left: 0, right: `${100 - props.value}%`, top: 0}}\n        />\n      </div>\n      <div className=\"bp3-slider-axis\" />\n      <span\n        className=\"bp3-slider-handle\"\n        style={{left: `calc(${props.value}% - 8px)`}}\n        tabIndex={0}\n      />\n    </div>\n  );\n});\n","import * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nconst GANTT_CHART_MODE_KEY = 'GanttChartModePreference';\n\ntype Output = [GanttChartMode, (update: GanttChartMode) => void];\n\nexport const useGanttChartMode = () => {\n  const [mode, setMode] = React.useState<GanttChartMode>(() => {\n    const storedValue = window.localStorage.getItem(GANTT_CHART_MODE_KEY);\n    if (\n      storedValue === GanttChartMode.FLAT ||\n      storedValue === GanttChartMode.WATERFALL ||\n      storedValue === GanttChartMode.WATERFALL_TIMED\n    ) {\n      return storedValue;\n    }\n    return GanttChartMode.WATERFALL_TIMED;\n  });\n\n  const onChange = React.useCallback((update: GanttChartMode) => {\n    window.localStorage.setItem(GANTT_CHART_MODE_KEY, update);\n    setMode(update);\n  }, []);\n\n  return React.useMemo(() => [mode, onChange], [mode, onChange]) as Output;\n};\n","import {Popover, Tag} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {assertUnreachable} from '../app/Util';\nimport {PipelineRunStatus} from '../types/globalTypes';\nimport {Group} from '../ui/Group';\nimport {Spinner} from '../ui/Spinner';\n\nimport {RunStats} from './RunStats';\n\nexport const RunStatusTag = (props: {status: PipelineRunStatus}) => {\n  const {status} = props;\n  switch (status) {\n    case PipelineRunStatus.QUEUED:\n      return (\n        <StatusTag minimal intent=\"none\">\n          Queued\n        </StatusTag>\n      );\n    case PipelineRunStatus.SUCCESS:\n      return (\n        <StatusTag minimal intent=\"success\">\n          Success\n        </StatusTag>\n      );\n    case PipelineRunStatus.STARTING:\n      return (\n        <StatusTag minimal intent=\"none\">\n          Starting\n        </StatusTag>\n      );\n    case PipelineRunStatus.NOT_STARTED:\n      return (\n        <StatusTag minimal intent=\"none\">\n          Not started\n        </StatusTag>\n      );\n    case PipelineRunStatus.FAILURE:\n      return (\n        <StatusTag minimal intent=\"danger\">\n          Failure\n        </StatusTag>\n      );\n    case PipelineRunStatus.STARTED:\n      return (\n        <StatusTag minimal intent=\"primary\">\n          <Group direction=\"row\" spacing={4} alignItems=\"center\">\n            <Spinner purpose=\"body-text\" />\n            <div>Started</div>\n          </Group>\n        </StatusTag>\n      );\n    case PipelineRunStatus.MANAGED:\n      return (\n        <StatusTag minimal intent=\"none\">\n          Managed\n        </StatusTag>\n      );\n    case PipelineRunStatus.CANCELING:\n      return (\n        <StatusTag minimal intent=\"none\">\n          Canceling\n        </StatusTag>\n      );\n    case PipelineRunStatus.CANCELED:\n      return (\n        <StatusTag minimal intent=\"danger\">\n          Canceled\n        </StatusTag>\n      );\n    default:\n      return assertUnreachable(status);\n  }\n};\n\ninterface Props {\n  runId: string;\n  status: PipelineRunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position={'bottom'}\n      interactionKind={'hover'}\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n\nconst StatusTag = styled(Tag)`\n  cursor: default;\n  text-transform: uppercase;\n  user-select: none;\n`;\n","import * as React from 'react';\n\nexport type CountdownStatus = 'counting' | 'idle';\n\ninterface Config {\n  duration: number;\n  status: CountdownStatus;\n  interval?: number;\n  onComplete?: () => void;\n}\n\n/**\n * A hook that performs a countdown for a specified duration and interval.\n *\n * - duration\n *      The length of the countdown\n * - interval\n *      The interval at which the countdown will tick down\n * - onComplete\n *      A function to indicate when the countdown has reached zero, signaling to the\n *      parent that `status` may be updated\n * - status\n *      Whether the countdown should be in progress (\"counting\") or idle. An effect\n *      triggers the countdown to begin when this value changes to \"counting\".\n */\nexport const useCountdown = (config: Config) => {\n  const {duration, interval = 1000, onComplete, status} = config;\n\n  const [remainingTime, setRemainingTime] = React.useState<number>(duration);\n  const token = React.useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const clearToken = React.useCallback(() => {\n    token.current && clearInterval(token.current);\n    token.current = null;\n  }, []);\n\n  React.useEffect(() => {\n    clearToken();\n    if (status === 'counting') {\n      setRemainingTime(duration);\n      token.current = setInterval(() => {\n        setRemainingTime((current) => Math.max(0, current - interval));\n      }, interval);\n    }\n\n    return () => clearToken();\n  }, [clearToken, duration, interval, status]);\n\n  React.useEffect(() => {\n    if (remainingTime === 0) {\n      clearToken();\n      onComplete && onComplete();\n    }\n  }, [clearToken, onComplete, remainingTime]);\n\n  return remainingTime;\n};\n\ninterface Props extends Config {\n  message: (timeRemaining: number) => React.ReactNode;\n}\n\nexport const Countdown = (props: Props) => {\n  const {message, ...rest} = props;\n  const remainingTime = useCountdown(rest);\n  return <>{message(remainingTime)}</>;\n};\n","import {Colors} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ColorsWIP} from './Colors';\nimport {Group} from './Group';\nimport {IconWIP, IconWrapper} from './Icon';\n\ninterface Props {\n  refreshing: boolean;\n  seconds: number;\n  onRefresh: () => void;\n}\n\nexport const RefreshableCountdown = (props: Props) => {\n  const {refreshing, seconds, onRefresh} = props;\n  return (\n    <Group direction=\"row\" spacing={8} alignItems=\"center\">\n      <span style={{color: Colors.GRAY3, fontVariantNumeric: 'tabular-nums', whiteSpace: 'nowrap'}}>\n        {refreshing ? 'Refreshing data…' : `0:${seconds < 10 ? `0${seconds}` : seconds}`}\n      </span>\n      <Tooltip content={<span style={{whiteSpace: 'nowrap'}}>Refresh now</span>} position=\"bottom\">\n        <RefreshButton onClick={onRefresh}>\n          <IconWIP name=\"refresh\" color={ColorsWIP.Gray400} />\n        </RefreshButton>\n      </Tooltip>\n    </Group>\n  );\n};\n\nconst RefreshButton = styled.button`\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  outline: none;\n  background-color: transparent;\n  position: relative;\n  top: 1px;\n\n  & ${IconWrapper} {\n    display: block;\n    transition: color 100ms linear;\n\n    &:hover {\n      color: ${ColorsWIP.Dark};\n    }\n  }\n`;\n","import * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {FontFamily} from '../ui/styles';\n\nexport const showLaunchError = (error: Error) => {\n  console.error('Error launching run:', error);\n\n  const body =\n    error.message === 'Failed to fetch' ? (\n      <div style={{fontFamily: FontFamily.default}}>\n        Make sure the Dagit server is running and try again.\n      </div>\n    ) : (\n      <div>{error.message}</div>\n    );\n\n  showCustomAlert({\n    title: 'Could not launch run',\n    body,\n  });\n};\n","import * as React from 'react';\n\nimport {RunFragmentForRepositoryMatch} from '../runs/types/RunFragmentForRepositoryMatch';\n\nimport {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\n/**\n * Given a Run fragment, find the repository that contains its pipeline.\n */\nexport const useRepositoryForRun = (\n  run: RunFragmentForRepositoryMatch | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipeline.name;\n    // Try to match the pipeline name within the specified origin, if possible.\n    const origin = run.repositoryOrigin;\n\n    if (!origin) {\n      return null;\n    }\n\n    const location = origin?.repositoryLocationName;\n    const name = origin?.repositoryName;\n\n    const match = options.find(\n      (option) => option.repository.name === name && option.repositoryLocation.name === location,\n    );\n\n    // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n    return match && repoContainsPipeline(match, pipelineName) ? match : null;\n  }, [options, run]);\n\n  const snapshotMatches = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipeline.name;\n    const snapshotId = run.pipelineSnapshotId;\n\n    // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n    if (pipelineName && snapshotId) {\n      const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n      if (snapshotMatches.length) {\n        return snapshotMatches;\n      }\n    }\n\n    return null;\n  }, [options, run]);\n\n  const pipelineNameMatches = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipeline.name;\n\n    // There is no origin repo. Find any repos that might contain a matching pipeline name.\n    const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n    return possibleMatches.length ? possibleMatches : null;\n  }, [options, run]);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (pipelineNameMatches) {\n    return {match: pipelineNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n","import {gql} from '@apollo/client';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {EXECUTION_PLAN_TO_GRAPH_FRAGMENT} from '../gantt/toGraphQueryItems';\n\nimport {LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT} from './LogsScrollingTable';\nimport {RUN_DETAILS_FRAGMENT} from './RunDetails';\nimport {RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT} from './RunMetadataProvider';\n\nexport const RUN_FRAGMENT_FOR_REPOSITORY_MATCH = gql`\n  fragment RunFragmentForRepositoryMatch on PipelineRun {\n    id\n    pipeline {\n      name\n    }\n    pipelineSnapshotId\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n  }\n`;\n\nexport const RunFragments = {\n  RunFragment: gql`\n    fragment RunFragment on PipelineRun {\n      id\n      runConfigYaml\n      runId\n      canTerminate\n      status\n      mode\n      tags {\n        key\n        value\n      }\n      rootRunId\n      parentRunId\n      pipeline {\n        __typename\n        ... on PipelineReference {\n          name\n          solidSelection\n        }\n      }\n      pipelineSnapshotId\n      executionPlan {\n        steps {\n          key\n          inputs {\n            dependsOn {\n              key\n              outputs {\n                name\n                type {\n                  name\n                }\n              }\n            }\n          }\n        }\n        artifactsPersisted\n        ...ExecutionPlanToGraphFragment\n      }\n      stepKeysToExecute\n      ...RunFragmentForRepositoryMatch\n      ...RunDetailsFragment\n    }\n\n    ${EXECUTION_PLAN_TO_GRAPH_FRAGMENT}\n    ${RUN_FRAGMENT_FOR_REPOSITORY_MATCH}\n    ${RUN_DETAILS_FRAGMENT}\n  `,\n  RunPipelineRunEventFragment: gql`\n    fragment RunPipelineRunEventFragment on PipelineRunEvent {\n      ... on MessageEvent {\n        message\n        timestamp\n        level\n        stepKey\n      }\n\n      ...LogsScrollingTableMessageFragment\n      ...RunMetadataProviderMessageFragment\n    }\n\n    ${RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT}\n    ${LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT}\n    ${PYTHON_ERROR_FRAGMENT}\n  `,\n};\n","import {Colors} from '@blueprintjs/core';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {useLocation, Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {TimezoneContext} from '../app/time/TimezoneContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\nimport {FontFamily} from '../ui/styles';\n\nimport {LogLevel} from './LogLevel';\nimport {ColumnWidthsContext} from './LogsScrollingTableHeader';\n\nconst bgcolorForLevel = (level: LogLevel) =>\n  ({\n    [LogLevel.DEBUG]: `transparent`,\n    [LogLevel.INFO]: `transparent`,\n    [LogLevel.EVENT]: `transparent`,\n    [LogLevel.WARNING]: `rgba(166, 121, 8, 0.05)`,\n    [LogLevel.ERROR]: `rgba(206, 17, 38, 0.05)`,\n    [LogLevel.CRITICAL]: `rgba(206, 17, 38, 0.05)`,\n  }[level]);\n\nexport const Row = styled.div<{level: LogLevel; highlighted: boolean}>`\n  font-size: 0.9em;\n  width: 100%;\n  height: 100%;\n  max-height: 17em;\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  overflow: hidden;\n  border-top: 1px solid ${Colors.LIGHT_GRAY3};\n  background: ${({highlighted, level}) => (highlighted ? '#ffe39f' : bgcolorForLevel(level))};\n  &:hover {\n    background: ${({highlighted}) => (highlighted ? '#ffe39f' : 'white')};\n  }\n  color: ${(props) =>\n    ({\n      [LogLevel.DEBUG]: Colors.GRAY3,\n      [LogLevel.INFO]: Colors.DARK_GRAY2,\n      [LogLevel.EVENT]: Colors.DARK_GRAY2,\n      [LogLevel.WARNING]: Colors.GOLD2,\n      [LogLevel.ERROR]: Colors.RED3,\n      [LogLevel.CRITICAL]: Colors.RED3,\n    }[props.level])};\n`;\n\nexport const StructuredContent = styled.div`\n  background: rgba(255, 255, 255, 0.5);\n  color: ${Colors.DARK_GRAY2};\n  box-sizing: border-box;\n  border-left: 1px solid ${Colors.LIGHT_GRAY4};\n  border-right: 1px solid ${Colors.LIGHT_GRAY4};\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\n// Step Key Column\n//\n// Renders the left column with the step key broken into hierarchical components.\n// Manually implements middle text truncation since we can count on monospace font\n// rendering being fairly consistent.\n//\nexport const SolidColumn = (props: {stepKey: string | false | null}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const parts = String(props.stepKey).split('.');\n  return (\n    <SolidColumnContainer style={{width: widths.solid}}>\n      {props.stepKey\n        ? parts.map((p, idx) => (\n            <div\n              key={idx}\n              data-tooltip={p}\n              data-tooltip-style={SolidColumnTooltipStyle}\n              style={{\n                marginLeft: Math.max(0, idx * 15 - 9),\n                fontWeight: idx === parts.length - 1 ? 600 : 300,\n                paddingRight: 15,\n              }}\n            >\n              {idx > 0 ? '↳' : ''}\n              {p.length > 30 - idx * 2\n                ? `${p.substr(0, 16 - idx * 2)}…${p.substr(p.length - 14)}`\n                : p}\n            </div>\n          ))\n        : '-'}\n    </SolidColumnContainer>\n  );\n};\n\nconst SolidColumnContainer = styled.div`\n  width: 250px;\n  flex-shrink: 0;\n  padding: 4px;\n`;\n\nconst SolidColumnTooltipStyle = JSON.stringify({\n  fontSize: '0.9em',\n  fontFamily: FontFamily.monospace,\n  color: Colors.BLACK,\n  background: Colors.WHITE,\n  border: `1px solid ${Colors.LIGHT_GRAY3}`,\n  top: -8,\n  left: 1,\n});\n\n// Timestamp Column\n\nexport const TimestampColumn: React.FC<{time: string | null}> = React.memo((props) => {\n  const location = useLocation();\n  const widths = React.useContext(ColumnWidthsContext);\n  const [timezone] = React.useContext(TimezoneContext);\n  const timeString = () => {\n    const {time} = props;\n    if (time) {\n      const timeNumber = Number(time);\n      const locale = navigator.language;\n      const main = new Date(timeNumber).toLocaleTimeString(locale, {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n      });\n      const fractionalSec = (timeNumber % 1000) / 1000;\n      return `${main}${fractionalSec\n        .toLocaleString(locale, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n        .slice(1)}`;\n    }\n    return '';\n  };\n\n  const href = `${location.pathname}?${qs.stringify({focusedTime: props.time})}`;\n\n  return (\n    <TimestampColumnContainer style={{width: widths.timestamp}}>\n      <Link to={href}>{timeString()}</Link>\n    </TimestampColumnContainer>\n  );\n});\n\nconst TimestampColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding: 4px 4px 4px 8px;\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${Colors.GRAY3};\n  }\n\n  a:hover,\n  a:active {\n    text-decoration: underline;\n  }\n`;\n\nexport const EventTypeColumn: React.FC = (props) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <EventTypeColumnContainer style={{width: widths.eventType}}>\n      {props.children}\n    </EventTypeColumnContainer>\n  );\n};\n\nconst EventTypeColumnContainer = styled.div`\n  flex-shrink: 0;\n  color: ${Colors.GRAY3};\n  padding: 4px;\n`;\n","export enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n  EVENT = 'EVENT', // structured events\n}\n\nexport const DefaultLogLevels = ['INFO', 'WARNING', 'ERROR', 'CRITICAL', 'EVENT'];\n","// eslint-disable-next-line no-restricted-imports\nimport {Button, Icon, IconName, Menu, MenuItem, Popover, Position} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {Box} from '../ui/Box';\nimport {Spinner} from '../ui/Spinner';\n\nexport interface LaunchButtonConfiguration {\n  title: string;\n  disabled: boolean;\n  scope?: string;\n  onClick: () => Promise<any>;\n  icon?: IconName | JSX.Element | 'dagster-spinner';\n  tooltip?: string | JSX.Element;\n}\n\nenum LaunchButtonStatus {\n  Ready = 'ready',\n  Starting = 'starting',\n  Disabled = 'disabled',\n}\n\nfunction useLaunchButtonCommonState({runCount, disabled}: {runCount: number; disabled: boolean}) {\n  const [starting, setStarting] = React.useState(false);\n\n  const onConfigSelected = async (option: LaunchButtonConfiguration) => {\n    setStarting(true);\n    await option.onClick();\n    setStarting(false);\n  };\n\n  let forced: Partial<LaunchButtonConfiguration> = {};\n  let status = disabled ? LaunchButtonStatus.Disabled : LaunchButtonStatus.Ready;\n\n  if (starting) {\n    status = LaunchButtonStatus.Starting;\n    forced = {\n      title: runCount === 1 ? 'Submitting run…' : `Submitting ${runCount} runs…`,\n      disabled: true,\n      icon: 'dagster-spinner',\n    };\n  }\n\n  return {\n    forced,\n    status,\n    onConfigSelected,\n  };\n}\n\ninterface LaunchButtonProps {\n  small?: boolean;\n  config: LaunchButtonConfiguration;\n  runCount: number;\n}\n\nexport const LaunchButton = ({config, runCount, small}: LaunchButtonProps) => {\n  const {forced, status, onConfigSelected} = useLaunchButtonCommonState({\n    runCount,\n    disabled: config.disabled,\n  });\n  const onClick = () => {\n    status === LaunchButtonStatus.Ready && onConfigSelected(config);\n  };\n  return (\n    <ShortcutHandler\n      onShortcut={onClick}\n      shortcutLabel={`⌥L`}\n      shortcutFilter={(e) => e.keyCode === 76 && e.altKey}\n    >\n      <ButtonWithConfiguration\n        status={status}\n        small={small}\n        {...config}\n        {...forced}\n        onClick={onClick}\n      />\n    </ShortcutHandler>\n  );\n};\n\ninterface LaunchButtonDropdownProps {\n  title: string;\n  small?: boolean;\n  primary: LaunchButtonConfiguration;\n  options: LaunchButtonConfiguration[];\n  disabled?: boolean;\n  tooltip?: string | JSX.Element;\n  icon?: IconName | undefined;\n  runCount: number;\n}\n\nexport const LaunchButtonDropdown = ({\n  title,\n  small,\n  primary,\n  options,\n  disabled,\n  icon,\n  tooltip,\n  runCount,\n}: LaunchButtonDropdownProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {forced, status, onConfigSelected} = useLaunchButtonCommonState({\n    runCount,\n    disabled: disabled || options.every((d) => d.disabled),\n  });\n\n  return (\n    <ShortcutHandler\n      onShortcut={() => onConfigSelected(primary)}\n      shortcutLabel={`⌥L`}\n      shortcutFilter={(e) => e.keyCode === 76 && e.altKey}\n    >\n      <ButtonWithConfiguration\n        status={status}\n        small={small}\n        title={title}\n        joined=\"right\"\n        icon={icon}\n        tooltip={tooltip}\n        onClick={() => onConfigSelected(primary)}\n        disabled={!!disabled}\n        {...forced}\n      />\n      <Popover\n        isOpen={isOpen}\n        onInteraction={(nextOpen) => setIsOpen(nextOpen)}\n        disabled={status === LaunchButtonStatus.Disabled}\n        position=\"bottom-right\"\n        content={\n          <Menu>\n            {options.map((option, idx) => (\n              <Tooltip\n                key={idx}\n                hoverOpenDelay={300}\n                position={Position.LEFT}\n                openOnTargetFocus={false}\n                targetTagName=\"div\"\n                content={option.tooltip}\n              >\n                <LaunchMenuItem\n                  text={option.title}\n                  disabled={option.disabled}\n                  onClick={() => onConfigSelected(option)}\n                  icon={option.icon === 'dagster-spinner' ? 'blank' : option.icon}\n                />\n              </Tooltip>\n            ))}\n          </Menu>\n        }\n      >\n        <ButtonContainer\n          role=\"button\"\n          status={status}\n          small={small}\n          style={{minWidth: 'initial', padding: '0 15px'}}\n          icon={'caret-down'}\n          joined={'left'}\n        />\n      </Popover>\n    </ShortcutHandler>\n  );\n};\n\ninterface ButtonWithConfigurationProps {\n  title: string;\n  status: LaunchButtonStatus;\n  style?: React.CSSProperties;\n  icon?: IconName | JSX.Element | 'dagster-spinner';\n  joined?: 'left' | 'right';\n  tooltip?: string | JSX.Element;\n  small?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\n// Basic helper components\n\nconst ButtonWithConfiguration: React.FunctionComponent<ButtonWithConfigurationProps> = ({\n  tooltip,\n  icon,\n  title,\n  small,\n  status,\n  style,\n  onClick,\n  joined,\n  disabled,\n}) => {\n  const sizeStyles = small ? {height: 24, minWidth: 120, paddingLeft: 15, paddingRight: 15} : {};\n\n  return (\n    <Tooltip\n      position={Position.LEFT}\n      openOnTargetFocus={false}\n      targetTagName=\"div\"\n      content={tooltip}\n    >\n      <ButtonContainer\n        role=\"button\"\n        style={{...sizeStyles, ...style}}\n        status={status}\n        onClick={onClick}\n        joined={joined}\n        disabled={disabled}\n      >\n        {icon === 'dagster-spinner' ? (\n          <Box padding={{right: 8}}>\n            <Spinner purpose=\"body-text\" />\n          </Box>\n        ) : (\n          <Icon\n            icon={icon}\n            iconSize={small ? 12 : 17}\n            style={{textAlign: 'center', marginRight: 5}}\n          />\n        )}\n        <ButtonText>{title}</ButtonText>\n      </ButtonContainer>\n    </Tooltip>\n  );\n};\n\nconst ButtonContainer = styled(Button)<{\n  status: LaunchButtonStatus;\n  small?: boolean;\n  joined?: 'right' | 'left';\n}>`\n  &&& {\n    height: ${({small}) => (small ? '24' : '30')}px;\n    flex-shrink: 0;\n    background: ${({status}) =>\n      ({\n        disabled: 'linear-gradient(to bottom, rgb(145, 145, 145) 30%, rgb(130, 130, 130) 100%);',\n        ready: 'linear-gradient(to bottom, rgb(36, 145, 235) 30%, rgb(27, 112, 187) 100%);',\n        starting: 'linear-gradient(to bottom, rgb(21, 89, 150) 30%, rgb(21, 89, 150) 100%);',\n      }[status])};\n    border-top: 1px solid rgba(255, 255, 255, 0.25);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n    border-radius: 3px;\n    border-top-${({joined}) => joined}-radius: 0;\n    border-bottom-${({joined}) => joined}-radius: 0;\n    transition: background 200ms linear;\n    justify-content: center;\n    align-items: center;\n    display: inline-flex;\n    color: ${({status}) => (status === 'disabled' ? 'rgba(255,255,255,0.5)' : 'white')};\n    cursor: ${({status}) => (status !== 'ready' ? 'normal' : 'pointer')};\n    z-index: 2;\n    min-width: 150px;\n    margin-left: ${({joined}) => (joined ? '0' : '6px')};\n    padding: 0 25px;\n    min-height: 0;\n\n    &:hover,\n    &.bp3-active {\n      background: ${({status}) =>\n        ({\n          disabled: 'linear-gradient(to bottom, rgb(145, 145, 145) 30%, rgb(130, 130, 130) 100%);',\n          ready: 'linear-gradient(to bottom, rgb(27, 112, 187) 30%, rgb(21, 89, 150) 100%);',\n          starting: 'linear-gradient(to bottom, rgb(21, 89, 150) 30%, rgb(21, 89, 150) 100%);',\n        }[status])};\n    }\n\n    path.bp3-spinner-head {\n      stroke: white;\n    }\n\n    .bp3-icon {\n      color: ${({status}) => (status === 'disabled' ? 'rgba(255,255,255,0.5)' : 'white')};\n    }\n    .bp3-button-text {\n      display: flex;\n      align-items: center;\n    }\n  }\n`;\n\nconst ButtonText = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 350px;\n`;\n\nconst LaunchMenuItem = styled(MenuItem)`\n  max-width: 200px;\n`;\n","import {gql, useLazyQuery} from '@apollo/client';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {PipelineRunStatus, PipelineRunsFilter} from '../types/globalTypes';\nimport {\n  SuggestionProvider,\n  TokenizingField,\n  TokenizingFieldValue,\n  stringFromValue,\n  tokenizedValuesFromString,\n} from '../ui/TokenizingField';\nimport {DagsterRepoOption, useRepositoryOptions} from '../workspace/WorkspaceContext';\n\nimport {\n  RunsSearchSpaceQuery,\n  RunsSearchSpaceQuery_pipelineRunTags,\n} from './types/RunsSearchSpaceQuery';\n\ntype PipelineRunTags = RunsSearchSpaceQuery_pipelineRunTags[];\n\nexport type RunFilterTokenType = 'id' | 'status' | 'pipeline' | 'job' | 'snapshotId' | 'tag';\n\nconst RUN_PROVIDERS_EMPTY = [\n  {\n    token: 'id',\n    values: () => [],\n  },\n  {\n    token: 'status',\n    values: () => [],\n  },\n  {\n    token: 'pipeline',\n    values: () => [],\n  },\n  {\n    token: 'job',\n    values: () => [],\n  },\n  {\n    token: 'tag',\n    values: () => [],\n  },\n  {\n    token: 'snapshotId',\n    values: () => [],\n  },\n];\n\n/**\n * This React hook provides run filtering state similar to React.useState(), but syncs\n * the value to the URL query string so that reloading the page / navigating \"back\"\n * maintains your view as expected.\n *\n * @param enabledFilters: This is useful if you want to ignore some filters that could\n * be provided (eg pipeline:, which is not relevant within pipeline scoped views.)\n */\nexport function useQueryPersistedRunFilters(enabledFilters?: RunFilterTokenType[]) {\n  return useQueryPersistedState<TokenizingFieldValue[]>(\n    React.useMemo(\n      () => ({\n        encode: (tokens) => ({q: stringFromValue(tokens), cursor: undefined}),\n        decode: ({q = ''}) =>\n          tokenizedValuesFromString(q, RUN_PROVIDERS_EMPTY).filter(\n            (t) =>\n              !t.token || !enabledFilters || enabledFilters.includes(t.token as RunFilterTokenType),\n          ),\n      }),\n      [enabledFilters],\n    ),\n  );\n}\n\nexport function runsFilterForSearchTokens(search: TokenizingFieldValue[]) {\n  if (!search[0]) {\n    return {};\n  }\n\n  const obj: PipelineRunsFilter = {};\n\n  for (const item of search) {\n    if (item.token === 'pipeline') {\n      obj.pipelineName = item.value;\n    } else if (item.token === 'id') {\n      obj.runIds = [item.value];\n    } else if (item.token === 'status') {\n      if (!obj.statuses) {\n        obj.statuses = [];\n      }\n      obj.statuses.push(item.value as PipelineRunStatus);\n    } else if (item.token === 'snapshotId') {\n      obj.snapshotId = item.value;\n    } else if (item.token === 'tag') {\n      const [key, value] = item.value.split('=');\n      if (obj.tags) {\n        obj.tags.push({key, value});\n      } else {\n        obj.tags = [{key, value}];\n      }\n    } else if (item.token === 'job') {\n      const [pipeline, mode = 'default'] = item.value.split(':');\n      obj.pipelineName = pipeline;\n      obj.mode = mode;\n    }\n  }\n\n  return obj;\n}\n\nfunction searchSuggestionsForRuns(\n  repositoryOptions: DagsterRepoOption[],\n  pipelineRunTags?: PipelineRunTags,\n  enabledFilters?: RunFilterTokenType[],\n): SuggestionProvider[] {\n  const pipelineNames = new Set<string>();\n  const jobNames = new Set<string>();\n\n  for (const option of repositoryOptions) {\n    const {repository} = option;\n    for (const pipeline of repository.pipelines) {\n      pipelineNames.add(pipeline.name);\n      for (const mode of pipeline.modes) {\n        jobNames.add(`${pipeline.name}${mode.name === 'default' ? '' : `:${mode.name}`}`);\n      }\n    }\n  }\n\n  const suggestions: {token: RunFilterTokenType; values: () => string[]}[] = [\n    {\n      token: 'id',\n      values: () => [],\n    },\n    {\n      token: 'status',\n      values: () => Object.keys(PipelineRunStatus),\n    },\n    {\n      token: 'pipeline',\n      values: () => Array.from(pipelineNames),\n    },\n    {\n      token: 'job',\n      values: () => Array.from(jobNames),\n    },\n    {\n      token: 'tag',\n      values: () => {\n        const all: string[] = [];\n        [...(pipelineRunTags || [])]\n          .sort((a, b) => a.key.localeCompare(b.key))\n          .forEach((t) => t.values.forEach((v) => all.push(`${t.key}=${v}`)));\n        return all;\n      },\n    },\n    {\n      token: 'snapshotId',\n      values: () => [],\n    },\n  ];\n\n  if (enabledFilters) {\n    return suggestions.filter((x) => enabledFilters.includes(x.token));\n  }\n\n  return suggestions;\n}\n\ninterface RunsFilterProps {\n  loading?: boolean;\n  tokens: TokenizingFieldValue[];\n  onChange: (tokens: TokenizingFieldValue[]) => void;\n  enabledFilters?: RunFilterTokenType[];\n}\n\nexport const RunsFilter: React.FC<RunsFilterProps> = ({\n  loading,\n  tokens,\n  onChange,\n  enabledFilters,\n}) => {\n  const {options} = useRepositoryOptions();\n  const [performQuery, {data}] = useLazyQuery<RunsSearchSpaceQuery>(RUNS_SEARCH_SPACE_QUERY, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const suggestions = searchSuggestionsForRuns(options, data?.pipelineRunTags, enabledFilters);\n\n  const search = tokenizedValuesFromString(stringFromValue(tokens), suggestions);\n\n  const suggestionProvidersFilter = (\n    suggestionProviders: SuggestionProvider[],\n    values: TokenizingFieldValue[],\n  ) => {\n    const tokens: string[] = [];\n    for (const {token} of values) {\n      if (token) {\n        tokens.push(token);\n      }\n    }\n\n    // If id is set, then no other filters can be set\n    if (tokens.includes('id')) {\n      return [];\n    }\n\n    // Can only have one filter value for pipeline or id\n    const limitedTokens = new Set<string>(['id', 'job', 'pipeline', 'snapshotId']);\n    const presentLimitedTokens = tokens.filter((token) => limitedTokens.has(token));\n\n    return suggestionProviders.filter((provider) => !presentLimitedTokens.includes(provider.token));\n  };\n\n  const onFocus = React.useCallback(() => performQuery(), [performQuery]);\n\n  return (\n    <TokenizingField\n      values={search}\n      onChange={onChange}\n      onFocus={onFocus}\n      suggestionProviders={suggestions}\n      suggestionProvidersFilter={suggestionProvidersFilter}\n      loading={loading}\n    />\n  );\n};\n\nconst RUNS_SEARCH_SPACE_QUERY = gql`\n  query RunsSearchSpaceQuery {\n    pipelineRunTags {\n      key\n      values\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\nimport {RouteComponentProps, useHistory} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {Loading} from '../ui/Loading';\nimport {usePipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {explodeCompositesInHandleGraph} from './CompositeSupport';\nimport {NonIdealPipelineQueryResult} from './NonIdealPipelineQueryResult';\nimport {\n  PipelineExplorer,\n  PipelineExplorerOptions,\n  PIPELINE_EXPLORER_FRAGMENT,\n  PIPELINE_EXPLORER_SOLID_HANDLE_FRAGMENT,\n} from './PipelineExplorer';\nimport {\n  PipelineExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from './PipelinePathUtils';\nimport {\n  PipelineExplorerRootQuery,\n  PipelineExplorerRootQueryVariables,\n} from './types/PipelineExplorerRootQuery';\n\nexport const PipelineExplorerRegexRoot: React.FC<\n  RouteComponentProps & {repoAddress: RepoAddress}\n> = (props) => {\n  const explorerPath = explorerPathFromString(props.match.params['0']);\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const history = useHistory();\n\n  useDocumentTitle(\n    `${flagPipelineModeTuples ? 'Graph' : 'Pipeline'}: ${explorerPath.pipelineName}`,\n  );\n\n  return (\n    <PipelineExplorerContainer\n      explorerPath={explorerPath}\n      repoAddress={props.repoAddress}\n      onChangeExplorerPath={(path, mode) => {\n        const tab = flagPipelineModeTuples ? 'graphs' : 'pipelines';\n        const fullPath = props.repoAddress\n          ? workspacePathFromAddress(props.repoAddress, `/${tab}/${explorerPathToString(path)}`)\n          : `/workspace/${tab}/${explorerPathToString(path)}`;\n\n        if (mode === 'push') {\n          history.push(fullPath);\n        } else {\n          history.replace(fullPath);\n        }\n      }}\n    />\n  );\n};\n\nexport const PipelineExplorerSnapshotRoot: React.FC<RouteComponentProps> = (props) => {\n  const explorerPath = explorerPathFromString(props.match.params['0']);\n  const {pipelineName, snapshotId} = explorerPath;\n  const history = useHistory();\n\n  useDocumentTitle(`Snapshot: ${pipelineName}${snapshotId ? `@${snapshotId.slice(0, 8)}` : ''}`);\n\n  return (\n    <PipelineExplorerContainer\n      explorerPath={explorerPath}\n      onChangeExplorerPath={(path, mode) => {\n        history[mode](`/instance/snapshots/${explorerPathToString(path)}`);\n      }}\n    />\n  );\n};\n\nexport const PipelineExplorerContainer: React.FC<{\n  explorerPath: PipelineExplorerPath;\n  onChangeExplorerPath: (path: PipelineExplorerPath, mode: 'replace' | 'push') => void;\n  repoAddress?: RepoAddress;\n}> = ({explorerPath, repoAddress, onChangeExplorerPath}) => {\n  const [options, setOptions] = React.useState<PipelineExplorerOptions>({\n    explodeComposites: false,\n  });\n\n  const selectedName = explorerPath.pathSolids[explorerPath.pathSolids.length - 1];\n  const parentNames = explorerPath.pathSolids.slice(0, explorerPath.pathSolids.length - 1);\n  const pipelineSelector = usePipelineSelector(repoAddress || null, explorerPath.pipelineName);\n\n  const queryResult = useQuery<PipelineExplorerRootQuery, PipelineExplorerRootQueryVariables>(\n    PIPELINE_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        pipelineSelector: explorerPath.snapshotId ? undefined : pipelineSelector,\n        snapshotId: explorerPath.snapshotId ? explorerPath.snapshotId : undefined,\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<PipelineExplorerRootQuery> queryResult={queryResult}>\n      {({pipelineSnapshotOrError: result}) => {\n        if (result.__typename !== 'PipelineSnapshot') {\n          return <NonIdealPipelineQueryResult result={result} />;\n        }\n\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n\n        const selectedHandle = displayedHandles.find((h) => h.solid.name === selectedName);\n\n        // Run a few assertions on the state of the world and redirect the user\n        // back to safety if they've landed in an invalid place. Note that we can\n        // pop one layer at a time and this renders recursively until we reach a\n        // valid parent.\n        const invalidSelection = selectedName && !selectedHandle;\n        const invalidParent =\n          parentHandle && parentHandle.solid.definition.__typename !== 'CompositeSolidDefinition';\n\n        if (invalidSelection || invalidParent) {\n          onChangeExplorerPath(\n            {\n              ...explorerPath,\n              pathSolids: explorerPath.pathSolids.slice(0, explorerPath.pathSolids.length - 1),\n            },\n            'replace',\n          );\n        }\n\n        return (\n          <PipelineExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={onChangeExplorerPath}\n            pipeline={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            selectedHandle={selectedHandle}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nexport const PIPELINE_EXPLORER_ROOT_QUERY = gql`\n  query PipelineExplorerRootQuery(\n    $pipelineSelector: PipelineSelector\n    $snapshotId: String\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId, activePipelineSelector: $pipelineSelector) {\n      ... on PipelineSnapshot {\n        id\n        name\n        ...PipelineExplorerFragment\n\n        solidHandle(handleID: $rootHandleID) {\n          ...PipelineExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n          }\n          ...PipelineExplorerSolidHandleFragment\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ... on PythonError {\n        message\n      }\n    }\n  }\n  ${PIPELINE_EXPLORER_FRAGMENT}\n  ${PIPELINE_EXPLORER_SOLID_HANDLE_FRAGMENT}\n`;\n","import {Colors} from '@blueprintjs/core';\nimport {scaleOrdinal} from '@vx/scale';\n\nexport const PipelineColorScale = scaleOrdinal({\n  domain: [\n    'source',\n    'input',\n    'inputHighlighted',\n    'solid',\n    'solidComposite',\n    'solidCompositeChild',\n    'solidDarker',\n    'output',\n    'outputHighlighted',\n    'materializations',\n  ],\n  range: [\n    Colors.TURQUOISE5,\n    Colors.TURQUOISE3,\n    Colors.TURQUOISE1,\n    '#DBE6EE',\n    '#E6DBEE',\n    '#E0E0ED',\n    '#7D8C97',\n    Colors.BLUE3,\n    Colors.BLUE1,\n    Colors.ORANGE5,\n  ],\n});\n","import {Slider} from '@blueprintjs/core';\nimport animate from 'amator';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {IconWIP} from '../ui/Icon';\n\nexport interface SVGViewportInteractor {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>): void;\n  onWheel(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>): void;\n  render?(viewport: SVGViewport): React.ReactElement<any> | null;\n}\n\nconst DEFAULT_ZOOM = 0.75;\ninterface SVGViewportProps {\n  graphWidth: number;\n  graphHeight: number;\n  backgroundColor?: string;\n  interactor: SVGViewportInteractor;\n  maxZoom: number;\n  maxAutocenterZoom: number;\n  onDoubleClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  children: (state: SVGViewportState) => React.ReactNode;\n}\n\ninterface SVGViewportState {\n  x: number;\n  y: number;\n  scale: number;\n  minScale: number;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport const DETAIL_ZOOM = 0.75;\nconst DEFAULT_MAX_AUTOCENTER_ZOOM = 0.39;\n\nconst MIN_AUTOCENTER_ZOOM = 0.15;\nconst MIN_ZOOM = 0.015;\n\nconst PanAndZoomInteractor: SVGViewportInteractor = {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>) {\n    if (viewport._animation) {\n      viewport._animation.cancel();\n    }\n\n    if (!viewport.element.current) {\n      return;\n    }\n\n    if (event.target instanceof HTMLElement && event.target.closest('#zoom-slider-container')) {\n      return;\n    }\n\n    const start = viewport.getOffsetXY(event);\n    if (!start) {\n      return;\n    }\n\n    let lastX: number = start.x;\n    let lastY: number = start.y;\n\n    const onMove = (e: MouseEvent) => {\n      const offset = viewport.getOffsetXY(e);\n      if (!offset) {\n        return;\n      }\n\n      const delta = {x: offset.x - lastX, y: offset.y - lastY};\n      viewport.setState({\n        x: viewport.state.x + delta.x,\n        y: viewport.state.y + delta.y,\n      });\n      lastX = offset.x;\n      lastY = offset.y;\n    };\n\n    const onUp = () => {\n      document.removeEventListener('mousemove', onMove);\n      document.removeEventListener('mouseup', onUp);\n    };\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onUp);\n    event.stopPropagation();\n  },\n\n  onWheel(viewport: SVGViewport, event: React.WheelEvent<HTMLDivElement>) {\n    const cursorPosition = viewport.getOffsetXY(event);\n    if (!cursorPosition) {\n      return;\n    }\n\n    const targetScale = viewport.state.scale * (1 - event.deltaY * 0.0025);\n    const scale = Math.max(MIN_ZOOM, Math.min(viewport.getMaxZoom(), targetScale));\n    viewport.adjustZoomRelativeToScreenPoint(scale, cursorPosition);\n  },\n\n  render(viewport: SVGViewport) {\n    return (\n      <ZoomSliderContainer id=\"zoom-slider-container\">\n        <Box margin={{bottom: 8}}>\n          <IconButton\n            onClick={() => {\n              const x = viewport.element.current!.clientWidth / 2;\n              const y = viewport.element.current!.clientHeight / 2;\n              viewport.adjustZoomRelativeToScreenPoint(viewport.getMaxZoom(), {x, y});\n            }}\n          >\n            <IconWIP size={24} name=\"zoom_in\" color={ColorsWIP.Gray300} />\n          </IconButton>\n        </Box>\n        <Slider\n          vertical\n          min={MIN_ZOOM}\n          max={viewport.getMaxZoom()}\n          stepSize={0.001}\n          value={viewport.state.scale}\n          labelRenderer={false}\n          onChange={(scale: number) => {\n            const x = viewport.element.current!.clientWidth / 2;\n            const y = viewport.element.current!.clientHeight / 2;\n            viewport.adjustZoomRelativeToScreenPoint(scale, {x, y});\n          }}\n        />\n        <Box margin={{top: 8}}>\n          <IconButton\n            onClick={() => {\n              const x = viewport.element.current!.clientWidth / 2;\n              const y = viewport.element.current!.clientHeight / 2;\n              viewport.adjustZoomRelativeToScreenPoint(MIN_ZOOM, {x, y});\n            }}\n          >\n            <IconWIP size={24} name=\"zoom_out\" color={ColorsWIP.Gray300} />\n          </IconButton>\n        </Box>\n      </ZoomSliderContainer>\n    );\n  },\n};\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  position: relative;\n  left: -4px;\n`;\n\nconst NoneInteractor: SVGViewportInteractor = {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n  },\n\n  onWheel() {\n    return;\n  },\n\n  render() {\n    return <span />;\n  },\n};\n\nexport class SVGViewport extends React.Component<SVGViewportProps, SVGViewportState> {\n  static Interactors = {\n    PanAndZoom: PanAndZoomInteractor,\n    None: NoneInteractor,\n  };\n\n  static defaultProps = {\n    maxZoom: DEFAULT_ZOOM,\n    maxAutocenterZoom: DEFAULT_MAX_AUTOCENTER_ZOOM,\n  };\n\n  element: React.RefObject<HTMLDivElement> = React.createRef();\n  panzoom: any;\n\n  _animation: any = null;\n  _lastWheelTime = 0;\n  _lastWheelDir = 0;\n\n  state = {\n    x: 0,\n    y: 0,\n    scale: DETAIL_ZOOM,\n    minScale: 0,\n  };\n\n  componentDidMount() {\n    this.autocenter();\n  }\n\n  cancelAnimations() {\n    if (this._animation) {\n      this._animation.cancel();\n    }\n  }\n\n  autocenter(animate = false) {\n    const el = this.element.current!;\n    const ownerRect = {width: el.clientWidth, height: el.clientHeight};\n\n    const dw = ownerRect.width / this.props.graphWidth;\n    const dh = ownerRect.height / this.props.graphHeight;\n    const desiredScale = Math.min(dw, dh);\n    const boundedScale = Math.max(\n      Math.min(desiredScale, this.props.maxAutocenterZoom),\n      MIN_AUTOCENTER_ZOOM,\n    );\n\n    if (\n      this.state.scale < boundedScale &&\n      desiredScale !== boundedScale &&\n      boundedScale === MIN_AUTOCENTER_ZOOM\n    ) {\n      // If the user is zoomed out past where they're going to land, AND where they're going to land\n      // is not a view of the entire DAG but instead a view of some zoomed section, autocentering is\n      // undesirable and should do nothing.\n      return;\n    }\n    const target = {\n      x: -(this.props.graphWidth / 2) * boundedScale + ownerRect.width / 2,\n      y: -(this.props.graphHeight / 2) * boundedScale + ownerRect.height / 2,\n      scale: boundedScale,\n    };\n\n    if (animate) {\n      this.smoothZoom(target);\n    } else {\n      this.setState(Object.assign(target, {minScale: boundedScale}));\n    }\n  }\n\n  screenToSVGCoords({x, y}: Point): Point {\n    const el = this.element.current!;\n    const {width, height} = el.getBoundingClientRect();\n    return {\n      x: (-(this.state.x - width / 2) + x - width / 2) / this.state.scale,\n      y: (-(this.state.y - height / 2) + y - height / 2) / this.state.scale,\n    };\n  }\n\n  getOffsetXY(e: MouseEvent | React.MouseEvent): Point | null {\n    const el = this.element.current;\n    if (!el) {\n      return null;\n    }\n    const ownerRect = el.getBoundingClientRect();\n    return {x: e.clientX - ownerRect.left, y: e.clientY - ownerRect.top};\n  }\n\n  public adjustZoomRelativeToScreenPoint(nextScale: number, point: Point) {\n    const centerSVGCoord = this.screenToSVGCoords(point);\n    const {scale} = this.state;\n    let {x, y} = this.state;\n    x = x + (centerSVGCoord.x * scale - centerSVGCoord.x * nextScale);\n    y = y + (centerSVGCoord.y * scale - centerSVGCoord.y * nextScale);\n    this.setState({x, y, scale: nextScale});\n  }\n\n  public smoothZoomToSVGCoords(x: number, y: number, scale: number) {\n    const el = this.element.current!;\n    const ownerRect = el.getBoundingClientRect();\n    x = -x * scale + ownerRect.width / 2;\n    y = -y * scale + ownerRect.height / 2;\n\n    this.smoothZoom({x, y, scale});\n  }\n\n  public smoothZoom(to: {x: number; y: number; scale: number}) {\n    const from = {scale: this.state.scale, x: this.state.x, y: this.state.y};\n\n    if (this._animation) {\n      this._animation.cancel();\n    }\n\n    this._animation = animate(from, to, {\n      step: (v: any) => {\n        this.setState({\n          x: v.x,\n          y: v.y,\n          scale: v.scale,\n        });\n      },\n      done: () => {\n        this.setState(to);\n        this._animation = null;\n      },\n    });\n  }\n\n  public getMaxZoom() {\n    return this.props.maxZoom;\n  }\n\n  onZoomAndCenter = (event: React.MouseEvent<HTMLDivElement>) => {\n    const offsetXY = this.getOffsetXY(event);\n    if (!offsetXY) {\n      return;\n    }\n    const offset = this.screenToSVGCoords(offsetXY);\n    const maxZoom = this.props.maxZoom || DEFAULT_ZOOM;\n\n    if (Math.abs(maxZoom - this.state.scale) < 0.01) {\n      this.smoothZoomToSVGCoords(offset.x, offset.y, this.state.minScale);\n    } else {\n      this.smoothZoomToSVGCoords(offset.x, offset.y, maxZoom);\n    }\n  };\n\n  render() {\n    const {children, onKeyDown, onDoubleClick, interactor, backgroundColor} = this.props;\n    const {x, y, scale} = this.state;\n\n    return (\n      <div\n        ref={this.element}\n        style={Object.assign({backgroundColor}, SVGViewportStyles)}\n        onMouseDown={(e) => interactor.onMouseDown(this, e)}\n        onWheel={(e) => interactor.onWheel(this, e)}\n        onDoubleClick={onDoubleClick}\n        onKeyDown={onKeyDown}\n        tabIndex={-1}\n      >\n        <div\n          style={{\n            transformOrigin: `top left`,\n            transform: `matrix(${scale}, 0, 0, ${scale}, ${x}, ${y})`,\n          }}\n        >\n          {children(this.state)}\n        </div>\n        {interactor.render && interactor.render(this)}\n      </div>\n    );\n  }\n}\n\n/*\nBG: Not using styled-components here because I need a `ref` to an actual DOM element.\nStyled-component with a ref returns a React component we need to findDOMNode to use.\n*/\nconst SVGViewportStyles: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden',\n  userSelect: 'none',\n  outline: 'none',\n};\n\nconst ZoomSliderContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 30px;\n  padding: 10px 8px;\n  background: rgba(245, 248, 250, 0.4);\n`;\n","import cronstrue from 'cronstrue';\n\nexport const humanCronString = (cronSchedule: string) => {\n  try {\n    return cronstrue.toString(cronSchedule);\n  } catch {\n    return 'Invalid cron string';\n  }\n};\n","import {gql} from '@apollo/client';\n\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\n\nexport const SENSOR_FRAGMENT = gql`\n  fragment SensorFragment on Sensor {\n    id\n    jobOriginId\n    name\n    description\n    minIntervalSeconds\n    nextTick {\n      timestamp\n    }\n    sensorState {\n      id\n      ...InstigationStateFragment\n    }\n    targets {\n      pipelineName\n      solidSelection\n      mode\n    }\n  }\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import * as React from 'react';\n\nimport {DaemonHealthFragment} from '../instance/types/DaemonHealthFragment';\nimport {Alert} from '../ui/Alert';\n\nexport const SensorInfo: React.FC<{\n  daemonHealth: DaemonHealthFragment | undefined;\n}> = ({daemonHealth}) => {\n  let healthy = false;\n\n  if (daemonHealth) {\n    const sensorHealths = daemonHealth.allDaemonStatuses.filter(\n      (daemon) => daemon.daemonType === 'SENSOR',\n    );\n    if (sensorHealths) {\n      const sensorHealth = sensorHealths[0];\n      healthy = !!(sensorHealth.required && sensorHealth.healthy);\n    }\n  }\n\n  if (healthy) {\n    return null;\n  }\n\n  return (\n    <Alert\n      intent=\"warning\"\n      title=\"The sensor daemon is not running.\"\n      description={\n        <div>\n          See the{' '}\n          <a href=\"https://docs.dagster.io/overview/daemon\" target=\"_blank\" rel=\"noreferrer\">\n            dagster-daemon documentation\n          </a>{' '}\n          for more information on how to deploy the dagster-daemon process.\n        </div>\n      }\n    />\n  );\n};\n","import {Colors} from '@blueprintjs/core';\nimport {LinkVertical as Link} from '@vx/shape';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {SVGMonospaceText} from './SVGComponents';\nimport {Edge} from './SolidLinks';\nimport {IPoint} from './getFullSolidLayout';\nimport {isHighlighted} from './highlighting';\n\ninterface ExternalConnectionNodeProps {\n  layout: IPoint;\n  target: IPoint;\n  labelAttachment: 'top' | 'bottom';\n  label: string;\n  minified: boolean;\n\n  // Passed through from Solid props\n  edges: Edge[];\n  highlightedEdges: Edge[];\n  onHighlightEdges: (edges: Edge[]) => void;\n  onDoubleClickLabel: () => void;\n}\n\nexport const ExternalConnectionNode: React.FunctionComponent<ExternalConnectionNodeProps> = ({\n  layout,\n  target,\n  edges,\n  label,\n  labelAttachment,\n  minified,\n  highlightedEdges,\n  onHighlightEdges,\n  onDoubleClickLabel,\n}) => {\n  const textProps = {width: 0, size: minified ? 24 : 12, text: label};\n  const textSize = SVGMonospaceText.intrinsicSizeForProps(textProps);\n  const highlighted = edges.some((e) => isHighlighted(highlightedEdges, e));\n  const color = highlighted ? '#555' : '#C7CBCD';\n\n  // https://github.com/dagster-io/dagster/issues/1504\n  if (!layout) {\n    return null;\n  }\n\n  const textOrigin = {\n    x: layout.x - textSize.width / 2,\n    y: layout.y + (labelAttachment === 'top' ? -10 - textSize.height : 10),\n  };\n\n  return (\n    <g onMouseEnter={() => onHighlightEdges(edges)} onMouseLeave={() => onHighlightEdges([])}>\n      <BackingRect\n        {...textSize}\n        {...textOrigin}\n        onClick={(e) => e.stopPropagation()}\n        onDoubleClick={(e) => {\n          e.stopPropagation();\n          onDoubleClickLabel();\n        }}\n      />\n      <ellipse cx={layout.x} cy={layout.y} rx={7} ry={7} fill={color} />\n      <SVGMonospaceText {...textProps} {...textSize} {...textOrigin} />\n      <Link style={{stroke: color, strokeWidth: 6, fill: 'none'}} data={{source: layout, target}} />\n    </g>\n  );\n};\n\nconst BackingRect = styled('rect')`\n  stroke-width: 10px;\n  fill: ${Colors.LIGHT_GRAY3};\n  stroke: ${Colors.LIGHT_GRAY3};\n  &:hover {\n    fill: ${Colors.LIGHT_GRAY1};\n    stroke: ${Colors.LIGHT_GRAY1};\n  }\n`;\n","import * as React from 'react';\n\nimport {Edge} from './SolidLinks';\nimport {IPoint} from './getFullSolidLayout';\nimport {isHighlighted} from './highlighting';\n\ninterface MappingLineProps {\n  source: IPoint;\n  target: IPoint;\n  leftEdgeX: number;\n  minified: boolean;\n  edge: Edge;\n\n  highlightedEdges: Edge[];\n  onHighlightEdges: (edges: Edge[]) => void;\n}\nexport const MappingLine: React.FunctionComponent<MappingLineProps> = ({\n  source,\n  target,\n  minified,\n  leftEdgeX,\n  edge,\n  highlightedEdges,\n  onHighlightEdges,\n}) => {\n  const highlighted = isHighlighted(highlightedEdges, edge);\n\n  return (\n    <g onMouseEnter={() => onHighlightEdges([edge])} onMouseLeave={() => onHighlightEdges([])}>\n      <path\n        d={`M ${source.x} ${source.y} H ${leftEdgeX} V ${target.y} H ${target.x}`}\n        fill=\"none\"\n        strokeWidth={minified ? 6 : 5}\n        strokeLinecap=\"round\"\n        stroke={highlighted ? 'black' : 'rgb(137, 206, 206)'}\n      />\n      <path\n        d={`M ${source.x} ${source.y} H ${leftEdgeX} V ${target.y} H ${target.x}`}\n        fill=\"none\"\n        strokeWidth={4}\n        strokeLinecap=\"round\"\n        stroke=\"white\"\n      />\n    </g>\n  );\n};\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {titleOfIO} from '../app/titleOfIO';\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\n\nimport {ExternalConnectionNode} from './ExternalConnectionNode';\nimport {MappingLine} from './MappingLine';\nimport {SVGLabeledRect} from './SVGComponents';\nimport {PARENT_IN, PARENT_OUT, SolidIOBox, metadataForCompositeParentIO} from './SolidIOBox';\nimport {IFullPipelineLayout} from './getFullSolidLayout';\nimport {Edge} from './highlighting';\nimport {PipelineGraphSolidFragment} from './types/PipelineGraphSolidFragment';\n\ninterface ParentSolidNodeProps {\n  layout: IFullPipelineLayout;\n  solid: PipelineGraphSolidFragment;\n  minified: boolean;\n\n  highlightedEdges: Edge[];\n  onDoubleClick: (solidName: string) => void;\n  onClickSolid: (arg: SolidNameOrPath) => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nexport const ParentSolidNode: React.FunctionComponent<ParentSolidNodeProps> = (props) => {\n  const {layout, solid, minified} = props;\n\n  const def = props.solid.definition;\n  if (def.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('Parent solid is not a composite - how did this happen?');\n  }\n\n  const parentLayout = layout.parent;\n  if (!parentLayout) {\n    throw new Error('Parent solid rendered when no parent layout is present.');\n  }\n\n  const {boundingBox, mappingLeftEdge, mappingLeftSpacing} = parentLayout;\n  const highlightingProps = {\n    highlightedEdges: props.highlightedEdges,\n    onHighlightEdges: props.onHighlightEdges,\n    onDoubleClick: props.onDoubleClick,\n    onClickSolid: props.onClickSolid,\n  };\n\n  if (boundingBox.height < 0 || boundingBox.width < 0) {\n    return <g />;\n  }\n  return (\n    <>\n      <SVGLabeledParentRect\n        {...boundingBox}\n        label={solid.definition.name}\n        fill={Colors.LIGHT_GRAY5}\n        minified={minified}\n      />\n      {def.inputMappings.map(({definition, mappedInput}, idx) => {\n        const destination = layout.solids[mappedInput.solid.name];\n        if (!destination) {\n          return <g />;\n        }\n        const sourcePort = parentLayout.inputs[definition.name].port;\n        const trgtPort = destination.inputs[mappedInput.definition.name].port;\n\n        return (\n          <MappingLine\n            {...highlightingProps}\n            key={`in-${idx}`}\n            target={trgtPort}\n            source={sourcePort}\n            minified={minified}\n            leftEdgeX={mappingLeftEdge - idx * mappingLeftSpacing}\n            edge={{a: titleOfIO(mappedInput), b: PARENT_IN}}\n          />\n        );\n      })}\n      {def.outputMappings.map(({definition, mappedOutput}, idx) => {\n        const destination = layout.solids[mappedOutput.solid.name];\n        if (!destination) {\n          return <g />;\n        }\n        const sourcePort = parentLayout.outputs[definition.name].port;\n        const trgtPort = destination.outputs[mappedOutput.definition.name].port;\n\n        return (\n          <MappingLine\n            {...highlightingProps}\n            key={`out-${idx}`}\n            target={trgtPort}\n            source={sourcePort}\n            minified={minified}\n            leftEdgeX={mappingLeftEdge - idx * mappingLeftSpacing}\n            edge={{a: titleOfIO(mappedOutput), b: PARENT_OUT}}\n          />\n        );\n      })}\n      {solid.definition.inputDefinitions.map((input, idx) => {\n        const metadata = metadataForCompositeParentIO(solid.definition, input);\n        const invocationInput = solid.inputs.find((i) => i.definition.name === input.name)!;\n\n        return (\n          <React.Fragment key={idx}>\n            {invocationInput.dependsOn.map((dependsOn, iidx) => (\n              <ExternalConnectionNode\n                {...highlightingProps}\n                {...metadata}\n                key={iidx}\n                labelAttachment=\"top\"\n                label={titleOfIO(dependsOn)}\n                minified={minified}\n                layout={parentLayout.dependsOn[titleOfIO(dependsOn)]}\n                target={parentLayout.inputs[input.name].port}\n                onDoubleClickLabel={() => props.onClickSolid({path: ['..', dependsOn.solid.name]})}\n              />\n            ))}\n            <SolidIOBox\n              {...highlightingProps}\n              {...metadata}\n              minified={minified}\n              colorKey=\"input\"\n              item={input}\n              layout={parentLayout.inputs[input.name].layout}\n            />\n          </React.Fragment>\n        );\n      })}\n      {solid.definition.outputDefinitions.map((output, idx) => {\n        const metadata = metadataForCompositeParentIO(solid.definition, output);\n        const invocationOutput = solid.outputs.find((i) => i.definition.name === output.name)!;\n\n        return (\n          <React.Fragment key={idx}>\n            {invocationOutput.dependedBy.map((dependedBy, iidx) => (\n              <ExternalConnectionNode\n                {...highlightingProps}\n                {...metadata}\n                key={iidx}\n                labelAttachment=\"bottom\"\n                label={titleOfIO(dependedBy)}\n                minified={minified}\n                layout={parentLayout.dependedBy[titleOfIO(dependedBy)]}\n                target={parentLayout.outputs[output.name].port}\n                onDoubleClickLabel={() => props.onClickSolid({path: ['..', dependedBy.solid.name]})}\n              />\n            ))}\n            <SolidIOBox\n              {...highlightingProps}\n              {...metadata}\n              minified={minified}\n              colorKey=\"output\"\n              item={output}\n              layout={parentLayout.outputs[output.name].layout}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport const SVGLabeledParentRect = styled(SVGLabeledRect)`\n  transition: x 250ms ease-out, y 250ms ease-out, width 250ms ease-out, height 250ms ease-out;\n`;\n","import {Colors} from '@blueprintjs/core';\nimport {pathVerticalDiagonal} from '@vx/shape';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {weakmapMemoize} from '../app/Util';\n\nimport {IFullPipelineLayout, IFullSolidLayout, ILayoutConnection} from './getFullSolidLayout';\nimport {PipelineGraphSolidFragment} from './types/PipelineGraphSolidFragment';\n\nexport type Edge = {a: string; b: string};\n\nconst buildSVGPath = pathVerticalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\n\nconst buildSVGPaths = weakmapMemoize(\n  (connections: ILayoutConnection[], solids: {[name: string]: IFullSolidLayout}) =>\n    connections.map(({from, to}) => {\n      const sourceOutput = solids[from.solidName].outputs[from.edgeName];\n      if (!sourceOutput) {\n        throw new Error(\n          `Cannot find ${from.solidName}:${from.edgeName} for edge to ${to.solidName}:${to.edgeName}`,\n        );\n      }\n      const targetInput = solids[to.solidName].inputs[to.edgeName];\n      if (!targetInput) {\n        throw new Error(\n          `Cannot find ${to.solidName}:${to.edgeName} for edge from ${from.solidName}:${from.edgeName}`,\n        );\n      }\n      return {\n        // can also use from.point for the \"Dagre\" closest point on node\n        path: buildSVGPath({\n          source: sourceOutput.port,\n          target: targetInput.port,\n        }),\n        sourceOutput,\n        targetInput,\n        from,\n        to,\n      };\n    }),\n);\n\nconst outputIsDynamic = (\n  solids: PipelineGraphSolidFragment[],\n  from: {solidName: string; edgeName: string},\n) => {\n  const solid = solids.find((s) => s.name === from.solidName);\n  const outDef = solid?.definition.outputDefinitions.find((o) => o.name === from.edgeName);\n  return outDef?.isDynamic || false;\n};\n\nconst inputIsDynamicCollect = (\n  solids: PipelineGraphSolidFragment[],\n  to: {solidName: string; edgeName: string},\n) => {\n  const solid = solids.find((s) => s.name === to.solidName);\n  const inputDef = solid?.inputs.find((o) => o.definition.name === to.edgeName);\n  return inputDef?.isDynamicCollect || false;\n};\n\nexport const SolidLinks = React.memo(\n  (props: {\n    opacity: number;\n    solids: PipelineGraphSolidFragment[];\n    layout: IFullPipelineLayout;\n    connections: ILayoutConnection[];\n    onHighlight: (arr: Edge[]) => void;\n  }) => (\n    <g opacity={props.opacity}>\n      {buildSVGPaths(props.connections, props.layout.solids).map(\n        ({path, from, sourceOutput, targetInput, to}, idx) => (\n          <g\n            key={idx}\n            onMouseLeave={() => props.onHighlight([])}\n            onMouseEnter={() => props.onHighlight([{a: from.solidName, b: to.solidName}])}\n          >\n            <StyledPath d={path} />\n            {outputIsDynamic(props.solids, from) && (\n              <DynamicMarker\n                x={sourceOutput.layout.x}\n                y={sourceOutput.layout.y}\n                direction={'output'}\n              />\n            )}\n            {inputIsDynamicCollect(props.solids, to) && (\n              <DynamicMarker\n                x={targetInput.layout.x}\n                y={targetInput.layout.y}\n                direction={'collect'}\n              />\n            )}\n          </g>\n        ),\n      )}\n    </g>\n  ),\n);\n\nSolidLinks.displayName = 'SolidLinks';\n\nconst DynamicMarker: React.FunctionComponent<{\n  x: number;\n  y: number;\n  direction: 'output' | 'collect';\n}> = ({x, y, direction}) => (\n  <g\n    fill=\"#9e4903\"\n    transform={`translate(${x - 35}, ${y})${\n      direction === 'collect' ? ',rotate(180),translate(-20, -40)' : ''\n    }`}\n  >\n    <title>{direction === 'output' ? 'DynamicOutput' : 'DynamicCollect'}</title>\n    <polygon points=\"14.2050781 21 14.0400391 15.2236328 18.953125 18.2705078 20.984375 14.7285156 15.8935547 11.9736328 20.984375 9.21875 18.953125 5.68945312 14.0400391 8.72363281 14.2050781 2.95996094 10.1425781 2.95996094 10.2949219 8.72363281 5.38183594 5.68945312 3.36328125 9.21875 8.45410156 11.9736328 3.36328125 14.7285156 5.38183594 18.2705078 10.2949219 15.2236328 10.1425781 21\"></polygon>\n    <polygon points=\"18.6367188 35.1669922 20.8203125 32.9707031 12.0605469 24.2109375 3.28808594 32.9707031 5.47167969 35.1669922 12.0605469 28.5908203\"></polygon>\n  </g>\n);\n\nconst StyledPath = styled('path')`\n  stroke-width: 6;\n  stroke: ${Colors.BLACK};\n  fill: none;\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\n\nimport {ParentSolidNode, SVGLabeledParentRect} from './ParentSolidNode';\nimport {SVGViewport, DETAIL_ZOOM, SVGViewportInteractor} from './SVGViewport';\nimport {SolidLinks} from './SolidLinks';\nimport {\n  SolidNode,\n  SOLID_NODE_DEFINITION_FRAGMENT,\n  SOLID_NODE_INVOCATION_FRAGMENT,\n} from './SolidNode';\nimport {IFullPipelineLayout, IFullSolidLayout, ILayout} from './getFullSolidLayout';\nimport {Edge, isHighlighted, isSolidHighlighted} from './highlighting';\nimport {PipelineGraphSolidFragment} from './types/PipelineGraphSolidFragment';\n\nconst NoOp = () => {};\n\ninterface IPipelineGraphProps {\n  pipelineName: string;\n  backgroundColor: string;\n  layout: IFullPipelineLayout;\n  solids: PipelineGraphSolidFragment[];\n  focusSolids: PipelineGraphSolidFragment[];\n  parentHandleID?: string;\n  parentSolid?: PipelineGraphSolidFragment;\n  selectedHandleID?: string;\n  selectedSolid?: PipelineGraphSolidFragment;\n  highlightedSolids: Array<PipelineGraphSolidFragment>;\n  interactor?: SVGViewportInteractor;\n  onClickSolid?: (arg: SolidNameOrPath) => void;\n  onDoubleClickSolid?: (arg: SolidNameOrPath) => void;\n  onEnterCompositeSolid?: (arg: SolidNameOrPath) => void;\n  onLeaveCompositeSolid?: () => void;\n  onClickBackground?: () => void;\n}\n\ninterface IPipelineContentsProps extends IPipelineGraphProps {\n  minified: boolean;\n  layout: IFullPipelineLayout;\n}\n\ninterface IPipelineContentsState {\n  highlighted: Edge[];\n}\n\n/**\n * Identifies groups of solids that share a similar `prefix.` and returns\n * an array of bounding boxes and common prefixes. Used to render lightweight\n * outlines around flattened composites.\n */\nfunction computeSolidPrefixBoundingBoxes(layout: IFullPipelineLayout) {\n  const groups: {[base: string]: ILayout[]} = {};\n  let maxDepth = 0;\n\n  for (const key of Object.keys(layout.solids)) {\n    const parts = key.split('.');\n    if (parts.length === 1) {\n      continue;\n    }\n    for (let ii = 1; ii < parts.length; ii++) {\n      const base = parts.slice(0, ii).join('.');\n      groups[base] = groups[base] || [];\n      groups[base].push(layout.solids[key].boundingBox);\n      maxDepth = Math.max(maxDepth, ii);\n    }\n  }\n\n  const boxes: (ILayout & {name: string})[] = [];\n  for (const base of Object.keys(groups)) {\n    const group = groups[base];\n    const depth = base.split('.').length;\n    const margin = 5 + (maxDepth - depth) * 5;\n\n    if (group.length === 1) {\n      continue;\n    }\n    const x1 = Math.min(...group.map((l) => l.x)) - margin;\n    const x2 = Math.max(...group.map((l) => l.x + l.width)) + margin;\n    const y1 = Math.min(...group.map((l) => l.y)) - margin;\n    const y2 = Math.max(...group.map((l) => l.y + l.height)) + margin;\n    boxes.push({name: base, x: x1, y: y1, width: x2 - x1, height: y2 - y1});\n  }\n\n  return boxes;\n}\n\nexport class PipelineGraphContents extends React.PureComponent<\n  IPipelineContentsProps,\n  IPipelineContentsState\n> {\n  state: IPipelineContentsState = {\n    highlighted: [],\n  };\n\n  onHighlightEdges = (highlighted: Edge[]) => {\n    this.setState({highlighted});\n  };\n\n  render() {\n    const {\n      layout,\n      minified,\n      solids,\n      focusSolids,\n      parentSolid,\n      parentHandleID,\n      onClickSolid = NoOp,\n      onDoubleClickSolid = NoOp,\n      onEnterCompositeSolid = NoOp,\n      highlightedSolids,\n      selectedSolid,\n      selectedHandleID,\n    } = this.props;\n\n    return (\n      <>\n        {parentSolid && layout.parent && layout.parent.invocationBoundingBox.width > 0 && (\n          <SVGLabeledParentRect\n            {...layout.parent.invocationBoundingBox}\n            key={`composite-rect-${parentHandleID}`}\n            label={parentSolid.name}\n            fill={Colors.LIGHT_GRAY5}\n            minified={minified}\n          />\n        )}\n        {selectedSolid && layout.solids[selectedSolid.name] && (\n          // this rect is hidden beneath the user's selection with a React key so that\n          // when they expand the composite solid React sees this component becoming\n          // the one above and re-uses the DOM node. This allows us to animate the rect's\n          // bounds from the parent layout to the inner layout with no React state.\n          <SVGLabeledParentRect\n            {...layout.solids[selectedSolid.name].solid}\n            key={`composite-rect-${selectedHandleID}`}\n            label={''}\n            fill={Colors.LIGHT_GRAY5}\n            minified={true}\n          />\n        )}\n\n        {parentSolid && (\n          <ParentSolidNode\n            onClickSolid={onClickSolid}\n            onDoubleClick={(name) => onDoubleClickSolid({name})}\n            onHighlightEdges={this.onHighlightEdges}\n            highlightedEdges={this.state.highlighted}\n            key={`composite-rect-${parentHandleID}-definition`}\n            minified={minified}\n            solid={parentSolid}\n            layout={layout}\n          />\n        )}\n        <SolidLinks\n          solids={solids}\n          layout={layout}\n          opacity={0.2}\n          connections={layout.connections}\n          onHighlight={this.onHighlightEdges}\n        />\n        <SolidLinks\n          solids={solids}\n          layout={layout}\n          opacity={0.55}\n          onHighlight={this.onHighlightEdges}\n          connections={layout.connections.filter(({from, to}) =>\n            isHighlighted(this.state.highlighted, {\n              a: from.solidName,\n              b: to.solidName,\n            }),\n          )}\n        />\n        {computeSolidPrefixBoundingBoxes(layout).map((box, idx) => (\n          <rect\n            key={idx}\n            {...box}\n            stroke=\"rgb(230, 219, 238)\"\n            fill=\"rgba(230, 219, 238, 0.2)\"\n            strokeWidth={2}\n          />\n        ))}\n        {solids.map((solid) => (\n          <SolidNode\n            key={solid.name}\n            invocation={solid}\n            definition={solid.definition}\n            minified={minified}\n            onClick={() => onClickSolid({name: solid.name})}\n            onDoubleClick={() => onDoubleClickSolid({name: solid.name})}\n            onEnterComposite={() => onEnterCompositeSolid({name: solid.name})}\n            onHighlightEdges={this.onHighlightEdges}\n            layout={layout.solids[solid.name]}\n            selected={selectedSolid === solid}\n            focused={focusSolids.includes(solid)}\n            highlightedEdges={\n              isSolidHighlighted(this.state.highlighted, solid.name)\n                ? this.state.highlighted\n                : EmptyHighlightedArray\n            }\n            dim={highlightedSolids.length > 0 && highlightedSolids.indexOf(solid) === -1}\n          />\n        ))}\n      </>\n    );\n  }\n}\n\n// This is a specific empty array we pass to represent the common / empty case\n// so that SolidNode can use shallow equality comparisons in shouldComponentUpdate.\nconst EmptyHighlightedArray: never[] = [];\n\nexport class PipelineGraph extends React.Component<IPipelineGraphProps> {\n  viewportEl: React.RefObject<SVGViewport> = React.createRef();\n\n  resolveSolidPosition = (\n    arg: SolidNameOrPath,\n    cb: (cx: number, cy: number, layout: IFullSolidLayout) => void,\n  ) => {\n    const lastName = 'name' in arg ? arg.name : arg.path[arg.path.length - 1];\n    const solidLayout = this.props.layout.solids[lastName];\n    if (!solidLayout) {\n      return;\n    }\n    const cx = solidLayout.boundingBox.x + solidLayout.boundingBox.width / 2;\n    const cy = solidLayout.boundingBox.y + solidLayout.boundingBox.height / 2;\n    cb(cx, cy, solidLayout);\n  };\n\n  centerSolid = (arg: SolidNameOrPath) => {\n    this.resolveSolidPosition(arg, (cx, cy) => {\n      const viewportEl = this.viewportEl.current!;\n      viewportEl.smoothZoomToSVGCoords(cx, cy, viewportEl.state.scale);\n    });\n  };\n\n  focusOnSolid = (arg: SolidNameOrPath) => {\n    this.resolveSolidPosition(arg, (cx, cy) => {\n      this.viewportEl.current!.smoothZoomToSVGCoords(cx, cy, DETAIL_ZOOM);\n    });\n  };\n\n  closestSolidInDirection = (dir: string): string | undefined => {\n    const {layout, selectedSolid} = this.props;\n    if (!selectedSolid) {\n      return;\n    }\n\n    const current = layout.solids[selectedSolid.name];\n    const center = (solid: IFullSolidLayout): {x: number; y: number} => ({\n      x: solid.boundingBox.x + solid.boundingBox.width / 2,\n      y: solid.boundingBox.y + solid.boundingBox.height / 2,\n    });\n\n    /* Sort all the solids in the graph based on their attractiveness\n    as a jump target. We want the nearest node in the exact same row for left/right,\n    and the visually \"closest\" node above/below for up/down. */\n    const score = (solid: IFullSolidLayout): number => {\n      const dx = center(solid).x - center(current).x;\n      const dy = center(solid).y - center(current).y;\n\n      if (dir === 'left' && dy === 0 && dx < 0) {\n        return -dx;\n      }\n      if (dir === 'right' && dy === 0 && dx > 0) {\n        return dx;\n      }\n      if (dir === 'up' && dy < 0) {\n        return -dy + Math.abs(dx) / 5;\n      }\n      if (dir === 'down' && dy > 0) {\n        return dy + Math.abs(dx) / 5;\n      }\n      return Number.NaN;\n    };\n\n    const closest = Object.keys(layout.solids)\n      .map((name) => ({name, score: score(layout.solids[name])}))\n      .filter((e) => e.name !== selectedSolid.name && !Number.isNaN(e.score))\n      .sort((a, b) => b.score - a.score)\n      .pop();\n\n    return closest ? closest.name : undefined;\n  };\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.target && (e.target as HTMLElement).nodeName === 'INPUT') {\n      return;\n    }\n\n    const dir = {37: 'left', 38: 'up', 39: 'right', 40: 'down'}[e.keyCode];\n    if (!dir) {\n      return;\n    }\n\n    const nextSolid = this.closestSolidInDirection(dir);\n    if (nextSolid && this.props.onClickSolid) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.onClickSolid({name: nextSolid});\n    }\n  };\n\n  unfocus = (e: React.MouseEvent<any>) => {\n    this.viewportEl.current!.autocenter(true);\n    e.stopPropagation();\n  };\n\n  unfocusOutsideContainer = (e: React.MouseEvent<any>) => {\n    if (this.props.parentSolid && this.props.onLeaveCompositeSolid) {\n      this.props.onLeaveCompositeSolid();\n    } else {\n      this.unfocus(e);\n    }\n  };\n\n  componentDidUpdate(prevProps: IPipelineGraphProps) {\n    if (prevProps.parentSolid !== this.props.parentSolid) {\n      this.viewportEl.current!.cancelAnimations();\n      this.viewportEl.current!.autocenter();\n    }\n    if (prevProps.layout !== this.props.layout) {\n      this.viewportEl.current!.autocenter();\n    }\n    if (prevProps.selectedSolid !== this.props.selectedSolid && this.props.selectedSolid) {\n      this.centerSolid(this.props.selectedSolid);\n    }\n  }\n\n  render() {\n    const {\n      layout,\n      interactor,\n      pipelineName,\n      backgroundColor,\n      onClickBackground,\n      onDoubleClickSolid,\n    } = this.props;\n\n    return (\n      <SVGViewport\n        ref={this.viewportEl}\n        key={pipelineName}\n        interactor={interactor || SVGViewport.Interactors.PanAndZoom}\n        backgroundColor={backgroundColor}\n        graphWidth={layout.width}\n        graphHeight={layout.height}\n        onKeyDown={this.onKeyDown}\n        onDoubleClick={this.unfocusOutsideContainer}\n      >\n        {({scale}: any) => (\n          <>\n            <SVGContainer\n              width={layout.width}\n              height={layout.height + 200}\n              onClick={onClickBackground}\n              onDoubleClick={this.unfocus}\n            >\n              <PipelineGraphContents\n                {...this.props}\n                layout={layout}\n                minified={scale < DETAIL_ZOOM - 0.01}\n                onDoubleClickSolid={onDoubleClickSolid || this.focusOnSolid}\n              />\n            </SVGContainer>\n          </>\n        )}\n      </SVGViewport>\n    );\n  }\n}\n\nexport const PIPELINE_GRAPH_SOLID_FRAGMENT = gql`\n  fragment PipelineGraphSolidFragment on Solid {\n    name\n    ...SolidNodeInvocationFragment\n    definition {\n      name\n      ...SolidNodeDefinitionFragment\n    }\n  }\n  ${SOLID_NODE_INVOCATION_FRAGMENT}\n  ${SOLID_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst SVGContainer = styled.svg`\n  overflow: visible;\n  border-radius: 0;\n`;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/dagre_layout.worker.143fe2dc.worker.js\");\n}\n","import * as dagre from 'dagre';\n\nimport {titleOfIO} from '../app/titleOfIO';\n\ntype ILayoutConnectionMember = {\n  point: IPoint;\n  solidName: string;\n  edgeName: string;\n};\n\nexport type ILayoutConnection = {\n  from: ILayoutConnectionMember;\n  to: ILayoutConnectionMember;\n};\n\nexport type IFullPipelineLayout = {\n  width: number;\n  height: number;\n  parent: IParentSolidLayout | null;\n  connections: Array<ILayoutConnection>;\n  solids: {\n    [solidName: string]: IFullSolidLayout;\n  };\n};\n\nexport interface IFullSolidLayout {\n  solid: ILayout;\n  boundingBox: ILayout;\n  inputs: {\n    [inputName: string]: {\n      layout: ILayout;\n      port: IPoint;\n    };\n  };\n  outputs: {\n    [outputName: string]: {\n      layout: ILayout;\n      port: IPoint;\n    };\n  };\n}\n\ninterface IParentSolidLayout extends Omit<IFullSolidLayout, 'solid'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[solidName: string]: IPoint};\n  dependedBy: {[solidName: string]: IPoint};\n  invocationBoundingBox: ILayout;\n}\n\nexport interface ILayoutSolid {\n  name: string;\n  inputs: Array<{\n    definition: {\n      name: string;\n    };\n    dependsOn: Array<{\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }>;\n  }>;\n  outputs: Array<{\n    definition: {\n      name: string;\n    };\n    dependedBy: Array<{\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }>;\n  }>;\n}\n\nexport interface ILayout {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n}\n\nexport interface IPoint {\n  x: number;\n  y: number;\n}\n\nconst MAX_PER_ROW_ENABLED = false;\nconst MAX_PER_ROW = 25;\nconst SOLID_WIDTH = 370;\nconst SOLID_BASE_HEIGHT = 75;\nconst IO_HEIGHT = 36;\nconst IO_INSET = 6;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 15;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\ntype SolidLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: SolidLinkInfo[][]) {\n  const map: {[key: string]: SolidLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport function layoutPipeline(\n  pipelineSolids: ILayoutSolid[],\n  parentSolid?: ILayoutSolid,\n): IFullPipelineLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent solid AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  const marginBase = 100;\n  let marginy = marginBase;\n  let marginx = marginBase;\n  if (parentSolid) {\n    parentIOPadding = Math.max(parentSolid.inputs.length, parentSolid.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const connections: Array<ILayoutConnection> = [];\n  const solidNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineSolids.forEach((solid) => {\n    solidNamesPresent[solid.name] = true;\n  });\n  pipelineSolids.forEach((solid) => {\n    // Lay out each solid individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutSolid(solid, {x: 0, y: 0});\n    g.setNode(solid.name, {\n      width: layout.boundingBox.width,\n      height: layout.boundingBox.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    solid.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (solidNamesPresent[dep.solid.name] && solidNamesPresent[solid.name]) {\n          g.setEdge({v: dep.solid.name, w: solid.name}, {weight: 1});\n\n          connections.push({\n            from: {\n              point: {x: 0, y: 0},\n              solidName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              solidName: solid.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const solids: {[solidName: string]: IFullSolidLayout} = {};\n  const nodesBySolid: {[solidName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (solidName) {\n    const node = g.node(solidName);\n    if (!node) {\n      return;\n    }\n    nodesBySolid[solidName] = node;\n  });\n\n  if (MAX_PER_ROW_ENABLED) {\n    const nodesInRows: {[key: string]: dagre.Node[]} = {};\n    g.nodes().forEach(function (solidName) {\n      const node = g.node(solidName);\n      if (!node) {\n        return;\n      }\n      nodesInRows[`${node.y}`] = nodesInRows[`${node.y}`] || [];\n      nodesInRows[`${node.y}`].push(node);\n    });\n\n    // OK! We're going to split the nodes in long (>MAX_PER_ROW) rows into\n    // multiple rows, shift all the subsequent rows down. Note we do this\n    // repeatedly until each row has less than MAX_PER_ROW nodes. There are\n    // a few caveats to this:\n    // - We may end up making the lines betwee nodes and their children\n    //   less direct.\n    // - We may \"compact\" two groups of solids separated by horizontal\n    //   whitespace on the same row into the same block.\n\n    const rows = Object.keys(nodesInRows)\n      .map((a) => Number(a))\n      .sort((a, b) => a - b);\n\n    const firstRow = nodesInRows[`${rows[0]}`];\n    const firstRowCenterX = firstRow\n      ? firstRow.reduce((s, n) => s + n.x + n.width / 2, 0) / firstRow.length\n      : 0;\n\n    for (let ii = 0; ii < rows.length; ii++) {\n      const rowKey = `${rows[ii]}`;\n      const rowNodes = nodesInRows[rowKey];\n\n      const desiredCount = Math.ceil(rowNodes.length / MAX_PER_ROW);\n      if (desiredCount === 1) {\n        continue;\n      }\n\n      for (let r = 0; r < desiredCount; r++) {\n        const newRowNodes = rowNodes.slice(r * MAX_PER_ROW, (r + 1) * MAX_PER_ROW);\n        const maxHeight = Math.max(...newRowNodes.map((n) => n.height)) + SOLID_BASE_HEIGHT;\n        const totalWidth = newRowNodes.reduce((sum, n) => sum + n.width + SOLID_BASE_HEIGHT, 0);\n\n        let x = firstRowCenterX - totalWidth / 2;\n\n        // shift the nodes before the split point so they're centered nicely\n        newRowNodes.forEach((n) => {\n          n.x = x;\n          x += n.width + SOLID_BASE_HEIGHT;\n        });\n\n        // shift the nodes after the split point downwards\n        const shifted = rowNodes.slice((r + 1) * MAX_PER_ROW);\n        shifted.forEach((n) => (n.y += maxHeight));\n\n        // shift all nodes in the graph beneath this row down by\n        // the height of the newly inserted row.\n        const shiftedMaxHeight = Math.max(0, ...shifted.map((n) => n.height)) + SOLID_BASE_HEIGHT;\n\n        for (let jj = ii + 1; jj < rows.length; jj++) {\n          nodesInRows[`${rows[jj]}`].forEach((n) => (n.y += shiftedMaxHeight));\n        }\n      }\n    }\n    let minX = Number.MAX_SAFE_INTEGER;\n    Object.keys(nodesBySolid).forEach((solidName) => {\n      const node = nodesBySolid[solidName];\n      minX = Math.min(minX, node.x - node.width / 2 - marginx);\n    });\n    Object.keys(nodesBySolid).forEach((solidName) => {\n      const node = nodesBySolid[solidName];\n      node.x -= minX;\n    });\n  }\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.keys(nodesBySolid).forEach((solidName) => {\n    const node = nodesBySolid[solidName];\n    const solid = pipelineSolids.find(({name}) => name === solidName);\n    if (!solid) {\n      return;\n    }\n\n    solids[solidName] = layoutSolid(solid, {\n      x: node.x - node.width / 2, // Dagre's x/y is the center, we want top left\n      y: node.y - node.height / 2,\n    });\n    maxWidth = Math.max(maxWidth, node.x + node.width);\n    maxHeight = Math.max(maxHeight, node.y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = connections.find((c) => c.from.solidName === e.v && c.to.solidName === e.w);\n    const points = g.edge(e).points;\n    if (conn) {\n      conn.from.point = points[0];\n      conn.to.point = points[points.length - 1];\n    }\n  });\n\n  const result: IFullPipelineLayout = {\n    solids,\n    connections,\n    width: maxWidth,\n    height: maxHeight + marginBase,\n    parent: null,\n  };\n\n  if (parentSolid) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite solid around the completed DAG.\n    result.parent = layoutParentCompositeSolid(result, parentSolid, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentCompositeSolid(\n  layout: IFullPipelineLayout,\n  solid: ILayoutSolid,\n  parentIOPadding: number,\n) {\n  const result: IParentSolidLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    boundingBox: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(solid.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(solid.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.boundingBox.y + result.boundingBox.height;\n\n  solid.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.boundingBox.x,\n        y: result.boundingBox.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      port: {\n        x: result.boundingBox.x + PORT_INSET_X,\n        y: result.boundingBox.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  solid.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.boundingBox.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      port: {\n        x: result.boundingBox.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: SolidLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[solidName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutSolid(solid: ILayoutSolid, root: IPoint): IFullSolidLayout {\n  // Starting at the root (top left) X,Y, return the layout information for a solid with\n  // input blocks, then the main block, then output blocks (arranged vertically)\n  let accY = root.y;\n\n  const inputsLayouts: {\n    [inputName: string]: {layout: ILayout; port: IPoint};\n  } = {};\n\n  const buildIOSmallLayout = (idx: number, count: number) => {\n    const centeringOffsetX = (SOLID_WIDTH - IO_MINI_WIDTH * count) / 2;\n    const x = root.x + IO_MINI_WIDTH * idx + centeringOffsetX;\n    return {\n      port: {\n        x: x + PORT_INSET_X,\n        y: accY + PORT_INSET_Y,\n      },\n      layout: {\n        x: x,\n        y: accY,\n        width: IO_MINI_WIDTH,\n        height: IO_HEIGHT,\n      },\n    };\n  };\n\n  const buildIOLayout = () => {\n    const layout: {layout: ILayout; port: IPoint} = {\n      port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n      layout: {\n        x: root.x,\n        y: accY,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n    };\n    accY += IO_HEIGHT;\n    return layout;\n  };\n\n  solid.inputs.forEach((input, idx) => {\n    inputsLayouts[input.definition.name] =\n      solid.inputs.length > IO_THRESHOLD_FOR_MINI\n        ? buildIOSmallLayout(idx, solid.inputs.length)\n        : buildIOLayout();\n  });\n  if (solid.inputs.length > IO_THRESHOLD_FOR_MINI) {\n    accY += IO_HEIGHT;\n  }\n\n  const solidLayout: ILayout = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: SOLID_WIDTH,\n    height: SOLID_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += SOLID_BASE_HEIGHT;\n\n  const outputLayouts: {\n    [outputName: string]: {\n      layout: ILayout;\n      port: IPoint;\n    };\n  } = {};\n\n  solid.outputs.forEach((output, idx) => {\n    outputLayouts[output.definition.name] =\n      solid.outputs.length > IO_THRESHOLD_FOR_MINI\n        ? buildIOSmallLayout(idx, solid.outputs.length)\n        : buildIOLayout();\n  });\n  if (solid.outputs.length > IO_THRESHOLD_FOR_MINI) {\n    accY += IO_HEIGHT;\n  }\n\n  return {\n    boundingBox: {\n      x: root.x,\n      y: root.y,\n      width: SOLID_WIDTH,\n      height: accY - root.y,\n    },\n    solid: solidLayout,\n    inputs: inputsLayouts,\n    outputs: outputLayouts,\n  };\n}\n","import memoize from 'lodash/memoize';\nimport LayoutWorker from 'worker-loader!../workers/dagre_layout.worker.ts';\n\nimport {asyncMemoize} from '../app/Util';\n\nimport {ILayoutSolid, layoutPipeline} from './layout';\n\n// Loads the web worker using the Webpack loader `worker-loader`, specifying the import inline.\n// This allows us to use web workers without ejecting from `create-react-app` (in order to use the\n// config).  We need both worker-loader (wraps the worker code) and babel-loader (transpiles from\n// TypeScript to target ES5) in order to keep worker code in sync with our existing libraries.\n\nconst _layoutCacheKey = (solids: ILayoutSolid[], parentSolid?: ILayoutSolid) => {\n  const solidKey = solids.map((x) => x.name).join('|');\n  const parentKey = parentSolid?.name;\n  return `${solidKey}:${parentKey}`;\n};\n\nexport const getDagrePipelineLayout = memoize(layoutPipeline, _layoutCacheKey);\n\nconst _asyncDagrePipelineLayout = (solids: ILayoutSolid[], parentSolid?: ILayoutSolid) => {\n  return new Promise((resolve) => {\n    const worker = new LayoutWorker();\n    worker.addEventListener('message', (event) => {\n      resolve(event.data);\n      worker.terminate();\n    });\n    worker.postMessage({solids, parentSolid});\n  });\n};\n\nexport const asyncDagrePipelineLayout = asyncMemoize(_asyncDagrePipelineLayout, _layoutCacheKey);\n\nexport {layoutSolid} from './layout';\nexport type {\n  IFullPipelineLayout,\n  IFullSolidLayout,\n  ILayout,\n  ILayoutConnection,\n  IPoint,\n} from './layout';\n","import {useQuery} from '@apollo/client';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Timestamp} from '../app/time/Timestamp';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {MetadataEntry} from '../runs/MetadataEntry';\nimport {titleForRun} from '../runs/RunUtils';\nimport {Alert} from '../ui/Alert';\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {MetadataTable} from '../ui/MetadataTable';\nimport {Spinner} from '../ui/Spinner';\nimport {Mono, Subheading} from '../ui/Text';\n\nimport {AssetLineageElements} from './AssetLineageElements';\nimport {ASSET_QUERY} from './queries';\nimport {AssetKey} from './types';\nimport {AssetQuery, AssetQueryVariables} from './types/AssetQuery';\n\ninterface Props {\n  assetKey: AssetKey;\n  asOf: string | null;\n  asSidebarSection?: boolean;\n}\n\nexport const AssetDetails: React.FC<Props> = ({assetKey, asOf, asSidebarSection}) => {\n  const before = React.useMemo(() => (asOf ? `${Number(asOf) + 1}` : ''), [asOf]);\n  const {data, loading} = useQuery<AssetQuery, AssetQueryVariables>(ASSET_QUERY, {\n    variables: {\n      assetKey: {path: assetKey.path},\n      limit: 1,\n      before,\n    },\n  });\n\n  // If the most recent materialization and the `asOf` materialization are the same, we don't\n  // want to show the `Alert`.\n  const showAlert = React.useMemo(() => {\n    if (loading || !asOf) {\n      return false;\n    }\n\n    const assetOrError = data?.assetOrError;\n    if (!assetOrError || assetOrError?.__typename !== 'Asset') {\n      return false;\n    }\n\n    const materializationAsOfTime = assetOrError.assetMaterializations[0];\n    const mostRecentMaterialization = assetOrError.mostRecentMaterialization[0];\n\n    return (\n      materializationAsOfTime &&\n      mostRecentMaterialization &&\n      materializationAsOfTime.materializationEvent.timestamp !==\n        mostRecentMaterialization.materializationEvent.timestamp\n    );\n  }, [asOf, data?.assetOrError, loading]);\n\n  const content = () => {\n    if (loading) {\n      return (\n        <Box padding={{vertical: 20}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      );\n    }\n\n    const assetOrError = data?.assetOrError;\n\n    if (!assetOrError || assetOrError.__typename !== 'Asset') {\n      return null;\n    }\n\n    const latest = assetOrError.assetMaterializations[0];\n\n    if (!latest) {\n      return (\n        <div>\n          No materializations found at{' '}\n          <Timestamp\n            timestamp={{ms: Number(asOf)}}\n            timeFormat={{showSeconds: true, showTimezone: true}}\n          />\n          .\n        </div>\n      );\n    }\n\n    const latestEvent = latest.materializationEvent;\n    const latestRun = latest.runOrError.__typename === 'PipelineRun' ? latest.runOrError : null;\n    const latestAssetLineage = latestEvent?.assetLineage;\n\n    return (\n      <MetadataTable\n        rows={[\n          {\n            key: 'Run',\n            value: latestRun ? (\n              <div>\n                <Box margin={{bottom: 4}}>\n                  {'Run '}\n                  <Link\n                    to={`/instance/runs/${latestEvent.runId}?timestamp=${latestEvent.timestamp}`}\n                  >\n                    <Mono>{titleForRun({runId: latestEvent.runId})}</Mono>\n                  </Link>\n                </Box>\n                <Box padding={{left: 8}}>\n                  <PipelineReference\n                    showIcon\n                    pipelineName={latestRun.pipelineName}\n                    pipelineHrefContext=\"repo-unknown\"\n                    snapshotId={latestRun.pipelineSnapshotId}\n                    mode={latestRun.mode}\n                  />\n                </Box>\n                <Group direction=\"row\" padding={{left: 8}} spacing={8} alignItems=\"center\">\n                  <IconWIP name=\"linear_scale\" color={ColorsWIP.Gray500} />\n                  <Link\n                    to={`/instance/runs/${latestRun.runId}?${qs.stringify({\n                      selection: latest.materializationEvent.stepKey,\n                      logs: `step:${latest.materializationEvent.stepKey}`,\n                    })}`}\n                  >\n                    {latest.materializationEvent.stepKey}\n                  </Link>\n                </Group>\n              </div>\n            ) : (\n              'No materialization events'\n            ),\n          },\n          latest?.partition\n            ? {\n                key: 'Latest partition',\n                value: latest ? latest.partition : 'No materialization events',\n              }\n            : undefined,\n          {\n            key: 'Timestamp',\n            value: latestEvent ? (\n              <Timestamp timestamp={{ms: Number(latestEvent.timestamp)}} />\n            ) : (\n              'No materialization events'\n            ),\n          },\n          latestAssetLineage?.length\n            ? {\n                key: 'Parent assets',\n                value: (\n                  <AssetLineageElements\n                    elements={latestAssetLineage}\n                    timestamp={latestEvent.timestamp}\n                  />\n                ),\n              }\n            : undefined,\n          ...latestEvent?.materialization.metadataEntries.map((entry) => ({\n            key: entry.label,\n            value: <MetadataEntry entry={entry} expandSmallValues={true} />,\n          })),\n        ].filter(Boolean)}\n      />\n    );\n  };\n\n  const isPartitioned = !!(\n    data?.assetOrError?.__typename === 'Asset' &&\n    data?.assetOrError?.assetMaterializations[0]?.partition\n  );\n\n  return (\n    <Group direction=\"column\" spacing={16}>\n      {showAlert ? (\n        <Alert\n          intent=\"info\"\n          title=\"This is a historical asset snapshot.\"\n          description={\n            <span>\n              This view represents{' '}\n              <span style={{fontWeight: 600}}>{assetKey.path[assetKey.path.length - 1]}</span> as of{' '}\n              <span style={{fontWeight: 600}}>\n                <Timestamp\n                  timestamp={{ms: Number(asOf)}}\n                  timeFormat={{showSeconds: true, showTimezone: true}}\n                />\n              </span>\n              . You can also view the <Link to={location.pathname}>latest materialization</Link> for\n              this asset.\n            </span>\n          }\n        />\n      ) : null}\n      {!asSidebarSection && (\n        <Subheading>\n          {isPartitioned ? 'Latest Materialized Partition' : 'Latest Materialization'}\n        </Subheading>\n      )}\n      {content()}\n    </Group>\n  );\n};\n","import {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport qs from 'qs';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Timestamp} from '../app/time/Timestamp';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\n\nimport {AssetQuery_assetOrError_Asset_assetMaterializations_materializationEvent_assetLineage} from './types/AssetQuery';\n\nconst AssetLineageInfoElement: React.FC<{\n  lineage_info: AssetQuery_assetOrError_Asset_assetMaterializations_materializationEvent_assetLineage;\n  timestamp: string;\n}> = ({lineage_info, timestamp}) => {\n  const partition_list_label = lineage_info.partitions.length === 1 ? 'Partition' : 'Partitions';\n  const partition_list_str = lineage_info.partitions\n    .map((partition) => `\"${partition}\"`)\n    .join(', ');\n  const to = `/instance/assets/${lineage_info.assetKey.path\n    .map(encodeURIComponent)\n    .join('/')}?${qs.stringify({asOf: timestamp})}`;\n\n  return (\n    <Group direction=\"row\" spacing={8} alignItems=\"center\">\n      {lineage_info.partitions.length > 0\n        ? `${partition_list_label} ${partition_list_str} of `\n        : ''}\n      <Tooltip\n        content={\n          <>\n            View snapshot as of{' '}\n            <Timestamp\n              timestamp={{ms: Number(timestamp)}}\n              timeFormat={{showSeconds: true, showTimezone: true}}\n            />\n          </>\n        }\n        modifiers={{offset: {enabled: true, options: {offset: [0, 16]}}}}\n        placement=\"right\"\n      >\n        <Link to={to}>\n          <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n            {lineage_info.assetKey.path\n              .map((p, i) => <span key={i}>{p}</span>)\n              .reduce(\n                (accum, curr, ii) => [\n                  ...accum,\n                  ii > 0 ? (\n                    <React.Fragment key={`${ii}-space`}>&nbsp;{'>'}&nbsp;</React.Fragment>\n                  ) : null,\n                  curr,\n                ],\n                [] as React.ReactNode[],\n              )}\n          </Box>\n        </Link>\n      </Tooltip>\n    </Group>\n  );\n};\n\nconst MAX_COLLAPSED = 5;\n\nexport const AssetLineageElements: React.FunctionComponent<{\n  elements: AssetQuery_assetOrError_Asset_assetMaterializations_materializationEvent_assetLineage[];\n  timestamp: string;\n}> = ({elements, timestamp}) => {\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  return (\n    <Group direction=\"column\" spacing={4}>\n      {elements.length > MAX_COLLAPSED && (\n        <ButtonLink onClick={() => setCollapsed(!collapsed)}>\n          {collapsed ? 'Show More' : 'Show Less'}\n        </ButtonLink>\n      )}\n      {(collapsed ? elements.slice(elements.length - MAX_COLLAPSED) : elements).map((info, idx) => (\n        <AssetLineageInfoElement key={idx} lineage_info={info} timestamp={timestamp} />\n      ))}\n    </Group>\n  );\n};\n","import {gql} from '@apollo/client';\n\nimport {METADATA_ENTRY_FRAGMENT} from '../runs/MetadataEntry';\n\nexport const ASSET_QUERY = gql`\n  query AssetQuery($assetKey: AssetKeyInput!, $limit: Int!, $before: String) {\n    assetOrError(assetKey: $assetKey) {\n      ... on Asset {\n        id\n        key {\n          path\n        }\n        mostRecentMaterialization: assetMaterializations(limit: 1) {\n          materializationEvent {\n            timestamp\n          }\n        }\n        assetMaterializations(limit: $limit, beforeTimestampMillis: $before) {\n          partition\n          runOrError {\n            ... on PipelineRun {\n              id\n              runId\n              mode\n              status\n              pipelineName\n              pipelineSnapshotId\n            }\n          }\n          materializationEvent {\n            runId\n            timestamp\n            stepKey\n            stepStats {\n              endTime\n              startTime\n            }\n            materialization {\n              label\n              description\n              metadataEntries {\n                ...MetadataEntryFragment\n              }\n            }\n            assetLineage {\n              assetKey {\n                path\n              }\n              partitions\n            }\n          }\n        }\n      }\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepMetadata, IStepState} from '../runs/RunMetadataProvider';\nimport {StepKind} from '../types/globalTypes';\n\nimport {invocationsOfPlannedDynamicStep, replacePlannedIndex} from './DynamicStepSupport';\nimport {ExecutionPlanToGraphFragment} from './types/ExecutionPlanToGraphFragment';\n\n/**\n * Converts a Run execution plan into a tree of `GraphQueryItem` items that\n * can be used as the input to the \"solid query\" filtering algorithm or rendered\n * into the Gannt visualization or the SVG DAG visualization. The idea\n * is that this data structure is generic, but it's really a fake solid tree.\n *\n * Pass runtimeStepKeys to duplicate dynamic step sub-trees for each occurrence of\n * the step key found at runtime.\n */\n\nexport const toGraphQueryItems = (\n  plan: ExecutionPlanToGraphFragment,\n  runtimeStepMetadata: {[key: string]: IStepMetadata},\n) => {\n  // Step 1: Find unresolved steps in the initial plan and build a mapping\n  // of their unresolved names to their resolved step keys, eg:\n  // \"multiply_input[*]\" => [\"multiply_input[1]\", \"multiply_input[2]\"]\n  const keyExpansionMap: {[key: string]: string[]} = {};\n  const runtimeStepKeys = Object.keys(runtimeStepMetadata);\n\n  for (const step of plan.steps) {\n    if (step.kind === StepKind.UNRESOLVED_MAPPED) {\n      let keys = invocationsOfPlannedDynamicStep(step.key, runtimeStepKeys);\n\n      // If the upstream steps have NOT succeeded, it's expected that there are zero runtime step keys\n      // matching the dynamic step. Until upstream steps run, we should show the [*] placeholder item\n      // in the runtime graph (rather than just showing nothing.)\n      const invocationsHappened = step.inputs.every((i) =>\n        i.dependsOn.every((s) => IStepState.SUCCEEDED === runtimeStepMetadata[s.key]?.state),\n      );\n      if (!invocationsHappened && keys.length === 0) {\n        keys = [step.key];\n      }\n      keyExpansionMap[step.key] = keys;\n    }\n  }\n\n  // Step 2: Create a graph node for each resolved step without any inputs or outputs.\n  const nodeTable: {[key: string]: GraphQueryItem} = {};\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] ? keyExpansionMap[step.key] : [step.key];\n    for (const key of stepRuntimeKeys) {\n      nodeTable[key] = {\n        name: key,\n        inputs: [],\n        outputs: [],\n      };\n    }\n  }\n\n  // Step 3: For each step in the original plan, visit each input and create inputs/outputs\n  // in our Gantt Node result set.\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] ? keyExpansionMap[step.key] : [step.key];\n    for (const key of stepRuntimeKeys) {\n      for (const input of step.inputs) {\n        // Add the input to our node in the result set\n        const nodeInput: GraphQueryItem['inputs'][0] = {dependsOn: []};\n        nodeTable[key].inputs.push(nodeInput);\n\n        // For each upstream step in the plan, map it to upstream nodes in the runtime graph\n        // and attach inputs / outputs to our result graph.\n        for (const upstream of input.dependsOn) {\n          let upstreamKeys = [];\n          if (step.kind === StepKind.UNRESOLVED_COLLECT) {\n            // If we are a collect, there may be N runtime keys fanning in to this input,\n            // fetch the keys if they exist or fall back to the sigle upstream step case.\n            upstreamKeys = keyExpansionMap[upstream.key] || [upstream.key];\n          } else {\n            // If the input was coming from an unresolved mapped step and WE are not a collector,\n            // assume our own dynamic key index applies to the upstream mapped step as well.\n            upstreamKeys = [\n              upstream.kind === StepKind.UNRESOLVED_MAPPED\n                ? replacePlannedIndex(upstream.key, key)\n                : upstream.key,\n            ];\n          }\n\n          for (const upstreamKey of upstreamKeys) {\n            if (!nodeTable[upstreamKey]) {\n              continue;\n            }\n            nodeInput.dependsOn.push({solid: {name: upstreamKey}});\n            let upstreamOutput: GraphQueryItem['outputs'][0] = nodeTable[upstreamKey].outputs[0];\n            if (!upstreamOutput) {\n              upstreamOutput = {dependedBy: []};\n              nodeTable[upstreamKey].outputs.push(upstreamOutput);\n            }\n            upstreamOutput.dependedBy.push({\n              solid: {name: key},\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return Object.values(nodeTable);\n};\n\nexport const EXECUTION_PLAN_TO_GRAPH_FRAGMENT = gql`\n  fragment ExecutionPlanToGraphFragment on ExecutionPlan {\n    steps {\n      key\n      kind\n    }\n    steps {\n      key\n      kind\n      inputs {\n        dependsOn {\n          key\n          kind\n          outputs {\n            name\n            type {\n              name\n            }\n          }\n        }\n      }\n    }\n    artifactsPersisted\n  }\n`;\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {getJSONForKey} from '../app/LocalStorage';\n\nconst ColumnWidthsStorageKey = 'ColumnWidths';\nconst ColumnWidths = Object.assign(\n  {\n    eventType: 140,\n    solid: 150,\n    timestamp: 112,\n  },\n  getJSONForKey(ColumnWidthsStorageKey),\n);\n\nconst MIN_COLUMN_WIDTH = 40;\n\nexport const ColumnWidthsContext = React.createContext({\n  ...ColumnWidths,\n  onChange: (_: typeof ColumnWidths) => {},\n});\n\nexport class ColumnWidthsProvider extends React.Component<\n  {onWidthsChanged: (widths: typeof ColumnWidths) => void},\n  typeof ColumnWidths\n> {\n  state = ColumnWidths;\n\n  onWidthsChangedFromContext = (columnWidths: typeof ColumnWidths) => {\n    window.localStorage.setItem(ColumnWidthsStorageKey, JSON.stringify(columnWidths));\n    this.props.onWidthsChanged(columnWidths);\n    this.setState(columnWidths);\n  };\n\n  render() {\n    return (\n      <ColumnWidthsContext.Provider\n        value={{\n          ...this.state,\n          onChange: this.onWidthsChangedFromContext,\n        }}\n      >\n        {this.props.children}\n      </ColumnWidthsContext.Provider>\n    );\n  }\n}\n\ninterface HeaderProps extends React.HTMLProps<HTMLDivElement> {\n  width: number;\n  handleSide?: 'left' | 'right';\n  onResize?: (width: number) => void;\n}\n\ninterface HeaderState {\n  isDragging: boolean;\n  width: number;\n  screenX: number;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n  state = {\n    isDragging: false,\n    width: 0,\n    screenX: 0,\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseDown = (m: React.MouseEvent<HTMLDivElement>) => {\n    const {width} = this.props;\n    this.setState({\n      isDragging: true,\n      screenX: m.screenX,\n      width,\n    });\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (evt: MouseEvent) => {\n    const {onResize, handleSide} = this.props;\n    const {isDragging, width, screenX} = this.state;\n    if (!evt.screenX || !isDragging || !onResize) {\n      return;\n    }\n    const dir = handleSide === 'left' ? -1 : 1;\n    onResize(Math.max(MIN_COLUMN_WIDTH, width + (evt.screenX - screenX) * dir));\n  };\n\n  onMouseUp = () => {\n    const {isDragging} = this.state;\n    isDragging && this.setState({isDragging: false});\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  render() {\n    const isDraggable = !!this.props.onResize;\n\n    return (\n      <HeaderContainer style={{width: this.props.width}}>\n        <HeaderDragHandle\n          onMouseDown={isDraggable ? this.onMouseDown : undefined}\n          isDraggable={isDraggable}\n          isDragging={this.state.isDragging}\n          side={this.props.handleSide || 'right'}\n        >\n          <div />\n        </HeaderDragHandle>\n        {this.props.children}\n      </HeaderContainer>\n    );\n  }\n}\n\nexport const Headers = () => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  return (\n    <HeadersContainer>\n      <Header width={widths.solid} onResize={(width) => widths.onChange({...widths, solid: width})}>\n        {flagPipelineModeTuples ? 'Op' : 'Solid'}\n      </Header>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Event Type\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Info</HeaderContainer>\n      <Header\n        handleSide=\"left\"\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n    </HeadersContainer>\n  );\n};\n\nconst HeadersContainer = styled.div`\n  display: flex;\n  color: ${Colors.GRAY3};\n  text-transform: uppercase;\n  font-size: 11px;\n  border-bottom: 1px solid #cbd4da;\n`;\n\nconst HeaderContainer = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  user-select: none;\n  display: inline-block;\n  padding: 4px 8px;\n`;\n\n// eslint-disable-next-line no-unexpected-multiline\nconst HeaderDragHandle = styled.div<{\n  side: 'left' | 'right';\n  isDraggable: boolean;\n  isDragging: boolean;\n}>`\n  width: 1px;\n  height: 20000px;\n  position: absolute;\n  cursor: ${({isDraggable}) => (isDraggable ? 'ew-resize' : 'default')};\n  z-index: 2;\n  ${({side}) => (side === 'right' ? `right: -2px;` : `left: -2px;`)}\n  padding: 0 2px;\n  & > div {\n    width: 1px;\n    height: 100%;\n    background: ${({isDragging}) => (isDragging ? Colors.GRAY1 : Colors.LIGHT_GRAY3)};\n  }\n`;\n","import * as React from 'react';\n\n/**\n * A hook that provides a mechanism for copying a string, triggered by user\n * behavior. If the Clipboard API is available, use it directly.\n *\n * The Clipboard can be undefined in an insecure context\n * (https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API), so we\n * also provide a fallback that uses an offscreen input and `execCommand` to\n * copy the contents. This is less ideal because it steals focus and is a DOM\n * hack, but it should still be effective enough for our needs.\n */\nexport const useCopyToClipboard = () => {\n  const clipboardAPI = navigator.clipboard;\n  const node = React.useRef<HTMLInputElement | null>(null);\n\n  React.useEffect(() => {\n    if (!clipboardAPI) {\n      node.current = document.createElement('input');\n      node.current.style.position = 'fixed';\n      node.current.style.top = '-10000px';\n      document.body.appendChild(node.current);\n    }\n\n    return () => {\n      node.current && document.body.removeChild(node.current);\n    };\n  }, [clipboardAPI]);\n\n  return React.useCallback(\n    (text: string) => {\n      if (clipboardAPI) {\n        clipboardAPI.writeText(text);\n      } else if (node.current) {\n        node.current.value = text;\n        node.current.select();\n        document.execCommand('copy');\n      }\n    },\n    [clipboardAPI],\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Classes,\n  NonIdealState,\n  Colors,\n  Button,\n  Menu,\n  MenuItem,\n  Popover,\n  Dialog,\n} from '@blueprintjs/core';\nimport * as qs from 'query-string';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {copyValue} from '../app/DomUtils';\nimport {useFeatureFlags} from '../app/Flags';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunTags} from '../runs/RunTags';\nimport {InstigationStatus} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {HighlightedCodeBlock} from '../ui/HighlightedCodeBlock';\nimport {IconWIP} from '../ui/Icon';\nimport {Spinner} from '../ui/Spinner';\nimport {Table} from '../ui/Table';\nimport {FontFamily} from '../ui/styles';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {RepositorySchedulesFragment} from './types/RepositorySchedulesFragment';\nimport {ScheduleFragment} from './types/ScheduleFragment';\nimport {\n  ScheduleTickConfigQuery,\n  ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult,\n  ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult_runRequests,\n} from './types/ScheduleTickConfigQuery';\n\ninterface ScheduleTick {\n  schedule: ScheduleFragment;\n  timestamp: number;\n  repoAddress: RepoAddress;\n}\n\nexport const SchedulesNextTicks: React.FC<{\n  repos: RepositorySchedulesFragment[];\n}> = React.memo(({repos}) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const nextTicks: ScheduleTick[] = [];\n\n  repos.forEach((repo) => {\n    const {schedules} = repo;\n    const repoAddress = {\n      name: repo.name,\n      location: repo.location.name,\n    };\n\n    const futureTickSchedules = schedules.filter(\n      (schedule) =>\n        schedule.futureTicks.results.length &&\n        schedule.scheduleState.status === InstigationStatus.RUNNING,\n    );\n\n    const minMaxTimestamp = Math.min(\n      ...futureTickSchedules.map(\n        (schedule) =>\n          schedule.futureTicks.results[schedule.futureTicks.results.length - 1].timestamp,\n      ),\n    );\n\n    futureTickSchedules.forEach((schedule) => {\n      schedule.futureTicks.results.forEach((tick) => {\n        if (tick.timestamp <= minMaxTimestamp) {\n          nextTicks.push({schedule, timestamp: tick.timestamp, repoAddress});\n        }\n      });\n    });\n  });\n\n  nextTicks.sort((a, b) => a.timestamp - b.timestamp);\n\n  if (!nextTicks.length) {\n    return (\n      <Box margin={{top: 32}}>\n        <NonIdealState\n          title=\"No scheduled ticks\"\n          description=\"There are no running schedules. Start a schedule to see scheduled ticks.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '200px'}}>Timestamp</th>\n          <th style={{width: '30%'}}>Schedule</th>\n          <th>{flagPipelineModeTuples ? 'Job' : 'Pipeline'}</th>\n          <th style={{textAlign: 'right'}}>Metadata</th>\n        </tr>\n      </thead>\n      <tbody>\n        {nextTicks.map(({schedule, timestamp, repoAddress}) => (\n          <tr key={`${schedule.id}:${timestamp}`}>\n            <td>\n              <TimestampDisplay\n                timestamp={timestamp}\n                timezone={schedule.executionTimezone}\n                timeFormat={{showSeconds: false, showTimezone: true}}\n              />\n            </td>\n            <td>\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}>\n                {schedule.name}\n              </Link>\n            </td>\n            <td>\n              <PipelineReference\n                pipelineName={schedule.pipelineName}\n                pipelineHrefContext={repoAddress}\n                mode={schedule.mode}\n              />\n            </td>\n            <td style={{textAlign: 'right'}}>\n              <NextTickMenu\n                repoAddress={repoAddress}\n                schedule={schedule}\n                tickTimestamp={timestamp}\n              />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n});\n\nconst NextTickMenu: React.FC<{\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n  tickTimestamp: number;\n}> = React.memo(({repoAddress, schedule, tickTimestamp}) => {\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName: schedule.name,\n  };\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const [loadTickConfig, {called, loading, data}] = useLazyQuery<ScheduleTickConfigQuery>(\n    SCHEDULE_TICK_CONFIG_QUERY,\n    {\n      variables: {\n        scheduleSelector,\n        tickTimestamp,\n      },\n    },\n  );\n\n  const infoReady = called ? !loading : false;\n  const evaluationResult =\n    data?.scheduleOrError?.__typename === 'Schedule'\n      ? data.scheduleOrError.futureTick.evaluationResult\n      : null;\n\n  const menuItems = infoReady ? (\n    <NextTickMenuItems\n      repoAddress={repoAddress}\n      schedule={schedule}\n      loading={loading}\n      onItemOpen={setOpen}\n      evaluationResult={evaluationResult}\n    />\n  ) : (\n    <Spinner purpose=\"body-text\" />\n  );\n  return (\n    <>\n      <Popover\n        content={<Menu>{menuItems}</Menu>}\n        position=\"bottom-right\"\n        onOpening={() => {\n          if (!called) {\n            loadTickConfig();\n          }\n        }}\n      >\n        <Button small minimal icon=\"chevron-down\" style={{position: 'relative', top: '-4px'}} />\n      </Popover>\n      <NextTickDialog\n        repoAddress={repoAddress}\n        isOpen={isOpen}\n        setOpen={setOpen}\n        schedule={schedule}\n        tickTimestamp={tickTimestamp}\n        evaluationResult={evaluationResult}\n      />\n    </>\n  );\n});\n\nconst NextTickMenuItems: React.FC<{\n  repoAddress: RepoAddress;\n  evaluationResult: ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult | null;\n  schedule: ScheduleFragment;\n  loading: boolean;\n  onItemOpen: (value: boolean) => void;\n}> = ({repoAddress, schedule, evaluationResult, loading, onItemOpen}) => {\n  if (!evaluationResult) {\n    return <MenuItem text=\"Could not preview tick for this schedule\" />;\n  }\n\n  if (evaluationResult.skipReason) {\n    return <MenuItem text={`View skip reason...`} onClick={() => onItemOpen(true)} />;\n  }\n\n  if (evaluationResult.error) {\n    return <MenuItem text=\"View error...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (!evaluationResult.runRequests || !evaluationResult.runRequests.length) {\n    return <MenuItem text=\"No runs requested for this projected schedule tick\" />;\n  }\n\n  if (evaluationResult.runRequests.length === 1) {\n    const runRequest = evaluationResult.runRequests[0];\n    const runConfigYaml = runRequest ? runRequest.runConfigYaml : '';\n    return (\n      <>\n        <MenuItem\n          text={loading ? 'Loading Configuration...' : 'View Configuration...'}\n          icon=\"share\"\n          onClick={() => onItemOpen(true)}\n        />\n        <MenuItem\n          text=\"Open in Playground...\"\n          icon=\"edit\"\n          target=\"_blank\"\n          href={workspacePathFromAddress(\n            repoAddress,\n            `/pipelines/${schedule.pipelineName}/playground/setup?${qs.stringify({\n              mode: schedule.mode,\n              config: runConfigYaml,\n              solidSelection: schedule.solidSelection,\n            })}`,\n          )}\n        />\n      </>\n    );\n  }\n\n  return (\n    <MenuItem\n      text={`View ${evaluationResult.runRequests.length} run requests...`}\n      icon=\"edit\"\n      target=\"_blank\"\n      onClick={() => onItemOpen(true)}\n    />\n  );\n};\n\nconst NextTickDialog: React.FC<{\n  repoAddress: RepoAddress;\n  isOpen: boolean;\n  setOpen: (value: boolean) => void;\n  evaluationResult: ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult | null;\n  schedule: ScheduleFragment;\n  tickTimestamp: number;\n}> = ({repoAddress, evaluationResult, schedule, tickTimestamp, setOpen, isOpen}) => {\n  const configRef = React.useRef<HTMLDivElement>(null);\n  const [\n    selectedRunRequest,\n    setSelectedRunRequest,\n  ] = React.useState<ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult_runRequests | null>(\n    evaluationResult && evaluationResult.runRequests && evaluationResult.runRequests.length === 1\n      ? evaluationResult.runRequests[0]\n      : null,\n  );\n  React.useEffect(() => {\n    if (\n      evaluationResult &&\n      evaluationResult.runRequests &&\n      evaluationResult.runRequests.length === 1\n    ) {\n      setSelectedRunRequest(evaluationResult.runRequests[0]);\n    }\n  }, [evaluationResult]);\n\n  const close = () => {\n    setSelectedRunRequest(null);\n    setOpen(false);\n  };\n\n  let body;\n  if (!evaluationResult) {\n    body = null;\n  } else if (selectedRunRequest) {\n    body = (\n      <>\n        {selectedRunRequest.tags.length ? (\n          <Box padding={12}>\n            <RunTags tags={selectedRunRequest.tags} />\n          </Box>\n        ) : null}\n        <ConfigBody>\n          <div ref={configRef}>\n            <HighlightedCodeBlock value={selectedRunRequest.runConfigYaml} language=\"yaml\" />\n          </div>\n        </ConfigBody>\n      </>\n    );\n  } else if (evaluationResult.error) {\n    body = (\n      <Box margin={24}>\n        <PythonErrorInfo error={evaluationResult.error} />\n      </Box>\n    );\n  } else if (evaluationResult.skipReason) {\n    body = (\n      <Box margin={24}>\n        <SkipWrapper>{evaluationResult.skipReason}</SkipWrapper>\n      </Box>\n    );\n  } else if (evaluationResult.runRequests) {\n    body = (\n      <RunRequestBody>\n        <Table>\n          <thead>\n            <tr>\n              <th>Run key</th>\n              <th>Config</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {evaluationResult.runRequests.map((runRequest, idx) => {\n              if (!runRequest) {\n                return null;\n              }\n              return (\n                <tr key={idx}>\n                  <td>{runRequest.runKey || <span>&mdash;</span>}</td>\n                  <td>\n                    <ButtonLink onClick={() => setSelectedRunRequest(runRequest)} underline={false}>\n                      <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                        <IconWIP name=\"open_in_new\" color={ColorsWIP.Gray400} />\n                        <span>View config</span>\n                      </Group>\n                    </ButtonLink>\n                  </td>\n                  <td>\n                    <Popover\n                      content={\n                        <Menu>\n                          <MenuItem\n                            text=\"Open in Playground...\"\n                            icon=\"edit\"\n                            target=\"_blank\"\n                            href={workspacePathFromAddress(\n                              repoAddress,\n                              `/pipelines/${schedule.pipelineName}/playground/setup?${qs.stringify({\n                                mode: schedule.mode,\n                                config: runRequest.runConfigYaml,\n                                solidSelection: schedule.solidSelection,\n                              })}`,\n                            )}\n                          />\n                        </Menu>\n                      }\n                      position=\"bottom\"\n                    >\n                      <Button small minimal icon=\"chevron-down\" />\n                    </Popover>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </RunRequestBody>\n    );\n  }\n\n  return (\n    <Dialog\n      usePortal={true}\n      onClose={() => close()}\n      style={{width: '50vw'}}\n      title={\n        <Box flex={{direction: 'row'}}>\n          <TimestampDisplay timestamp={tickTimestamp} timezone={schedule.executionTimezone} />\n          {selectedRunRequest?.runKey ? <div>: {selectedRunRequest?.runKey}</div> : null}\n        </Box>\n      }\n      isOpen={isOpen}\n    >\n      {body}\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          {selectedRunRequest ? (\n            <Button\n              autoFocus={false}\n              onClick={(e: React.MouseEvent<any, MouseEvent>) => {\n                copyValue(\n                  e,\n                  configRef && configRef.current ? configRef.current.innerText : '' || '',\n                );\n              }}\n            >\n              Copy\n            </Button>\n          ) : null}\n          <Button intent=\"primary\" autoFocus={true} onClick={() => close()}>\n            OK\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst SCHEDULE_TICK_CONFIG_QUERY = gql`\n  query ScheduleTickConfigQuery($scheduleSelector: ScheduleSelector!, $tickTimestamp: Int!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        futureTick(tickTimestamp: $tickTimestamp) {\n          evaluationResult {\n            runRequests {\n              runKey\n              runConfigYaml\n              tags {\n                key\n                value\n              }\n            }\n            skipReason\n            error {\n              ...PythonErrorFragment\n            }\n          }\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst ConfigBody = styled.div`\n  white-space: pre-line;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  overflow: scroll;\n  background: ${Colors.WHITE};\n  border-top: 1px solid ${Colors.LIGHT_GRAY3};\n  padding: 20px;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nconst RunRequestBody = styled.div`\n  font-size: 13px;\n  background: ${Colors.WHITE};\n  border-top: 1px solid ${Colors.LIGHT_GRAY3};\n  padding: 20px;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nconst SkipWrapper = styled.div`\n  background-color: #fdfcf2;\n  padding: 1em 2em;\n  border: 1px solid ${Colors.GOLD5};\n  border-radius: 3px;\n`;\n","import {PipelineExplorerSolidHandleFragment} from './types/PipelineExplorerSolidHandleFragment';\n\nfunction explodeComposite(\n  handles: PipelineExplorerSolidHandleFragment[],\n  handle: PipelineExplorerSolidHandleFragment,\n) {\n  if (handle.solid.definition.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('explodeComposite takes a composite handle.');\n  }\n\n  // Replace all references to this composite's inputs in other solid defitions\n  // with the interior target of the input mappings\n  handle.solid.definition.inputMappings.forEach((inmap) => {\n    const solidName = `${handle.solid.name}.${inmap.mappedInput.solid.name}`;\n    handles.forEach((h) =>\n      h.solid.outputs.forEach((i) => {\n        i.dependedBy.forEach((dep) => {\n          if (\n            dep.definition.name === inmap.definition.name &&\n            dep.solid.name === handle.solid.name\n          ) {\n            dep.solid.name = solidName;\n            dep.definition.name = inmap.mappedInput.definition.name;\n          }\n        });\n      }),\n    );\n  });\n\n  // Replace all references to this composite's outputs in other solid defitions\n  // with the interior target of the output mappings\n  handle.solid.definition.outputMappings.forEach((outmap) => {\n    const solidName = `${handle.solid.name}.${outmap.mappedOutput.solid.name}`;\n    handles.forEach((h) =>\n      h.solid.inputs.forEach((i) => {\n        i.dependsOn.forEach((dep) => {\n          if (\n            dep.definition.name === outmap.definition.name &&\n            dep.solid.name === handle.solid.name\n          ) {\n            dep.solid.name = solidName;\n            dep.definition.name = outmap.mappedOutput.definition.name;\n          }\n        });\n      }),\n    );\n  });\n\n  // Find all the solid handles that are within this composite and prefix their\n  // names with the composite container's name, giving them names that should\n  // match their handleID. (Note: We can't assign them their real handleIDs\n  // because we'd have to dig through `handles` to find each solid based on it's\n  // name + parentHandleID and then get it's handleID - dependsOn, etc. provide\n  // Solid references not SolidHandle references.)\n  const nested = handles.filter((h) => h.handleID === `${handle.handleID}.${h.solid.name}`);\n  nested.forEach((n) => {\n    n.solid.name = n.handleID;\n    n.solid.inputs.forEach((i) => {\n      i.dependsOn.forEach((d) => {\n        d.solid.name = `${handle.handleID}.${d.solid.name}`;\n      });\n    });\n    n.solid.outputs.forEach((i) => {\n      i.dependedBy.forEach((d) => {\n        d.solid.name = `${handle.handleID}.${d.solid.name}`;\n      });\n    });\n  });\n\n  // Find all the input dependencies of a composite solid and transfer them to their mapped interior\n  // target solids\n  handle.solid.definition.inputMappings.forEach((inmap) => {\n    handle.solid.inputs.forEach((input) => {\n      const solidName = `${handle.solid.name}.${inmap.mappedInput.solid.name}`;\n      const [interiorTarget] = handles.filter((h) => h.handleID === solidName);\n      if (!interiorTarget) {\n        return;\n      }\n      const matchingInput = interiorTarget.solid.inputs.find(\n        (i) => i.definition.name === input.definition.name,\n      );\n      if (!matchingInput) {\n        return;\n      }\n      matchingInput.dependsOn = matchingInput.dependsOn.concat(input.dependsOn);\n    });\n  });\n\n  // Find all the output dependencies of a composite solid and transfer them to their mapped interior\n  // target solids\n  handle.solid.definition.outputMappings.forEach((outmap) => {\n    handle.solid.outputs.forEach((output) => {\n      const solidName = `${handle.solid.name}.${outmap.mappedOutput.solid.name}`;\n      const [interiorTarget] = handles.filter((h) => h.handleID === solidName);\n      if (!interiorTarget) {\n        return;\n      }\n      const matchingOutput = interiorTarget.solid.outputs.find(\n        (i) => i.definition.name === output.definition.name,\n      );\n      if (!matchingOutput) {\n        return;\n      }\n      matchingOutput.dependedBy = matchingOutput.dependedBy.concat(output.dependedBy);\n    });\n  });\n\n  // Return the interior solids that replace the composite in the graph\n  return nested;\n}\n\n/**\n * Given a solid handle graph, returns a new solid handle graph with all of the\n * composites recursively replaced with their interior solids. Interior solids\n * are given their handle names (\"composite.inner\") to avoid name collisions.\n *\n * @param handles All the SolidHandles in the pipeline (NOT just current layer)\n */\nexport function explodeCompositesInHandleGraph(handles: PipelineExplorerSolidHandleFragment[]) {\n  // Clone the entire graph so we can modify solid names in-place\n  handles = JSON.parse(JSON.stringify(handles));\n\n  // Reset the output to just the solids in the top layer of the graph\n  const results = handles.filter((h) => !h.handleID.includes('.'));\n\n  // Find composites in the output and replace the composite with it's content\n  // solids (renaming the content solids to include the composite's handle and\n  // linking them to the other solids via the composite's input/output mappings)\n  while (true) {\n    const idx = results.findIndex(\n      (h) => h.solid.definition.__typename === 'CompositeSolidDefinition',\n    );\n    if (idx === -1) {\n      break;\n    }\n    results.splice(idx, 1, ...explodeComposite(handles, results[idx]));\n  }\n\n  return results;\n}\n","import {NonIdealState} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\n\nexport const NonIdealPipelineQueryResult: React.FC<{\n  result:\n    | {\n        __typename: 'PipelineSnapshotNotFoundError';\n        message: string;\n      }\n    | {\n        __typename: 'PipelineNotFoundError';\n        message: string;\n      }\n    | {\n        __typename: 'PythonError';\n        message: string;\n      };\n}> = ({result}) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  if (result.__typename === 'PipelineSnapshotNotFoundError') {\n    return (\n      <NonIdealState\n        icon={IconNames.FLOW_BRANCH}\n        title={flagPipelineModeTuples ? 'Job snapshot not found' : 'Pipeline snapshot not found'}\n        description={result.message}\n      />\n    );\n  }\n  if (result.__typename === 'PipelineNotFoundError') {\n    return (\n      <NonIdealState\n        icon={IconNames.FLOW_BRANCH}\n        title={flagPipelineModeTuples ? 'Job not found' : 'Pipeline not found'}\n        description={result.message}\n      />\n    );\n  }\n  if (result.__typename === 'PythonError') {\n    return (\n      <NonIdealState icon={IconNames.ERROR} title=\"Query Error\" description={result.message} />\n    );\n  }\n  return <span />;\n};\n","import * as React from 'react';\n\nimport {DEFAULT_RESULT_NAME, titleOfIO} from '../app/titleOfIO';\n\nimport {PipelineColorScale} from './PipelineColorScale';\nimport {SVGEllipseInRect, SVGFlowLayoutRect, SVGMonospaceText} from './SVGComponents';\nimport {ILayout} from './getFullSolidLayout';\nimport {Edge, isHighlighted} from './highlighting';\nimport {\n  SolidNodeDefinitionFragment,\n  SolidNodeDefinitionFragment_SolidDefinition_inputDefinitions,\n  SolidNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n} from './types/SolidNodeDefinitionFragment';\nimport {SolidNodeInvocationFragment} from './types/SolidNodeInvocationFragment';\n\nexport const PARENT_IN = 'PARENT_IN';\nexport const PARENT_OUT = 'PARENT_OUT';\n\ninterface SolidIORenderMetadata {\n  edges: Edge[];\n  jumpTargetSolid: string | null;\n  title: string;\n}\n\ninterface SolidIOBoxProps extends SolidIORenderMetadata {\n  colorKey: 'input' | 'output';\n  item:\n    | SolidNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | SolidNodeDefinitionFragment_SolidDefinition_outputDefinitions;\n  layout: ILayout;\n\n  // Passed through from Solid props\n  minified: boolean;\n  highlightedEdges: Edge[];\n  onDoubleClick: (solidName: string) => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nexport const SolidIOBox: React.FunctionComponent<SolidIOBoxProps> = ({\n  minified,\n  title,\n  jumpTargetSolid,\n  edges,\n  highlightedEdges,\n  layout,\n  colorKey,\n  item,\n  onDoubleClick,\n  onHighlightEdges,\n}) => {\n  const {x, y, width, height} = layout;\n  const {name, type} = item;\n  const showText = width === 0 && !minified;\n  const highlighted = edges.some((e) => isHighlighted(highlightedEdges, e));\n\n  return (\n    <g\n      onMouseEnter={() => onHighlightEdges(edges)}\n      onMouseLeave={() => onHighlightEdges([])}\n      onClick={(e) => {\n        jumpTargetSolid && onDoubleClick(jumpTargetSolid);\n        e.stopPropagation();\n      }}\n      onDoubleClick={(e) => e.stopPropagation()}\n    >\n      <title>{title}</title>\n      <SVGFlowLayoutRect\n        x={x}\n        y={y}\n        stroke=\"#979797\"\n        strokeWidth={1}\n        maxWidth={300}\n        fill={\n          highlighted ? PipelineColorScale(`${colorKey}Highlighted`) : PipelineColorScale(colorKey)\n        }\n        padding={8}\n        spacing={7}\n        height={height}\n      >\n        <SVGEllipseInRect\n          width={14}\n          height={14}\n          fill=\"rgba(0, 0, 0, 0.3)\"\n          stroke=\"white\"\n          strokeWidth={1.5}\n        />\n        {showText && name !== DEFAULT_RESULT_NAME && (\n          <SVGMonospaceText text={`${name}:`} fill=\"#FFF\" size={14} />\n        )}\n        {showText && type.displayName && (\n          <SVGFlowLayoutRect\n            rx={4}\n            ry={4}\n            fill=\"#d6ecff\"\n            stroke=\"#2491eb\"\n            strokeWidth={1}\n            height={27}\n            spacing={0}\n            padding={4}\n          >\n            <SVGMonospaceText text={type.displayName} size={14} fill=\"#222\" />\n          </SVGFlowLayoutRect>\n        )}\n      </SVGFlowLayoutRect>\n    </g>\n  );\n};\n\nexport function metadataForCompositeParentIO(\n  parentDefinition: SolidNodeDefinitionFragment,\n  item:\n    | SolidNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | SolidNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n): SolidIORenderMetadata {\n  const edges: Edge[] = [];\n  let title = `${item.name}: ${item.type.displayName}`;\n\n  if (parentDefinition.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('Parent solid is not a composite - how did this happen?');\n  }\n\n  if (item.__typename === 'InputDefinition') {\n    const others = parentDefinition.inputMappings\n      .filter((i) => i.definition.name === item.name)\n      .map((i) => i.mappedInput);\n\n    title += `\\n\\nConnected to: ${others.map(titleOfIO).join('\\n')}`;\n    edges.push(\n      ...others.map((i) => ({\n        a: `${i.solid.name}:${i.definition.name}`,\n        b: PARENT_IN,\n      })),\n    );\n  }\n  if (item.__typename === 'OutputDefinition') {\n    const others = parentDefinition.outputMappings\n      .filter((i) => i.definition.name === item.name)\n      .map((i) => i.mappedOutput);\n\n    title += `\\n\\nConnected to: ${others.map(titleOfIO).join('\\n')}`;\n    edges.push(\n      ...others.map((i) => ({\n        a: `${i.solid.name}:${i.definition.name}`,\n        b: PARENT_OUT,\n      })),\n    );\n  }\n\n  return {\n    edges,\n    title,\n    jumpTargetSolid: edges.length === 1 ? edges[0].a : null,\n  };\n}\n\nexport function metadataForIO(\n  item:\n    | SolidNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | SolidNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n  invocation?: SolidNodeInvocationFragment,\n): SolidIORenderMetadata {\n  const edges: Edge[] = [];\n\n  let title = `${item.name}: ${item.type.displayName}`;\n  let jumpTargetSolid: string | null = null;\n\n  if (invocation && item.__typename === 'InputDefinition') {\n    const others = invocation.inputs.find((i) => i.definition.name === item.name)!.dependsOn;\n    if (others.length) {\n      title += `\\n\\nFrom:\\n` + others.map(titleOfIO).join('\\n');\n      jumpTargetSolid = others.length === 1 ? others[0].solid.name : null;\n      edges.push(...others.map((o) => ({a: o.solid.name, b: invocation.name})));\n    }\n    edges.push({a: `${invocation.name}:${item.name}`, b: PARENT_IN});\n  }\n  if (invocation && item.__typename === 'OutputDefinition') {\n    const output = invocation.outputs.find((i) => i.definition.name === item.name);\n    if (!output) {\n      throw new Error(\n        `Invocation ${invocation.name} has no output with a definition named \"${item.name}\"`,\n      );\n    }\n\n    const others = output.dependedBy;\n    if (others.length) {\n      title += '\\n\\nUsed By:\\n' + others.map((o) => titleOfIO(o)).join('\\n');\n      jumpTargetSolid = others.length === 1 ? others[0].solid.name : null;\n      edges.push(...others.map((o) => ({a: o.solid.name, b: invocation.name})));\n    }\n    edges.push({a: `${invocation.name}:${item.name}`, b: PARENT_OUT});\n  }\n\n  return {edges, title, jumpTargetSolid};\n}\n","import React from 'react';\n\ntype PipelineExplorerJobContextData =\n  | {\n      sidebarTab: React.ReactNode;\n    }\n  | false;\n\nexport const PipelineExplorerJobContext = React.createContext<PipelineExplorerJobContextData>(\n  false,\n);\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ConfigTypeSchema, CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\nimport {ColorsWIP} from '../ui/Colors';\nimport {IconWIP, IconWrapper} from '../ui/Icon';\n\nimport {Description} from './Description';\nimport {SectionHeader, SectionItemContainer} from './SidebarComponents';\nimport {SidebarModeInfoFragment} from './types/SidebarModeInfoFragment';\n\nconst NO_DESCRIPTION = '';\n\nexport const SidebarModeSection: React.FunctionComponent<{\n  mode: SidebarModeInfoFragment;\n}> = ({mode}) => {\n  return (\n    <SectionItemContainer key={mode.name}>\n      <SectionHeader>{mode.name}</SectionHeader>\n      <Description description={mode.description || NO_DESCRIPTION} />\n      {mode.resources.map((resource) => (\n        <ContextResourceContainer key={resource.name}>\n          <IconWIP name=\"layers\" color={ColorsWIP.Gray700} />\n          <div>\n            <ContextResourceHeader>{resource.name}</ContextResourceHeader>\n            <Description description={resource.description || NO_DESCRIPTION} />\n            {resource.configField && (\n              <ConfigTypeSchema\n                type={resource.configField.configType}\n                typesInScope={resource.configField.configType.recursiveConfigTypes}\n              />\n            )}\n          </div>\n        </ContextResourceContainer>\n      ))}\n      {mode.loggers.map((logger) => (\n        <ContextLoggerContainer key={logger.name}>\n          <IconWIP name=\"layers\" color={ColorsWIP.Gray700} />\n          <div>\n            <ContextLoggerHeader>{logger.name}</ContextLoggerHeader>\n            <Description description={logger.description || NO_DESCRIPTION} />\n            {logger.configField && (\n              <ConfigTypeSchema\n                type={logger.configField.configType}\n                typesInScope={logger.configField.configType.recursiveConfigTypes}\n              />\n            )}\n          </div>\n        </ContextLoggerContainer>\n      ))}\n    </SectionItemContainer>\n  );\n};\n\nexport const SIDEBAR_MODE_INFO_FRAGMENT = gql`\n  fragment SidebarModeInfoFragment on Mode {\n    id\n    name\n    description\n    resources {\n      name\n      description\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n    loggers {\n      name\n      description\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n  }\n\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n\nconst ContextResourceHeader = styled(SectionHeader)`\n  font-size: 16px;\n  margin: 4px 0;\n`;\n\nconst ContextResourceContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-top: 12px;\n  & h4 {\n    margin-top: -2px;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n\nconst ContextLoggerHeader = styled(SectionHeader)`\n  font-size: 16px;\n  margin: 4px 0;\n`;\n\nconst ContextLoggerContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-top: 12px;\n  & h4 {\n    margin-top: -2px;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Code, Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from '../typeexplorer/TypeWithTooltip';\nimport {FontFamily} from '../ui/styles';\n\nimport {SolidTypeSignatureFragment} from './types/SolidTypeSignatureFragment';\n\ninterface ISolidTypeSignature {\n  definition: SolidTypeSignatureFragment;\n}\n\nexport const SolidTypeSignature: React.FC<ISolidTypeSignature> = (props) => {\n  const {inputDefinitions, outputDefinitions} = props.definition;\n\n  const inputSide = inputDefinitions.map((input, i) => (\n    <span key={i}>\n      {breakOnUnderscores(input.name)}: <TypeWithTooltip type={input.type} />\n      {i < inputDefinitions.length - 1 ? ', ' : ''}\n    </span>\n  ));\n  const outputSide = outputDefinitions.map((output, i) => (\n    <span key={i}>\n      {breakOnUnderscores(output.name)}: <TypeWithTooltip type={output.type} />\n      {i < outputDefinitions.length - 1 ? ', ' : ''}\n    </span>\n  ));\n  return (\n    <TypeSignature>\n      ({inputSide}) ⇒ ({outputSide})\n    </TypeSignature>\n  );\n};\n\nexport const SOLID_TYPE_SIGNATURE_FRAGMENT = gql`\n  fragment SolidTypeSignatureFragment on ISolidDefinition {\n    outputDefinitions {\n      name\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    inputDefinitions {\n      name\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n\nconst TypeSignature = styled(Code)`\n  && {\n    background: ${Colors.LIGHT_GRAY5};\n    font-family: ${FontFamily.monospace};\n    font-size: 14px;\n    padding: 4px 10px;\n    box-shadow: none;\n    color: black;\n  }\n`;\n","import {Colors, Text} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {titleOfIO} from '../app/titleOfIO';\nimport {SolidColumn} from '../runs/LogsRowComponents';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP, IconWrapper} from '../ui/Icon';\nimport {Code} from '../ui/Text';\nimport {FontFamily} from '../ui/styles';\n\nimport {SectionHeader} from './SidebarComponents';\n\ntype SolidLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nexport interface SidebarSolidInvocationInfo {\n  handleID: string;\n  pipelineName?: string;\n}\n\nexport type SolidMappingTable = {\n  [key: string]: SolidLinkInfo[];\n};\n\nexport const ShowAllButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${Colors.BLUE3};\n  text-decoration: underline;\n  padding-top: 10px;\n  font-size: 0.9rem;\n`;\n\nexport const TypeWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst SolidLink = (props: SolidLinkInfo) => (\n  <Link to={`./${props.solid.name}`}>\n    <Code>{titleOfIO(props)}</Code>\n  </Link>\n);\n\nexport const SolidLinks = (props: {title: string; items: SolidLinkInfo[]}) =>\n  props.items && props.items.length ? (\n    <Text>\n      {props.title}\n      {props.items.map((i, idx) => (\n        <SolidLink key={idx} {...i} />\n      ))}\n    </Text>\n  ) : null;\n\nexport const Invocation = (props: {\n  invocation: SidebarSolidInvocationInfo;\n  onClick: () => void;\n}) => {\n  const {handleID, pipelineName} = props.invocation;\n  const handlePath = handleID.split('.');\n  return (\n    <InvocationContainer onClick={props.onClick}>\n      {pipelineName && <div style={{color: Colors.BLUE1}}>{pipelineName}</div>}\n      <SolidColumn stepKey={handlePath.join('.')} />\n    </InvocationContainer>\n  );\n};\n\nexport const DependencyRow = ({\n  from,\n  to,\n  isDynamic,\n}: {\n  from: SolidLinkInfo | string;\n  to: SolidLinkInfo | string;\n  isDynamic: boolean | null;\n}) => {\n  return (\n    <tr>\n      <Cell>{typeof from === 'string' ? <Code>{from}</Code> : <SolidLink {...from} />}</Cell>\n      <td style={{whiteSpace: 'nowrap', textAlign: 'right'}}>\n        <Group direction=\"row\" spacing={2} alignItems=\"center\">\n          {isDynamic && <IconWIP name=\"bolt\" color={ColorsWIP.Gray700} />}\n          <IconWIP name=\"arrow_forward\" color={ColorsWIP.Gray700} />\n        </Group>\n      </td>\n      <Cell>{typeof to === 'string' ? <Code>{to}</Code> : <SolidLink {...to} />}</Cell>\n    </tr>\n  );\n};\n\ninterface DependencyHeaderRowProps {\n  label: string;\n  style?: React.CSSProperties;\n}\n\nexport const DependencyHeaderRow: React.FunctionComponent<DependencyHeaderRowProps> = ({\n  label,\n  ...rest\n}) => (\n  <tr>\n    <DependencyHeaderCell {...rest}>{label}</DependencyHeaderCell>\n  </tr>\n);\n\nexport const ResourceHeader = styled(SectionHeader)`\n  font-size: 14px;\n`;\n\nconst Cell = styled.td`\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 0;\n  width: 48%;\n`;\n\nexport const ResourceContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  & h4 {\n    margin-top: 0;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n\nexport const DependencyTable = styled.table`\n  width: 100%;\n`;\n\nconst DependencyHeaderCell = styled.td`\n  font-size: 0.7rem;\n  color: ${Colors.GRAY3};\n`;\n\nconst InvocationContainer = styled.div`\n  margin: 0 -10px;\n  padding: 10px;\n  pointer: default;\n  border-bottom: 1px solid ${Colors.LIGHT_GRAY2};\n  &:last-child {\n    border-bottom: none;\n  }\n  &:hover {\n    background: ${Colors.LIGHT_GRAY5};\n  }\n  font-family: ${FontFamily.monospace};\n`;\n","import {gql} from '@apollo/client';\nimport {NonIdealState, Tag} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryCountdown} from '../app/QueryCountdown';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from '../runs/RunTable';\nimport {RunsQueryRefetchContext} from '../runs/RunUtils';\nimport {\n  RunFilterTokenType,\n  RunsFilter,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n} from '../runs/RunsFilter';\nimport {POLL_INTERVAL, useCursorPaginatedQuery} from '../runs/useCursorPaginatedQuery';\nimport {Box} from '../ui/Box';\nimport {CursorPaginationControls} from '../ui/CursorControls';\nimport {Group} from '../ui/Group';\nimport {Loading} from '../ui/Loading';\nimport {Page} from '../ui/Page';\nimport {TokenizingFieldValue} from '../ui/TokenizingField';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PipelineRunsRootQuery, PipelineRunsRootQueryVariables} from './types/PipelineRunsRootQuery';\nimport {useJobTitle} from './useJobTitle';\n\nconst PAGE_SIZE = 25;\nconst ENABLED_FILTERS: RunFilterTokenType[] = ['status', 'tag'];\n\ninterface Props {\n  pipelinePath: string;\n}\n\nexport const PipelineRunsRoot: React.FC<Props> = (props) => {\n  const {pipelinePath} = props;\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName, pipelineMode, snapshotId} = explorerPath;\n  useJobTitle(explorerPath);\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters(ENABLED_FILTERS);\n  const permanentTokens = React.useMemo(() => {\n    return [\n      flagPipelineModeTuples\n        ? {\n            token: 'job',\n            value: `${pipelineName}${pipelineMode === 'default' ? '' : `:${pipelineMode}`}`,\n          }\n        : {token: 'pipeline', value: pipelineName},\n      snapshotId ? {token: 'snapshotId', value: snapshotId} : null,\n    ].filter(Boolean) as TokenizingFieldValue[];\n  }, [flagPipelineModeTuples, pipelineName, pipelineMode, snapshotId]);\n\n  const allTokens = [...filterTokens, ...permanentTokens];\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    PipelineRunsRootQuery,\n    PipelineRunsRootQueryVariables\n  >({\n    query: PIPELINE_RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n    variables: {\n      filter: {...runsFilterForSearchTokens(allTokens), pipelineName, snapshotId},\n    },\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'PipelineRuns') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.runId;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'PipelineRuns') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n  });\n\n  return (\n    <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n      <Page>\n        <Box\n          flex={{alignItems: 'flex-start', justifyContent: 'space-between'}}\n          margin={{bottom: 8}}\n        >\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8}>\n              {permanentTokens.map(({token, value}) => (\n                <Tag minimal key={token}>{`${token}:${value}`}</Tag>\n              ))}\n            </Group>\n            <RunsFilter\n              enabledFilters={ENABLED_FILTERS}\n              tokens={filterTokens}\n              onChange={setFilterTokens}\n              loading={queryResult.loading}\n            />\n          </Group>\n          <QueryCountdown pollInterval={POLL_INTERVAL} queryResult={queryResult} />\n        </Box>\n\n        <Loading queryResult={queryResult} allowStaleData={true}>\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'PipelineRuns') {\n              return (\n                <NonIdealState\n                  icon={IconNames.ERROR}\n                  title=\"Query Error\"\n                  description={pipelineRunsOrError.message}\n                />\n              );\n            }\n            const runs = pipelineRunsOrError.results;\n            const displayed = runs.slice(0, PAGE_SIZE);\n            const {hasNextCursor, hasPrevCursor} = paginationProps;\n            return (\n              <>\n                <RunTable runs={displayed} onSetFilter={setFilterTokens} />\n                {hasNextCursor || hasPrevCursor ? (\n                  <div style={{marginTop: '20px'}}>\n                    <CursorPaginationControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </Page>\n    </RunsQueryRefetchContext.Provider>\n  );\n};\n\nconst PIPELINE_RUNS_ROOT_QUERY = gql`\n  query PipelineRunsRootQuery($limit: Int, $cursor: String, $filter: PipelineRunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on PipelineRuns {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ... on PythonError {\n        message\n      }\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n`;\n","import styled from 'styled-components/macro';\n\nexport const MainContent = styled.div`\n  overflow-y: auto;\n  width: 100%;\n  height: 100%;\n`;\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {assertUnreachable} from '../app/Util';\nimport {StatusTable} from '../instigation/InstigationUtils';\nimport {PipelineRunStatus} from '../types/globalTypes';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\nimport {Caption} from '../ui/Text';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ScheduleFragment} from './types/ScheduleFragment';\nimport {\n  SchedulePartitionStatusFragment,\n  SchedulePartitionStatusFragment_partitionSet_partitionStatusesOrError_PartitionStatuses_results as Partition,\n} from './types/SchedulePartitionStatusFragment';\nimport {SchedulePartitionStatusQuery} from './types/SchedulePartitionStatusQuery';\n\nconst RUN_STATUSES = ['Succeeded', 'Failed', 'Missing', 'Pending'];\n\nconst calculateDisplayStatus = (partition: Partition) => {\n  switch (partition.runStatus) {\n    case null:\n      return 'Missing';\n    case PipelineRunStatus.SUCCESS:\n      return 'Succeeded';\n    case PipelineRunStatus.FAILURE:\n    case PipelineRunStatus.CANCELED:\n    case PipelineRunStatus.CANCELING:\n      return 'Failed';\n    case PipelineRunStatus.MANAGED:\n    case PipelineRunStatus.QUEUED:\n    case PipelineRunStatus.NOT_STARTED:\n    case PipelineRunStatus.STARTED:\n    case PipelineRunStatus.STARTING:\n      return 'Pending';\n    default:\n      return assertUnreachable(partition.runStatus);\n  }\n};\n\nexport const SchedulePartitionStatus: React.FC<{\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n}> = React.memo(({repoAddress, schedule}) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const {name: scheduleName, mode, partitionSet, pipelineName} = schedule;\n\n  const partitionSetName = partitionSet?.name;\n\n  const partitionPath = React.useMemo(() => {\n    const query = partitionSetName\n      ? qs.stringify(\n          {\n            partitionSet: partitionSetName,\n          },\n          {addQueryPrefix: true},\n        )\n      : '';\n    return `/${\n      flagPipelineModeTuples ? 'jobs' : 'pipelines'\n    }/${pipelineName}:${mode}/partitions${query}`;\n  }, [flagPipelineModeTuples, pipelineName, mode, partitionSetName]);\n\n  const partitionURL = workspacePathFromAddress(repoAddress, partitionPath);\n\n  const [retrievePartitionStatus, {data, loading}] = useLazyQuery<SchedulePartitionStatusQuery>(\n    SCHEDULE_PARTITION_STATUS_QUERY,\n    {\n      variables: {\n        scheduleSelector: {\n          scheduleName,\n          repositoryName: repoAddress.name,\n          repositoryLocationName: repoAddress.location,\n        },\n      },\n    },\n  );\n\n  const onClick = React.useCallback(() => retrievePartitionStatus(), [retrievePartitionStatus]);\n\n  const loadable = () => {\n    if (loading) {\n      return <Caption style={{color: Colors.GRAY3}}>Loading…</Caption>;\n    }\n\n    if (!data) {\n      return (\n        <ButtonLink onClick={onClick}>\n          <Caption>Show coverage</Caption>\n        </ButtonLink>\n      );\n    }\n\n    const partitionFragment = data.scheduleOrError;\n    if (partitionFragment.__typename === 'Schedule') {\n      return (\n        <RetrievedSchedulePartitionStatus\n          schedule={partitionFragment}\n          partitionURL={partitionURL}\n        />\n      );\n    }\n\n    return <Caption style={{color: Colors.RED1}}>Partition set not found!</Caption>;\n  };\n\n  return (\n    <Group direction=\"column\" spacing={4}>\n      <Link to={partitionURL}>{partitionSetName}</Link>\n      {loadable()}\n    </Group>\n  );\n});\n\nconst RetrievedSchedulePartitionStatus: React.FC<{\n  schedule: SchedulePartitionStatusFragment;\n  partitionURL: string;\n}> = ({schedule, partitionURL}) => {\n  const {partitionSet} = schedule;\n\n  if (!partitionSet || partitionSet.partitionStatusesOrError.__typename !== 'PartitionStatuses') {\n    return <span style={{color: Colors.GRAY4}}>None</span>;\n  }\n\n  const partitions = partitionSet.partitionStatusesOrError.results;\n  const partitionsByType = {};\n  partitions.forEach((partition) => {\n    const displayStatus = calculateDisplayStatus(partition);\n    partitionsByType[displayStatus] = [...(partitionsByType[displayStatus] || []), partition];\n  });\n\n  return (\n    <StatusTable>\n      <tbody>\n        {RUN_STATUSES.map((status) => {\n          if (!(status in partitionsByType)) {\n            return null;\n          }\n          return (\n            <tr key={status}>\n              <td style={{width: '100px'}}>{status}</td>\n              <td>\n                {status === 'Failed' || status === 'Missing' ? (\n                  <Link\n                    to={`${partitionURL}?showFailuresAndGapsOnly=true`}\n                    style={{color: Colors.DARK_GRAY1}}\n                  >\n                    {partitionsByType[status].length}\n                  </Link>\n                ) : (\n                  partitionsByType[status].length\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StatusTable>\n  );\n};\n\nconst SCHEDULE_PARTITION_STATUS_FRAGMENT = gql`\n  fragment SchedulePartitionStatusFragment on Schedule {\n    id\n    mode\n    pipelineName\n    partitionSet {\n      id\n      name\n      partitionStatusesOrError {\n        ... on PartitionStatuses {\n          results {\n            id\n            partitionName\n            runStatus\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SCHEDULE_PARTITION_STATUS_QUERY = gql`\n  query SchedulePartitionStatusQuery($scheduleSelector: ScheduleSelector!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        ...SchedulePartitionStatusFragment\n      }\n    }\n  }\n  ${SCHEDULE_PARTITION_STATUS_FRAGMENT}\n`;\n","import {Colors} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {TickTag} from '../instigation/InstigationTick';\nimport {InstigatedRunStatus} from '../instigation/InstigationUtils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {InstigationType} from '../types/globalTypes';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Table} from '../ui/Table';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {humanizeSensorInterval} from './SensorDetails';\nimport {SensorSwitch} from './SensorSwitch';\nimport {SensorFragment} from './types/SensorFragment';\n\nexport const SensorsTable: React.FC<{\n  repoAddress: RepoAddress;\n  sensors: SensorFragment[];\n}> = ({repoAddress, sensors}) => {\n  const lastTick = 'Status of the last tick: One of `Started`, `Skipped`, `Requested`, `Failed`';\n  const lastRun = 'The status of the last run requested by this sensor';\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '60px'}}></th>\n          <th>Sensor Name</th>\n          <th style={{width: '150px'}}>Frequency</th>\n          <th style={{width: '120px'}}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              Last tick\n              <Tooltip position=\"top\" content={lastTick}>\n                <IconWIP name=\"info\" color={ColorsWIP.Gray500} />\n              </Tooltip>\n            </Group>\n          </th>\n          <th>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              Last Run\n              <Tooltip position=\"top\" content={lastRun}>\n                <IconWIP name=\"info\" color={ColorsWIP.Gray500} />\n              </Tooltip>\n            </Group>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sensors.map((sensor) => (\n          <SensorRow key={sensor.name} repoAddress={repoAddress} sensor={sensor} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst SensorRow: React.FC<{\n  repoAddress: RepoAddress;\n  sensor: SensorFragment;\n}> = ({repoAddress, sensor}) => {\n  const {name, sensorState} = sensor;\n  const {ticks} = sensorState;\n  const latestTick = ticks.length ? ticks[0] : null;\n\n  return (\n    <tr key={name}>\n      <td>\n        <SensorSwitch repoAddress={repoAddress} sensor={sensor} />\n      </td>\n      <td>\n        <Group direction=\"column\" spacing={4}>\n          <span style={{fontWeight: 500}}>\n            <Link to={workspacePathFromAddress(repoAddress, `/sensors/${name}`)}>{name}</Link>\n          </span>\n          {sensor.targets && sensor.targets.length ? (\n            <Group direction=\"column\" spacing={2}>\n              {sensor.targets.map((target) => (\n                <PipelineReference\n                  key={`${target.pipelineName}:${target.mode}`}\n                  showIcon\n                  fontSize={13}\n                  pipelineName={target.pipelineName}\n                  pipelineHrefContext={repoAddress}\n                  mode={target.mode}\n                />\n              ))}\n            </Group>\n          ) : null}\n        </Group>\n      </td>\n      <td>{humanizeSensorInterval(sensor.minIntervalSeconds)}</td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SENSOR} />\n        ) : (\n          <span style={{color: Colors.GRAY4}}>None</span>\n        )}\n      </td>\n      <td>\n        <div style={{display: 'flex'}}>\n          <InstigatedRunStatus instigationState={sensorState} />\n        </div>\n      </td>\n    </tr>\n  );\n};\n","import * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {TickTag} from '../instigation/InstigationTick';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {InstigationStatus, InstigationType} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {CountdownStatus, useCountdown} from '../ui/Countdown';\nimport {Group} from '../ui/Group';\nimport {MetadataTable} from '../ui/MetadataTable';\nimport {PageHeader} from '../ui/PageHeader';\nimport {RefreshableCountdown} from '../ui/RefreshableCountdown';\nimport {Heading} from '../ui/Text';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {SensorSwitch} from './SensorSwitch';\nimport {SensorFragment} from './types/SensorFragment';\n\nexport const humanizeSensorInterval = (minIntervalSeconds?: number) => {\n  if (!minIntervalSeconds) {\n    minIntervalSeconds = 30; // should query sensor interval config when available\n  }\n  minIntervalSeconds = Math.max(30, minIntervalSeconds);\n  if (minIntervalSeconds < 60 || minIntervalSeconds % 60) {\n    return `~ ${minIntervalSeconds} sec`;\n  }\n  if (minIntervalSeconds === 3600) {\n    return `~ 1 hour`;\n  }\n  if (minIntervalSeconds < 3600 || minIntervalSeconds % 3600) {\n    return `~ ${minIntervalSeconds / 60} min`;\n  }\n  if (minIntervalSeconds === 86400) {\n    return `~ 1 day`;\n  }\n  if (minIntervalSeconds < 86400 || minIntervalSeconds % 86400) {\n    return `~ ${minIntervalSeconds / 3600} hours`;\n  }\n  return `~ ${minIntervalSeconds / 86400} days`;\n};\n\nexport const SensorDetails: React.FC<{\n  sensor: SensorFragment;\n  repoAddress: RepoAddress;\n  daemonHealth: boolean | null;\n  countdownDuration: number;\n  countdownStatus: CountdownStatus;\n  onRefresh: () => void;\n}> = ({sensor, repoAddress, daemonHealth, countdownDuration, countdownStatus, onRefresh}) => {\n  const {\n    name,\n    sensorState: {status, ticks},\n  } = sensor;\n  const {flagPipelineModeTuples} = useFeatureFlags();\n\n  const timeRemaining = useCountdown({\n    duration: countdownDuration,\n    status: countdownStatus,\n  });\n\n  const countdownRefreshing = countdownStatus === 'idle' || timeRemaining === 0;\n  const seconds = Math.floor(timeRemaining / 1000);\n\n  const latestTick = ticks.length ? ticks[0] : null;\n  const hasMultipleTargets = sensor.targets && sensor.targets.length > 1;\n\n  return (\n    <Group direction=\"column\" spacing={16}>\n      <PageHeader\n        title={\n          <Group alignItems=\"center\" direction=\"row\" spacing={2}>\n            <Heading>{name}</Heading>\n            <Box margin={{horizontal: 12}}>\n              <SensorSwitch repoAddress={repoAddress} sensor={sensor} />\n            </Box>\n            {sensor.nextTick && daemonHealth && status === InstigationStatus.RUNNING ? (\n              <Group direction=\"row\" spacing={4}>\n                <div>Next tick:</div>\n                <TimestampDisplay timestamp={sensor.nextTick.timestamp} />\n              </Group>\n            ) : null}\n          </Group>\n        }\n        icon=\"sensors\"\n        description={\n          <>\n            <Link to={workspacePathFromAddress(repoAddress, '/sensors')}>Sensor</Link> in{' '}\n            <RepositoryLink repoAddress={repoAddress} />\n          </>\n        }\n        right={\n          <Box margin={{top: 4}}>\n            <RefreshableCountdown\n              refreshing={countdownRefreshing}\n              seconds={seconds}\n              onRefresh={onRefresh}\n            />\n          </Box>\n        }\n      />\n      <MetadataTable\n        rows={[\n          sensor.description\n            ? {\n                key: 'Description',\n                value: sensor.description,\n              }\n            : null,\n          {\n            key: 'Latest tick',\n            value: latestTick ? (\n              <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                <TimestampDisplay timestamp={latestTick.timestamp} />\n                <TickTag tick={latestTick} instigationType={InstigationType.SENSOR} />\n              </Group>\n            ) : (\n              'Sensor has never run'\n            ),\n          },\n          {\n            key: flagPipelineModeTuples\n              ? hasMultipleTargets\n                ? 'Jobs'\n                : 'Job'\n              : hasMultipleTargets\n              ? 'Pipelines'\n              : 'Pipeline',\n            value:\n              sensor.targets && sensor.targets.length ? (\n                <Group direction=\"column\" spacing={2}>\n                  {sensor.targets.map((target) =>\n                    target.pipelineName ? (\n                      <PipelineReference\n                        key={`${target.pipelineName}:${target.mode}`}\n                        pipelineName={target.pipelineName}\n                        pipelineHrefContext={repoAddress}\n                        mode={target.mode}\n                      />\n                    ) : null,\n                  )}\n                </Group>\n              ) : (\n                'Sensor does not target a pipeline'\n              ),\n          },\n          {\n            key: 'Frequency',\n            value: humanizeSensorInterval(sensor.minIntervalSeconds),\n          },\n        ]}\n      />\n    </Group>\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {PipelineExplorerSolidHandleFragment} from '../pipelines/types/PipelineExplorerSolidHandleFragment';\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\nimport {Box} from '../ui/Box';\nimport {Spinner} from '../ui/Spinner';\n\nimport {PipelineGraph} from './PipelineGraph';\nimport {asyncDagrePipelineLayout, getDagrePipelineLayout} from './getFullSolidLayout';\nimport {IFullPipelineLayout} from './layout';\nimport {PipelineGraphSolidFragment} from './types/PipelineGraphSolidFragment';\n\nconst ASYNC_LAYOUT_SOLID_COUNT = 50;\n\ninterface Props {\n  pipelineName: string;\n  backgroundColor: string;\n  solids: PipelineGraphSolidFragment[];\n  focusSolids: PipelineGraphSolidFragment[];\n  highlightedSolids: PipelineGraphSolidFragment[];\n  selectedHandle?: PipelineExplorerSolidHandleFragment;\n  parentHandle?: PipelineExplorerSolidHandleFragment;\n  onClickSolid?: (arg: SolidNameOrPath) => void;\n  onEnterCompositeSolid?: (arg: SolidNameOrPath) => void;\n  onLeaveCompositeSolid?: () => void;\n  onClickBackground?: () => void;\n}\n\ntype State = {\n  loading: boolean;\n  layout: IFullPipelineLayout | null;\n  layoutSolidKey: string;\n};\n\ntype Action =\n  | {type: 'loading'}\n  | {type: 'layout'; payload: {layout: IFullPipelineLayout; layoutSolidKey: string}};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'loading':\n      return {loading: true, layout: null, layoutSolidKey: ''};\n    case 'layout':\n      return {\n        loading: false,\n        layout: action.payload.layout,\n        layoutSolidKey: action.payload.layoutSolidKey,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  loading: false,\n  layout: null,\n  layoutSolidKey: '',\n};\n\nexport const PipelineGraphContainer: React.FC<Props> = (props) => {\n  const {\n    pipelineName,\n    backgroundColor,\n    solids,\n    focusSolids,\n    highlightedSolids,\n    selectedHandle,\n    parentHandle,\n    onClickSolid,\n    onEnterCompositeSolid,\n    onLeaveCompositeSolid,\n    onClickBackground,\n  } = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const parentSolid = parentHandle && parentHandle.solid;\n  const solidKey = solids.map((x) => x.name).join('|');\n  const parentSolidKey = parentSolid && parentSolid.name;\n\n  React.useEffect(() => {\n    async function delegateDagrePipelineLayout() {\n      dispatch({type: 'loading'});\n      const layout = await asyncDagrePipelineLayout(solids, parentSolid);\n      dispatch({\n        type: 'layout',\n        payload: {layout: layout as IFullPipelineLayout, layoutSolidKey: solidKey},\n      });\n    }\n\n    if (solids.length < ASYNC_LAYOUT_SOLID_COUNT) {\n      const layout = getDagrePipelineLayout(solids, parentSolid);\n      dispatch({type: 'layout', payload: {layout, layoutSolidKey: solidKey}});\n    } else {\n      delegateDagrePipelineLayout();\n    }\n  }, [solidKey, parentSolidKey, solids, parentSolid]);\n\n  const {loading, layout, layoutSolidKey} = state;\n  if (loading || !layout || solidKey !== layoutSolidKey) {\n    return (\n      <PipelineGraphLoading\n        backgroundColor={backgroundColor}\n        manySolids={solids.length > ASYNC_LAYOUT_SOLID_COUNT}\n      />\n    );\n  }\n\n  return (\n    <PipelineGraph\n      pipelineName={pipelineName}\n      backgroundColor={backgroundColor}\n      solids={solids}\n      focusSolids={focusSolids}\n      highlightedSolids={highlightedSolids}\n      selectedHandleID={selectedHandle && selectedHandle.handleID}\n      selectedSolid={selectedHandle && selectedHandle.solid}\n      parentHandleID={parentHandle && parentHandle.handleID}\n      parentSolid={parentSolid}\n      onClickSolid={onClickSolid}\n      onClickBackground={onClickBackground}\n      onEnterCompositeSolid={onEnterCompositeSolid}\n      onLeaveCompositeSolid={onLeaveCompositeSolid}\n      layout={layout}\n    />\n  );\n};\n\nconst PipelineGraphLoading: React.FC<{backgroundColor: string; manySolids: boolean}> = (props) => {\n  const {backgroundColor, manySolids} = props;\n  return (\n    <LoadingContainer $backgroundColor={backgroundColor}>\n      {manySolids ? (\n        <Box margin={{bottom: 24}}>Rendering a large number of solids, please wait…</Box>\n      ) : null}\n      <Spinner purpose=\"page\" />\n    </LoadingContainer>\n  );\n};\n\nconst LoadingContainer = styled.div<{$backgroundColor: string}>`\n  background-color: ${({$backgroundColor}) => $backgroundColor};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import {Button, MenuItem} from '@blueprintjs/core';\nimport {Select} from '@blueprintjs/select';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styled from 'styled-components/macro';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\n\nimport {PipelineExplorerSolidHandleFragment_solid} from './types/PipelineExplorerSolidHandleFragment';\n\ninterface SolidJumpBarProps {\n  solids: Array<PipelineExplorerSolidHandleFragment_solid>;\n  selectedSolid: PipelineExplorerSolidHandleFragment_solid | undefined;\n  onChange: (solid: PipelineExplorerSolidHandleFragment_solid) => void;\n}\n\nexport const SolidJumpBar: React.FC<SolidJumpBarProps> = (props) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const select = React.useRef<Select<string>>(null);\n  const {solids, selectedSolid, onChange} = props;\n\n  return (\n    <ShortcutHandler\n      onShortcut={() => activateSelect(select.current)}\n      shortcutLabel=\"⌥S\"\n      shortcutFilter={(e) => e.code === 'KeyS' && e.altKey}\n    >\n      <StringSelectNoIntrinsicWidth\n        ref={select}\n        items={solids.map((s) => s.name)}\n        itemRenderer={BasicStringRenderer}\n        itemListPredicate={BasicStringPredicate}\n        noResults={<MenuItem disabled={true} text=\"No results.\" />}\n        onItemSelect={(name) => onChange(solids.find((s) => s.name === name)!)}\n      >\n        <Button\n          text={\n            selectedSolid\n              ? selectedSolid.name\n              : flagPipelineModeTuples\n              ? 'Select an op…'\n              : 'Select a solid…'\n          }\n          rightIcon=\"double-caret-vertical\"\n        />\n      </StringSelectNoIntrinsicWidth>\n    </ShortcutHandler>\n  );\n};\n\n// By default, Blueprint's Select component has an intrinsic size determined by the length of\n// it's content, which in our case can be wildly long and unruly. Giving the Select a min-width\n// of 0px and adding \"width\" rules to all nested <divs> that are a function of the parent (eg: 100%)\n// tells the layout engine that this can be assigned a width by it's container. This allows\n// us to make the Select \"as wide as the layout allows\" and have it truncate first.\n//\nconst StringSelectNoIntrinsicWidth = styled(Select.ofType<string>())`\n  min-width: 0;\n\n  & .bp3-popover-target {\n    width: 100%;\n  }\n  & .bp3-button {\n    max-width: 100%;\n    white-space: nowrap;\n  }\n  & .bp3-button-text {\n    min-width: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst BasicStringPredicate = (text: string, items: string[]) =>\n  items.filter((i) => i.toLowerCase().includes(text.toLowerCase())).slice(0, 20);\n\nconst BasicStringRenderer = (item: string, options: {handleClick: any; modifiers: any}) => (\n  <MenuItem\n    key={item}\n    text={item}\n    active={options.modifiers.active}\n    onClick={options.handleClick}\n  />\n);\n\nfunction activateSelect(select: Select<any> | null) {\n  if (!select) {\n    return;\n  }\n  // eslint-disable-next-line react/no-find-dom-node\n  const selectEl = ReactDOM.findDOMNode(select) as HTMLElement;\n  const btnEl = selectEl.querySelector('button');\n  if (btnEl) {\n    btnEl.click();\n  }\n}\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {Description} from '../pipelines/Description';\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from '../pipelines/SidebarComponents';\nimport {Box} from '../ui/Box';\n\nimport {ConfigTypeSchema, CONFIG_TYPE_SCHEMA_FRAGMENT} from './ConfigTypeSchema';\nimport {TypeExplorerFragment} from './types/TypeExplorerFragment';\n\ninterface ITypeExplorerProps {\n  type: TypeExplorerFragment;\n}\n\nexport const TypeExplorer: React.FC<ITypeExplorerProps> = (props) => {\n  const {name, inputSchemaType, outputSchemaType, description} = props.type;\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  return (\n    <div>\n      <SidebarSubhead />\n      <Box padding={12}>\n        <SidebarTitle>\n          <Link to=\"?tab=types\">{flagPipelineModeTuples ? 'Graph types' : 'Pipeline types'}</Link>{' '}\n          {'>'} {name}\n        </SidebarTitle>\n      </Box>\n      <SidebarSection title={'Description'}>\n        <Box padding={12}>\n          <Description description={description || 'No Description Provided'} />\n        </Box>\n      </SidebarSection>\n      {inputSchemaType && (\n        <SidebarSection title={'Input'}>\n          <Box padding={12}>\n            <ConfigTypeSchema\n              type={inputSchemaType}\n              typesInScope={inputSchemaType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {outputSchemaType && (\n        <SidebarSection title={'Output'}>\n          <Box padding={12}>\n            <ConfigTypeSchema\n              type={outputSchemaType}\n              typesInScope={outputSchemaType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const TYPE_EXPLORER_FRAGMENT = gql`\n  fragment TypeExplorerFragment on DagsterType {\n    name\n    description\n    inputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n    outputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n  }\n\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\n\nimport {PipelineExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {usePipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {TypeExplorer, TYPE_EXPLORER_FRAGMENT} from './TypeExplorer';\nimport {\n  TypeExplorerContainerQuery,\n  TypeExplorerContainerQueryVariables,\n} from './types/TypeExplorerContainerQuery';\n\ninterface ITypeExplorerContainerProps {\n  explorerPath: PipelineExplorerPath;\n  typeName: string;\n  repoAddress?: RepoAddress;\n}\n\nexport const TypeExplorerContainer: React.FC<ITypeExplorerContainerProps> = ({\n  explorerPath,\n  typeName,\n  repoAddress,\n}) => {\n  const pipelineSelector = usePipelineSelector(repoAddress || null, explorerPath.pipelineName);\n  const queryResult = useQuery<TypeExplorerContainerQuery, TypeExplorerContainerQueryVariables>(\n    TYPE_EXPLORER_CONTAINER_QUERY,\n    {\n      fetchPolicy: 'cache-and-network',\n      variables: {\n        pipelineSelector,\n        dagsterTypeName: typeName,\n      },\n    },\n  );\n  return (\n    <Loading queryResult={queryResult}>\n      {(data) => {\n        if (\n          data.pipelineOrError &&\n          data.pipelineOrError.__typename === 'Pipeline' &&\n          data.pipelineOrError.dagsterTypeOrError &&\n          data.pipelineOrError.dagsterTypeOrError.__typename === 'RegularDagsterType'\n        ) {\n          return <TypeExplorer type={data.pipelineOrError.dagsterTypeOrError} />;\n        } else {\n          return <div>Type Not Found</div>;\n        }\n      }}\n    </Loading>\n  );\n};\n\nconst TYPE_EXPLORER_CONTAINER_QUERY = gql`\n  query TypeExplorerContainerQuery(\n    $pipelineSelector: PipelineSelector!\n    $dagsterTypeName: String!\n  ) {\n    pipelineOrError(params: $pipelineSelector) {\n      __typename\n      ... on Pipeline {\n        id\n        dagsterTypeOrError(dagsterTypeName: $dagsterTypeName) {\n          __typename\n          ... on RegularDagsterType {\n            ...TypeExplorerFragment\n          }\n        }\n      }\n    }\n  }\n  ${TYPE_EXPLORER_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {H3, UL} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from '../pipelines/SidebarComponents';\nimport {Box} from '../ui/Box';\n\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from './TypeWithTooltip';\nimport {TypeListFragment} from './types/TypeListFragment';\n\ninterface ITypeListProps {\n  types: Array<TypeListFragment>;\n}\n\nfunction groupTypes(types: TypeListFragment[]): {[key: string]: TypeListFragment[]} {\n  const groups = {\n    Custom: Array<TypeListFragment>(),\n    'Built-in': Array<TypeListFragment>(),\n  };\n  types.forEach((type) => {\n    if (type.isBuiltin) {\n      groups['Built-in'].push(type);\n    } else {\n      groups['Custom'].push(type);\n    }\n  });\n  return groups;\n}\n\nexport const TypeList: React.FC<ITypeListProps> = (props) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const groups = groupTypes(props.types);\n  return (\n    <>\n      <SidebarSubhead />\n      <Box padding={12}>\n        <SidebarTitle>{flagPipelineModeTuples ? 'Graph types' : 'Pipeline types'}</SidebarTitle>\n      </Box>\n      {Object.keys(groups).map((title, idx) => (\n        <SidebarSection key={idx} title={title} collapsedByDefault={idx !== 0}>\n          <Box padding={12}>\n            <UL>\n              {groups[title].map((type, i) => (\n                <TypeLI key={i}>\n                  <TypeWithTooltip type={type} />\n                </TypeLI>\n              ))}\n            </UL>\n          </Box>\n        </SidebarSection>\n      ))}\n      <H3 />\n    </>\n  );\n};\n\nexport const TYPE_LIST_FRAGMENT = gql`\n  fragment TypeListFragment on DagsterType {\n    name\n    isBuiltin\n    ...DagsterTypeWithTooltipFragment\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n\nconst TypeLI = styled.li`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\n\nimport {PipelineExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {usePipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {TypeList, TYPE_LIST_FRAGMENT} from './TypeList';\nimport {TypeListContainerQuery} from './types/TypeListContainerQuery';\n\ninterface ITypeListContainerProps {\n  explorerPath: PipelineExplorerPath;\n  repoAddress?: RepoAddress;\n}\n\nexport const TypeListContainer: React.FunctionComponent<ITypeListContainerProps> = ({\n  explorerPath,\n  repoAddress,\n}) => {\n  const pipelineSelector = usePipelineSelector(repoAddress || null, explorerPath.pipelineName);\n  const queryResult = useQuery<TypeListContainerQuery>(TYPE_LIST_CONTAINER_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    variables: {pipelineSelector},\n  });\n\n  return (\n    <Loading queryResult={queryResult}>\n      {(data) => {\n        if (data.pipelineOrError.__typename === 'Pipeline') {\n          return <TypeList types={data.pipelineOrError.dagsterTypes} />;\n        } else {\n          return null;\n        }\n      }}\n    </Loading>\n  );\n};\n\nconst TYPE_LIST_CONTAINER_QUERY = gql`\n  query TypeListContainerQuery($pipelineSelector: PipelineSelector!) {\n    pipelineOrError(params: $pipelineSelector) {\n      __typename\n      ... on Pipeline {\n        id\n        name\n        dagsterTypes {\n          ...TypeListFragment\n        }\n      }\n    }\n  }\n\n  ${TYPE_LIST_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {breakOnUnderscores} from '../app/Util';\nimport {Box} from '../ui/Box';\n\nimport {Description} from './Description';\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from './SidebarComponents';\nimport {SidebarModeSection, SIDEBAR_MODE_INFO_FRAGMENT} from './SidebarModeSection';\nimport {SidebarPipelineInfoFragment} from './types/SidebarPipelineInfoFragment';\n\nconst NO_DESCRIPTION = '';\n\ninterface ISidebarPipelineInfoProps {\n  pipeline: SidebarPipelineInfoFragment;\n}\n\nexport const SidebarPipelineInfo: React.FC<ISidebarPipelineInfoProps> = ({pipeline}) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  return (\n    <div>\n      <Box padding={12}>\n        <SidebarSubhead>{flagPipelineModeTuples ? 'Graph' : 'Pipeline'}</SidebarSubhead>\n        <SidebarTitle>{breakOnUnderscores(pipeline.name)}</SidebarTitle>\n      </Box>\n      <SidebarSection title={'Description'}>\n        <Box padding={12}>\n          <Description description={pipeline ? pipeline.description : NO_DESCRIPTION} />\n        </Box>\n      </SidebarSection>\n      {!flagPipelineModeTuples && (\n        <SidebarSection title={'Modes'} collapsedByDefault={true}>\n          <Box padding={12}>\n            {pipeline.modes.map((mode) => (\n              <SidebarModeSection key={mode.name} mode={mode} />\n            ))}\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const SIDEBAR_PIPELINE_INFO_FRAGMENT = gql`\n  fragment SidebarPipelineInfoFragment on IPipelineSnapshot {\n    name\n    description\n    modes {\n      id\n      ...SidebarModeInfoFragment\n    }\n  }\n\n  ${SIDEBAR_MODE_INFO_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Button} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT} from '../typeexplorer/TypeWithTooltip';\nimport {Box} from '../ui/Box';\n\nimport {SidebarSection, SidebarTitle} from './SidebarComponents';\nimport {DependencyHeaderRow, DependencyRow, DependencyTable} from './SidebarSolidHelpers';\nimport {SidebarSolidInvocationFragment} from './types/SidebarSolidInvocationFragment';\n\ninterface ISidebarSolidInvocationProps {\n  solid: SidebarSolidInvocationFragment;\n  onEnterCompositeSolid?: (arg: SolidNameOrPath) => void;\n}\n\nexport const SidebarSolidInvocation: React.FC<ISidebarSolidInvocationProps> = (props) => {\n  const {solid, onEnterCompositeSolid} = props;\n  return (\n    <div>\n      <SidebarSection title={'Invocation'}>\n        <Box padding={12}>\n          <SidebarTitle>{breakOnUnderscores(solid.name)}</SidebarTitle>\n          <DependencyTable>\n            <tbody>\n              {solid.inputs.some((o) => o.dependsOn.length) && (\n                <DependencyHeaderRow label=\"Inputs\" />\n              )}\n              {solid.inputs.map(({definition, dependsOn, isDynamicCollect}) =>\n                dependsOn.map((source, idx) => (\n                  <DependencyRow\n                    key={idx}\n                    from={source}\n                    to={definition.name}\n                    isDynamic={isDynamicCollect}\n                  />\n                )),\n              )}\n              {solid.outputs.some((o) => o.dependedBy.length) && (\n                <DependencyHeaderRow label=\"Outputs\" style={{paddingTop: 15}} />\n              )}\n              {solid.outputs.map(({definition, dependedBy}) =>\n                dependedBy.map((target, idx) => (\n                  <DependencyRow\n                    key={idx}\n                    from={definition.name}\n                    to={target}\n                    isDynamic={definition.isDynamic}\n                  />\n                )),\n              )}\n            </tbody>\n          </DependencyTable>\n          {onEnterCompositeSolid && (\n            <Button\n              icon=\"zoom-in\"\n              text=\"Expand Composite\"\n              style={{marginTop: 15}}\n              onClick={() => onEnterCompositeSolid({name: solid.name})}\n            />\n          )}\n        </Box>\n      </SidebarSection>\n    </div>\n  );\n};\n\nexport const SIDEBAR_SOLID_INVOCATION_FRAGMENT = gql`\n  fragment SidebarSolidInvocationFragment on Solid {\n    name\n    inputs {\n      isDynamicCollect\n      definition {\n        name\n        description\n        type {\n          ...DagsterTypeWithTooltipFragment\n        }\n      }\n      dependsOn {\n        definition {\n          name\n        }\n        solid {\n          name\n        }\n      }\n    }\n    outputs {\n      definition {\n        name\n        description\n        isDynamic\n        type {\n          ...DagsterTypeWithTooltipFragment\n        }\n      }\n      dependedBy {\n        definition {\n          name\n        }\n        solid {\n          name\n        }\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\n\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\nimport {Loading} from '../ui/Loading';\nimport {usePipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {PipelineExplorerPath} from './PipelinePathUtils';\nimport {SidebarSolidDefinition, SIDEBAR_SOLID_DEFINITION_FRAGMENT} from './SidebarSolidDefinition';\nimport {SidebarSolidInvocation, SIDEBAR_SOLID_INVOCATION_FRAGMENT} from './SidebarSolidInvocation';\nimport {SidebarTabbedContainerSolidQuery} from './types/SidebarTabbedContainerSolidQuery';\n\ninterface SidebarSolidContainerProps {\n  handleID: string;\n  explorerPath: PipelineExplorerPath;\n  showingSubsolids: boolean;\n  parentSolidHandleID?: string;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  onEnterCompositeSolid: (arg: SolidNameOrPath) => void;\n  onClickSolid: (arg: SolidNameOrPath) => void;\n  repoAddress?: RepoAddress;\n}\n\nexport const SidebarSolidContainer: React.FC<SidebarSolidContainerProps> = ({\n  handleID,\n  explorerPath,\n  getInvocations,\n  showingSubsolids,\n  onEnterCompositeSolid,\n  onClickSolid,\n  repoAddress,\n}) => {\n  const pipelineSelector = usePipelineSelector(repoAddress || null, explorerPath.pipelineName);\n  const queryResult = useQuery<SidebarTabbedContainerSolidQuery>(\n    SIDEBAR_TABBED_CONTAINER_SOLID_QUERY,\n    {\n      variables: {selector: pipelineSelector, handleID: handleID},\n      fetchPolicy: 'cache-and-network',\n    },\n  );\n\n  return (\n    <Loading queryResult={queryResult}>\n      {({pipelineOrError}) => {\n        if (pipelineOrError?.__typename !== 'Pipeline') {\n          // should not reach here, unless the pipeline loads and then does not load in subsequent\n          // requests\n          console.error('Could not load pipeline solids');\n          return <span>Could not load pipeline solids.</span>;\n        }\n        return (\n          <>\n            <SidebarSolidInvocation\n              key={`${handleID}-inv`}\n              solid={pipelineOrError!.solidHandle!.solid}\n              onEnterCompositeSolid={\n                pipelineOrError!.solidHandle!.solid.definition.__typename ===\n                'CompositeSolidDefinition'\n                  ? onEnterCompositeSolid\n                  : undefined\n              }\n            />\n            <SidebarSolidDefinition\n              key={`${handleID}-def`}\n              showingSubsolids={showingSubsolids}\n              definition={pipelineOrError!.solidHandle!.solid.definition}\n              getInvocations={getInvocations}\n              onClickInvocation={({handleID}) => onClickSolid({path: handleID.split('.')})}\n              repoAddress={repoAddress}\n            />\n          </>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst SIDEBAR_TABBED_CONTAINER_SOLID_QUERY = gql`\n  query SidebarTabbedContainerSolidQuery($selector: PipelineSelector!, $handleID: String!) {\n    pipelineOrError(params: $selector) {\n      __typename\n      ... on Pipeline {\n        id\n        name\n        solidHandle(handleID: $handleID) {\n          solid {\n            ...SidebarSolidInvocationFragment\n\n            definition {\n              __typename\n              ...SidebarSolidDefinitionFragment\n            }\n          }\n        }\n      }\n    }\n  }\n  ${SIDEBAR_SOLID_INVOCATION_FRAGMENT}\n  ${SIDEBAR_SOLID_DEFINITION_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\nimport {TypeExplorerContainer} from '../typeexplorer/TypeExplorerContainer';\nimport {TypeListContainer} from '../typeexplorer/TypeListContainer';\nimport {Group} from '../ui/Group';\nimport {IconName, IconWIP} from '../ui/Icon';\nimport {RepoAddress} from '../workspace/types';\n\nimport {PipelineExplorerJobContext} from './PipelineExplorerJobContext';\nimport {PipelineExplorerPath} from './PipelinePathUtils';\nimport {SidebarPipelineInfo, SIDEBAR_PIPELINE_INFO_FRAGMENT} from './SidebarPipelineInfo';\nimport {SidebarSolidContainer} from './SidebarSolidContainer';\nimport {SidebarTabbedContainerPipelineFragment} from './types/SidebarTabbedContainerPipelineFragment';\n\ntype TabKey = 'types' | 'info';\n\ninterface TabDefinition {\n  name: string;\n  icon: IconName;\n  key: TabKey;\n  content: () => React.ReactNode;\n}\n\ninterface ISidebarTabbedContainerProps {\n  tab?: TabKey;\n  typeName?: string;\n  pipeline: SidebarTabbedContainerPipelineFragment;\n  explorerPath: PipelineExplorerPath;\n  solidHandleID?: string;\n  parentSolidHandleID?: string;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  onEnterCompositeSolid: (arg: SolidNameOrPath) => void;\n  onClickSolid: (arg: SolidNameOrPath) => void;\n  repoAddress?: RepoAddress;\n}\n\nexport const SidebarTabbedContainer: React.FC<ISidebarTabbedContainerProps> = (props) => {\n  const {\n    tab,\n    typeName,\n    pipeline,\n    explorerPath,\n    solidHandleID,\n    getInvocations,\n    parentSolidHandleID,\n    onEnterCompositeSolid,\n    onClickSolid,\n    repoAddress,\n  } = props;\n\n  const jobContext = React.useContext(PipelineExplorerJobContext);\n\n  const activeTab = tab || 'info';\n\n  const TabDefinitions: Array<TabDefinition> = [\n    {\n      name: 'Info',\n      icon: 'schema',\n      key: 'info',\n      content: () =>\n        solidHandleID ? (\n          <SidebarSolidContainer\n            key={solidHandleID}\n            explorerPath={explorerPath}\n            handleID={solidHandleID}\n            showingSubsolids={false}\n            getInvocations={getInvocations}\n            onEnterCompositeSolid={onEnterCompositeSolid}\n            onClickSolid={onClickSolid}\n            repoAddress={repoAddress}\n          />\n        ) : parentSolidHandleID ? (\n          <SidebarSolidContainer\n            key={parentSolidHandleID}\n            explorerPath={explorerPath}\n            handleID={parentSolidHandleID}\n            showingSubsolids={true}\n            getInvocations={getInvocations}\n            onEnterCompositeSolid={onEnterCompositeSolid}\n            onClickSolid={onClickSolid}\n            repoAddress={repoAddress}\n          />\n        ) : jobContext ? (\n          jobContext.sidebarTab\n        ) : (\n          <SidebarPipelineInfo pipeline={pipeline} key={pipeline.name} />\n        ),\n    },\n    {\n      name: 'Types',\n      icon: 'menu_book',\n      key: 'types',\n      content: () =>\n        typeName ? (\n          <TypeExplorerContainer\n            explorerPath={explorerPath}\n            repoAddress={repoAddress}\n            typeName={typeName}\n          />\n        ) : (\n          <TypeListContainer repoAddress={repoAddress} explorerPath={explorerPath} />\n        ),\n    },\n  ];\n\n  return (\n    <>\n      <TabContainer>\n        {TabDefinitions.map(({name, icon, key}) => (\n          <Tab key={key} active={key === activeTab}>\n            <Link to={{search: `?tab=${key}`}} key={key}>\n              <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                <IconWIP name={icon} color={Colors.BLUE3} />\n                {name}\n              </Group>\n            </Link>\n          </Tab>\n        ))}\n      </TabContainer>\n      {TabDefinitions.find((t) => t.key === activeTab)?.content()}\n    </>\n  );\n};\n\nexport const SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT = gql`\n  fragment SidebarTabbedContainerPipelineFragment on IPipelineSnapshot {\n    name\n    ...SidebarPipelineInfoFragment\n  }\n\n  ${SIDEBAR_PIPELINE_INFO_FRAGMENT}\n`;\n\nconst TabContainer = styled.div`\n  width: 100%;\n  display: flex;\n  margin-top: 10px;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst Tab = styled.div<{active: boolean}>`\n  color: ${(p) => (p.active ? Colors.BLUE3 : Colors.GRAY2)}\n  border-top: 3px solid transparent;\n  border-bottom: 3px solid ${(p) => (p.active ? Colors.BLUE3 : 'transparent')};\n  text-decoration: none;\n  white-space: nowrap;\n  min-width: 40px;\n  padding: 0 10px;\n  display: flex;\n  height: 36px;\n  align-items: center;\n\n  :hover > * {\n    text-decoration: none;\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Breadcrumbs, Checkbox, Colors, InputGroup, NonIdealState} from '@blueprintjs/core';\nimport Color from 'color';\nimport * as querystring from 'query-string';\nimport * as React from 'react';\nimport {Route} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PIPELINE_GRAPH_SOLID_FRAGMENT} from '../graph/PipelineGraph';\nimport {PipelineGraphContainer} from '../graph/PipelineGraphContainer';\nimport {SolidNameOrPath} from '../solids/SolidNameOrPath';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {IconWIP} from '../ui/Icon';\nimport {SplitPanelContainer} from '../ui/SplitPanelContainer';\nimport {RepoAddress} from '../workspace/types';\n\nimport {SolidJumpBar} from './PipelineJumpComponents';\nimport {PipelineExplorerPath} from './PipelinePathUtils';\nimport {\n  SidebarTabbedContainer,\n  SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT,\n} from './SidebarTabbedContainer';\nimport {PipelineExplorerFragment} from './types/PipelineExplorerFragment';\nimport {PipelineExplorerSolidHandleFragment} from './types/PipelineExplorerSolidHandleFragment';\n\nexport interface PipelineExplorerOptions {\n  explodeComposites: boolean;\n}\n\ninterface PipelineExplorerProps {\n  explorerPath: PipelineExplorerPath;\n  onChangeExplorerPath: (path: PipelineExplorerPath, mode: 'replace' | 'push') => void;\n  options: PipelineExplorerOptions;\n  setOptions: (options: PipelineExplorerOptions) => void;\n  pipeline: PipelineExplorerFragment;\n  repoAddress?: RepoAddress;\n  handles: PipelineExplorerSolidHandleFragment[];\n  selectedHandle?: PipelineExplorerSolidHandleFragment;\n  parentHandle?: PipelineExplorerSolidHandleFragment;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n}\n\nexport const PipelineExplorer: React.FC<PipelineExplorerProps> = (props) => {\n  const {\n    getInvocations,\n    handles,\n    options,\n    pipeline,\n    explorerPath,\n    onChangeExplorerPath,\n    parentHandle,\n    selectedHandle,\n    setOptions,\n    repoAddress,\n  } = props;\n  const [highlighted, setHighlighted] = React.useState('');\n  const {flagPipelineModeTuples} = useFeatureFlags();\n\n  const handleQueryChange = (solidsQuery: string) => {\n    onChangeExplorerPath({...explorerPath, solidsQuery}, 'replace');\n  };\n\n  const handleAdjustPath = (fn: (solidNames: string[]) => void) => {\n    const pathSolids = [...explorerPath.pathSolids];\n    const retValue = fn(pathSolids);\n    if (retValue !== undefined) {\n      throw new Error('handleAdjustPath function is expected to mutate the array');\n    }\n    onChangeExplorerPath({...explorerPath, pathSolids}, 'push');\n  };\n\n  // Note: this method handles relative solid paths, eg: {path: ['..', 'OtherSolid']}.\n  // This is important because the DAG component tree doesn't always have access to a handleID,\n  // and we sometimes want to be able to jump to a solid in the parent layer.\n  //\n  const handleClickSolid = (arg: SolidNameOrPath) => {\n    handleAdjustPath((solidNames) => {\n      if ('name' in arg) {\n        solidNames[solidNames.length ? solidNames.length - 1 : 0] = arg.name;\n      } else {\n        if (arg.path[0] !== '..') {\n          solidNames.length = 0;\n        }\n        if (arg.path[0] === '..' && solidNames[solidNames.length - 1] !== '') {\n          solidNames.pop(); // remove the last path component indicating selection\n        }\n        while (arg.path[0] === '..') {\n          arg.path.shift();\n          solidNames.pop();\n        }\n        solidNames.push(...arg.path);\n      }\n    });\n  };\n\n  const handleEnterCompositeSolid = (arg: SolidNameOrPath) => {\n    // To animate the rect of the composite solid expanding correctly, we need\n    // to select it before entering it so we can draw the \"initial state\" of the\n    // labeled rectangle.\n    handleClickSolid(arg);\n\n    window.requestAnimationFrame(() => {\n      handleAdjustPath((solidNames) => {\n        const last = 'name' in arg ? arg.name : arg.path[arg.path.length - 1];\n        solidNames[solidNames.length - 1] = last;\n        solidNames.push('');\n      });\n    });\n  };\n\n  const handleLeaveCompositeSolid = () => {\n    handleAdjustPath((solidNames) => {\n      solidNames.pop();\n    });\n  };\n\n  const handleClickBackground = () => {\n    handleClickSolid({name: ''});\n  };\n\n  const {solidsQuery} = explorerPath;\n  const solids = React.useMemo(() => handles.map((h) => h.solid), [handles]);\n  const solidsQueryEnabled = !parentHandle && !explorerPath.snapshotId;\n  const explodeCompositesEnabled =\n    !parentHandle &&\n    (options.explodeComposites ||\n      solids.some((f) => f.definition.__typename === 'CompositeSolidDefinition'));\n\n  const queryResultSolids = React.useMemo(\n    () => (solidsQueryEnabled ? filterByQuery(solids, solidsQuery) : {all: solids, focus: []}),\n    [solidsQuery, solids, solidsQueryEnabled],\n  );\n\n  const {all} = queryResultSolids;\n  const highlightedSolids = React.useMemo(() => all.filter((s) => s.name.includes(highlighted)), [\n    highlighted,\n    all,\n  ]);\n\n  const backgroundColor = parentHandle ? Colors.WHITE : Colors.WHITE;\n  const backgroundTranslucent = Color(backgroundColor).fade(0.6).toString();\n\n  return (\n    <SplitPanelContainer\n      identifier=\"explorer\"\n      firstInitialPercent={70}\n      first={\n        <>\n          <PathOverlay style={{background: backgroundTranslucent}}>\n            <Breadcrumbs\n              items={explorerPath.pathSolids.map((name, idx) => {\n                return {\n                  text: name,\n                  onClick: () =>\n                    onChangeExplorerPath(\n                      {...explorerPath, pathSolids: explorerPath.pathSolids.slice(0, idx + 1)},\n                      'push',\n                    ),\n                };\n              })}\n              currentBreadcrumbRenderer={() => (\n                <SolidJumpBar\n                  solids={queryResultSolids.all}\n                  selectedSolid={selectedHandle && selectedHandle.solid}\n                  onChange={(solid) => handleClickSolid({name: solid.name})}\n                />\n              )}\n            />\n          </PathOverlay>\n          {solidsQueryEnabled && (\n            <PipelineGraphQueryInputContainer>\n              <GraphQueryInput\n                items={solids}\n                value={explorerPath.solidsQuery}\n                placeholder={flagPipelineModeTuples ? 'Type an op subset' : 'Type a solid subset'}\n                onChange={handleQueryChange}\n              />\n            </PipelineGraphQueryInputContainer>\n          )}\n\n          <SearchOverlay style={{background: backgroundTranslucent}}>\n            <SolidHighlightInput\n              type=\"text\"\n              name=\"highlighted\"\n              leftIcon=\"search\"\n              value={highlighted}\n              placeholder=\"Highlight...\"\n              onChange={(e: React.ChangeEvent<any>) => setHighlighted(e.target.value)}\n            />\n          </SearchOverlay>\n          {explodeCompositesEnabled && (\n            <OptionsOverlay>\n              <Checkbox\n                label=\"Explode composites\"\n                checked={options.explodeComposites}\n                onChange={() => {\n                  handleQueryChange('');\n                  setOptions({\n                    ...options,\n                    explodeComposites: !options.explodeComposites,\n                  });\n                }}\n              />\n            </OptionsOverlay>\n          )}\n          {solids.length === 0 ? <EmptyDAGNotice /> : null}\n          {solids.length > 0 &&\n            queryResultSolids.all.length === 0 &&\n            !explorerPath.solidsQuery.length && <LargeDAGNotice />}\n          <PipelineGraphContainer\n            pipelineName={pipeline.name}\n            backgroundColor={backgroundColor}\n            solids={queryResultSolids.all}\n            focusSolids={queryResultSolids.focus}\n            highlightedSolids={highlightedSolids}\n            selectedHandle={selectedHandle}\n            parentHandle={parentHandle}\n            onClickSolid={handleClickSolid}\n            onClickBackground={handleClickBackground}\n            onEnterCompositeSolid={handleEnterCompositeSolid}\n            onLeaveCompositeSolid={handleLeaveCompositeSolid}\n          />\n        </>\n      }\n      second={\n        <RightInfoPanel>\n          <Route\n            // eslint-disable-next-line react/no-children-prop\n            children={({location}: {location: any}) => (\n              <SidebarTabbedContainer\n                pipeline={pipeline}\n                explorerPath={explorerPath}\n                solidHandleID={selectedHandle && selectedHandle.handleID}\n                parentSolidHandleID={parentHandle && parentHandle.handleID}\n                getInvocations={getInvocations}\n                onEnterCompositeSolid={handleEnterCompositeSolid}\n                onClickSolid={handleClickSolid}\n                repoAddress={repoAddress}\n                {...querystring.parse(location.search || '')}\n              />\n            )}\n          />\n        </RightInfoPanel>\n      }\n    />\n  );\n};\n\nexport const PIPELINE_EXPLORER_FRAGMENT = gql`\n  fragment PipelineExplorerFragment on IPipelineSnapshot {\n    name\n    description\n    ...SidebarTabbedContainerPipelineFragment\n  }\n  ${SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT}\n`;\n\nexport const PIPELINE_EXPLORER_SOLID_HANDLE_FRAGMENT = gql`\n  fragment PipelineExplorerSolidHandleFragment on SolidHandle {\n    handleID\n    solid {\n      name\n      ...PipelineGraphSolidFragment\n    }\n  }\n  ${PIPELINE_GRAPH_SOLID_FRAGMENT}\n`;\n\nconst RightInfoPanel = styled.div`\n  // Fixes major perofmance hit. To reproduce, add enough content to\n  // the sidebar that it scrolls (via overflow-y below) and then try\n  // to pan the DAG.\n  position: relative;\n\n  height: 100%;\n  overflow-y: scroll;\n  background: ${Colors.WHITE};\n`;\n\nconst OptionsOverlay = styled.div`\n  z-index: 2;\n  padding: 5px 15px;\n  display: inline-flex;\n  align-items: stretch;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nconst SearchOverlay = styled.div`\n  z-index: 2;\n  padding: 12px 12px 0 0;\n  display: inline-flex;\n  align-items: stretch;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst PathOverlay = styled.div`\n  z-index: 2;\n  padding: 12px 0 0 20px;\n  max-width: calc(100% - 250px);\n  display: inline-flex;\n  align-items: center;\n  position: absolute;\n  left: 0;\n`;\n\nconst SolidHighlightInput = styled(InputGroup)`\n  margin-left: 7px;\n  font-size: 14px;\n  width: 220px;\n`;\n\nconst LargeDAGNotice = () => (\n  <LargeDAGContainer>\n    <LargeDAGInstructionBox>\n      <p>\n        This is a large DAG that may be difficult to visualize. Type <code>*</code> in the subset\n        box below to render the entire thing, or type a solid name and use:\n      </p>\n      <ul style={{marginBottom: 0}}>\n        <li>\n          <code>+</code> to expand a single layer before or after the solid.\n        </li>\n        <li>\n          <code>*</code> to expand recursively before or after the solid.\n        </li>\n        <li>\n          <code>AND</code> to render another disconnected fragment.\n        </li>\n      </ul>\n    </LargeDAGInstructionBox>\n    <IconWIP name=\"arrow_downward\" size={24} />\n  </LargeDAGContainer>\n);\n\nconst EmptyDAGNotice = () => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  return (\n    <NonIdealState\n      icon=\"diagram-tree\"\n      title={flagPipelineModeTuples ? 'Empty graph' : 'Empty pipeline'}\n      description={\n        <>\n          <div>This {flagPipelineModeTuples ? 'graph' : 'pipeline'} is empty.</div>\n          <div>Solids will appear here when you add them.</div>\n        </>\n      }\n    />\n  );\n};\n\nconst LargeDAGContainer = styled.div`\n  width: 50vw;\n  position: absolute;\n  transform: translateX(-50%);\n  left: 50%;\n  bottom: 60px;\n  z-index: 2;\n  max-width: 600px;\n  text-align: center;\n  .bp3-icon {\n    color: ${Colors.LIGHT_GRAY1};\n  }\n`;\n\nconst LargeDAGInstructionBox = styled.div`\n  padding: 15px 20px;\n  border: 1px solid #fff5c3;\n  margin-bottom: 20px;\n  color: ${Colors.DARK_GRAY3};\n  background: #fffbe5;\n  text-align: left;\n  line-height: 1.4rem;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  code {\n    background: #f8ebad;\n    font-weight: 500;\n    padding: 0 4px;\n  }\n`;\n\nconst PipelineGraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n","import {Button, Classes, Colors, Dialog} from '@blueprintjs/core';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {MetadataEntries} from '../runs/MetadataEntry';\nimport {RunStatusTagWithStats} from '../runs/RunStatusTag';\nimport {titleForRun} from '../runs/RunUtils';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\nimport {Table} from '../ui/Table';\nimport {Mono} from '../ui/Text';\n\nimport {AssetLineageElements} from './AssetLineageElements';\nimport {AssetQuery_assetOrError_Asset_assetMaterializations as Materialization} from './types/AssetQuery';\nimport {HistoricalMaterialization} from './useMaterializationBuckets';\n\nexport const AssetMaterializationTable: React.FC<{\n  isPartitioned: boolean;\n  hasLineage: boolean;\n  materializations: HistoricalMaterialization[];\n  shouldBucketPartitions?: boolean;\n}> = ({isPartitioned, hasLineage, materializations, shouldBucketPartitions = true}) => {\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const list = React.useMemo(() => {\n    if (shouldBucketPartitions) {\n      return materializations;\n    }\n    return materializations.map((m) => ({latest: m.latest}));\n  }, [materializations, shouldBucketPartitions]);\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          {isPartitioned && <th style={{minWidth: 100}}>Partition</th>}\n          <th style={{paddingLeft: 0}}>Materialization Metadata</th>\n          {hasLineage && <th style={{minWidth: 100}}>Parent Materializations</th>}\n          <th style={{minWidth: 150}}>Timestamp</th>\n          <th style={{minWidth: 150}}>{flagPipelineModeTuples ? 'Job' : 'Pipeline'}</th>\n          <th style={{width: 200}}>Run</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map((m) => (\n          <AssetMaterializationRow\n            key={m.latest.materializationEvent.timestamp}\n            isPartitioned={isPartitioned}\n            hasLineage={hasLineage}\n            assetMaterialization={m}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst AssetMaterializationRow: React.FC<{\n  assetMaterialization: HistoricalMaterialization;\n  isPartitioned: boolean;\n  hasLineage: boolean;\n}> = ({assetMaterialization, isPartitioned, hasLineage}) => {\n  const {latest, predecessors} = assetMaterialization;\n  const run = latest.runOrError.__typename === 'PipelineRun' ? latest.runOrError : undefined;\n  if (!run) {\n    return <span />;\n  }\n  const {materialization, assetLineage, timestamp} = latest.materializationEvent;\n  const metadataEntries = materialization.metadataEntries;\n\n  return (\n    <tr>\n      {isPartitioned && (\n        <td>{latest.partition || <span style={{color: Colors.GRAY3}}>None</span>}</td>\n      )}\n      <td style={{fontSize: 12, padding: '4px 12px 0 0'}}>\n        {materialization.description ? (\n          <div style={{fontSize: '0.8rem', marginTop: 10}}>{materialization.description}</div>\n        ) : null}\n        {metadataEntries && metadataEntries.length ? (\n          <MetadataEntries entries={metadataEntries} />\n        ) : null}\n      </td>\n      {hasLineage && (\n        <td>{<AssetLineageElements elements={assetLineage} timestamp={timestamp} />}</td>\n      )}\n      <td>\n        <Group direction=\"column\" spacing={4}>\n          <Timestamp timestamp={{ms: Number(timestamp)}} />\n          {predecessors?.length ? (\n            <AssetPredecessorLink\n              isPartitioned={isPartitioned}\n              hasLineage={hasLineage}\n              predecessors={predecessors}\n            />\n          ) : null}\n        </Group>\n      </td>\n      <td>\n        <PipelineReference\n          pipelineName={run.pipelineName}\n          pipelineHrefContext=\"repo-unknown\"\n          snapshotId={run.pipelineSnapshotId}\n          mode={run.mode}\n        />\n      </td>\n      <td>\n        <Group direction=\"row\" spacing={4}>\n          <Link to={`/instance/runs/${run.runId}?timestamp=${timestamp}`}>\n            <Mono>{titleForRun(run)}</Mono>\n          </Link>\n          <RunStatusTagWithStats status={run.status} runId={run.runId} />\n        </Group>\n      </td>\n    </tr>\n  );\n};\n\ninterface PredecessorDialogProps {\n  hasLineage: boolean;\n  isPartitioned: boolean;\n  predecessors: Materialization[];\n}\n\nexport const AssetPredecessorLink: React.FC<PredecessorDialogProps> = ({\n  hasLineage,\n  isPartitioned,\n  predecessors,\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const count = predecessors.length;\n  const title = () => {\n    if (isPartitioned) {\n      const partition = predecessors[0].partition;\n      if (partition) {\n        return `Previous materializations for ${partition}`;\n      }\n    }\n    return `Previous materializations`;\n  };\n\n  return (\n    <>\n      <ButtonLink onClick={() => setOpen(true)}>{`View ${count} previous`}</ButtonLink>\n      <Dialog\n        isOpen={open}\n        canEscapeKeyClose\n        canOutsideClickClose\n        onClose={() => setOpen(false)}\n        style={{width: '80%', minWidth: '800px'}}\n        title={title()}\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <AssetMaterializationTable\n            hasLineage={hasLineage}\n            isPartitioned={isPartitioned}\n            materializations={predecessors.map((p) => ({latest: p}))}\n            shouldBucketPartitions={false}\n          />\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button intent=\"primary\" onClick={() => setOpen(false)}>\n              OK\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n","import {Colors} from '@blueprintjs/core';\nimport React from 'react';\n\nimport {AssetNumericHistoricalData} from './types';\n\nexport const Sparkline: React.FunctionComponent<{\n  data: AssetNumericHistoricalData[0];\n  width: number;\n  height: number;\n}> = ({data, width, height}) => {\n  const ref = React.createRef<HTMLCanvasElement>();\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const {width, height} = ref.current;\n    const ctx = ref.current.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    const margin = height * 0.15;\n    const yScale = (height - margin * 2) / (data.maxY - data.minY);\n    const xScale = width / (data.maxXNumeric - data.minXNumeric);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.resetTransform();\n    ctx.scale(1, -1);\n    ctx.translate(0, -height);\n\n    ctx.beginPath();\n    ctx.strokeStyle = Colors.BLUE3;\n    ctx.lineWidth = 3;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    let penUp = true;\n    for (let ii = 0; ii < data.values.length; ii++) {\n      const v = data.values[ii];\n      if (v.y === null) {\n        penUp = true;\n      } else {\n        const xPx = xScale * (v.xNumeric - data.minXNumeric);\n        const yPx = margin + 0.5 + Math.round(yScale * (v.y - data.minY));\n        if (penUp) {\n          ctx.moveTo(xPx - 2, yPx);\n          ctx.lineTo(xPx, yPx);\n          penUp = false;\n        } else {\n          ctx.lineTo(xPx, yPx);\n        }\n      }\n    }\n    ctx.stroke();\n  }, [ref, data]);\n\n  // Note: canvas `width` attribute is @2x the CSS width to force retina rendering on all displays\n  return (\n    <canvas\n      ref={ref}\n      width={width * 2}\n      height={height * 2}\n      style={{width: width, height: height}}\n    />\n  );\n};\n","import {Colors, Button} from '@blueprintjs/core';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {useViewport} from '../gantt/useViewport';\nimport {\n  GridColumn,\n  GridScrollContainer,\n  GridFloatingContainer,\n  LeftLabel,\n} from '../partitions/RunMatrixUtils';\nimport {MetadataEntry} from '../runs/MetadataEntry';\nimport {titleForRun} from '../runs/RunUtils';\nimport {FontFamily} from '../ui/styles';\n\nimport {AssetPredecessorLink} from './AssetMaterializationTable';\nimport {Sparkline} from './Sparkline';\nimport {AssetNumericHistoricalData} from './types';\nimport {\n  AssetQuery_assetOrError_Asset_assetMaterializations,\n  AssetQuery_assetOrError_Asset_assetMaterializations_materializationEvent_materialization_metadataEntries,\n} from './types/AssetQuery';\nimport {HistoricalMaterialization} from './useMaterializationBuckets';\n\nconst COL_WIDTH = 120;\n\nconst OVERSCROLL = 150;\n\nexport const LABEL_STEP_EXECUTION_TIME = 'Step Execution Time';\n\ninterface AssetMaterializationMatrixProps {\n  materializations: HistoricalMaterialization[];\n  isPartitioned: boolean;\n  xAxis: 'time' | 'partition';\n  xHover: number | string | null;\n  onHoverX: (x: number | string | null) => void;\n  graphDataByMetadataLabel: AssetNumericHistoricalData;\n  graphedLabels: string[];\n  setGraphedLabels: (labels: string[]) => void;\n}\n\nfunction xForAssetMaterialization(\n  am: AssetQuery_assetOrError_Asset_assetMaterializations,\n  xAxis: 'time' | 'partition',\n) {\n  return xAxis === 'time' ? Number(am.materializationEvent.timestamp) : am.partition;\n}\n\nconst EMPTY_CELL_DASH = <span style={{opacity: 0.3}}> - </span>;\n\nexport const AssetMaterializationMatrix: React.FC<AssetMaterializationMatrixProps> = ({\n  materializations,\n  isPartitioned,\n  xAxis,\n  xHover,\n  onHoverX,\n  graphDataByMetadataLabel,\n  graphedLabels,\n  setGraphedLabels,\n}) => {\n  const [hoveredLabel, setHoveredLabel] = React.useState<string>('');\n  const {viewport, containerProps, onMoveToViewport} = useViewport({\n    initialOffset: React.useCallback((el) => ({left: el.scrollWidth - el.clientWidth, top: 0}), []),\n  });\n\n  const anyPredecessors = materializations.some(({predecessors}) => !!predecessors?.length);\n\n  const visibleRangeStart = Math.max(0, Math.floor((viewport.left - OVERSCROLL) / COL_WIDTH));\n  const visibleCount = Math.ceil((viewport.width + OVERSCROLL * 2) / COL_WIDTH);\n  const visible = materializations.slice(visibleRangeStart, visibleRangeStart + visibleCount);\n\n  const lastXHover = React.useRef<string | number | null>(null);\n  React.useEffect(() => {\n    if (lastXHover.current === xHover) {\n      return;\n    }\n    if (xHover !== null) {\n      const idx = materializations.findIndex(\n        (m) => xForAssetMaterialization(m.latest, xAxis) === xHover,\n      );\n      if ((idx !== -1 && idx < visibleRangeStart) || idx > visibleRangeStart + visibleCount) {\n        onMoveToViewport({left: idx * COL_WIDTH - (viewport.width - COL_WIDTH) / 2, top: 0}, false);\n      }\n    }\n    lastXHover.current = xHover;\n  });\n\n  const metadataLabels = uniq(\n    flatMap(materializations, (m) =>\n      m.latest.materializationEvent.materialization.metadataEntries.map((e) => e.label),\n    ),\n  );\n\n  return (\n    <PartitionRunMatrixContainer>\n      <div style={{position: 'relative', display: 'flex', border: `1px solid ${Colors.GRAY5}`}}>\n        <GridFloatingContainer floating={true} style={{width: 300}}>\n          <GridColumn disabled style={{width: 300, overflow: 'hidden'}}>\n            {isPartitioned && <HeaderRowLabel>Partition</HeaderRowLabel>}\n            <HeaderRowLabel>Run</HeaderRowLabel>\n            <HeaderRowLabel>Timestamp</HeaderRowLabel>\n            {anyPredecessors ? <HeaderRowLabel>Previous materializations</HeaderRowLabel> : null}\n            {[...metadataLabels, LABEL_STEP_EXECUTION_TIME].map((label, idx) => (\n              <MetadataRowLabel\n                bordered={idx === 0 || label === LABEL_STEP_EXECUTION_TIME}\n                key={label}\n                label={label}\n                hovered={label === hoveredLabel}\n                graphData={graphDataByMetadataLabel[label]}\n                graphEnabled={graphedLabels.includes(label)}\n                onToggleGraphEnabled={() =>\n                  setGraphedLabels(\n                    graphedLabels.includes(label)\n                      ? graphedLabels.filter((l) => l !== label)\n                      : [...graphedLabels, label],\n                  )\n                }\n              />\n            ))}\n          </GridColumn>\n        </GridFloatingContainer>\n        <GridScrollContainer {...containerProps}>\n          <div\n            style={{\n              width: materializations.length * COL_WIDTH,\n              position: 'relative',\n              height: 80,\n            }}\n          >\n            {visible.map((historicalMaterialization, visibleIdx) => {\n              const {latest: assetMaterialization, predecessors} = historicalMaterialization;\n              const {materializationEvent, partition} = assetMaterialization;\n              const x = xForAssetMaterialization(assetMaterialization, xAxis);\n              const {startTime, endTime} = materializationEvent.stepStats || {};\n\n              const runId =\n                assetMaterialization.runOrError.__typename === 'PipelineRun'\n                  ? assetMaterialization.runOrError.runId\n                  : '';\n\n              return (\n                <GridColumn\n                  key={materializationEvent.timestamp}\n                  onMouseEnter={() => onHoverX(x)}\n                  hovered={xHover === x}\n                  style={{\n                    width: COL_WIDTH,\n                    position: 'absolute',\n                    zIndex: visible.length - visibleIdx,\n                    left: (visibleIdx + visibleRangeStart) * COL_WIDTH,\n                  }}\n                >\n                  {isPartitioned && <div className=\"cell\">{partition}</div>}\n                  <div className=\"cell\" style={{fontFamily: FontFamily.monospace}}>\n                    <Link\n                      style={{marginRight: 5}}\n                      to={`/instance/runs/${runId}?timestamp=${materializationEvent.timestamp}`}\n                    >\n                      {titleForRun({runId})}\n                    </Link>\n                  </div>\n                  <div\n                    className=\"cell\"\n                    style={anyPredecessors ? {} : {borderBottom: `1px solid ${Colors.LIGHT_GRAY1}`}}\n                  >\n                    <Timestamp timestamp={{ms: Number(materializationEvent.timestamp)}} />\n                  </div>\n                  {anyPredecessors ? (\n                    <div className=\"cell\" style={{borderBottom: `1px solid ${Colors.LIGHT_GRAY1}`}}>\n                      {predecessors?.length ? (\n                        <AssetPredecessorLink\n                          isPartitioned={isPartitioned}\n                          hasLineage={false}\n                          predecessors={predecessors}\n                        />\n                      ) : null}\n                    </div>\n                  ) : null}\n                  {metadataLabels.map((label) => {\n                    const entry = materializationEvent.materialization.metadataEntries.find(\n                      (m) => m.label === label,\n                    );\n                    return (\n                      <div\n                        key={label}\n                        className=\"cell\"\n                        style={{width: COL_WIDTH}}\n                        data-tooltip={plaintextFor(entry) || undefined}\n                        onMouseEnter={() => setHoveredLabel(label)}\n                        onMouseLeave={() => setHoveredLabel('')}\n                      >\n                        {entry ? <MetadataEntry entry={entry} /> : EMPTY_CELL_DASH}\n                      </div>\n                    );\n                  })}\n                  <div\n                    className=\"cell\"\n                    style={{borderTop: `1px solid ${Colors.LIGHT_GRAY1}`}}\n                    onMouseEnter={() => setHoveredLabel(LABEL_STEP_EXECUTION_TIME)}\n                    onMouseLeave={() => setHoveredLabel('')}\n                  >\n                    {endTime && startTime\n                      ? formatElapsedTime((endTime - startTime) * 1000)\n                      : EMPTY_CELL_DASH}\n                  </div>\n                </GridColumn>\n              );\n            })}\n          </div>\n        </GridScrollContainer>\n      </div>\n      {visible.length === 0 && <EmptyMessage>No data to display.</EmptyMessage>}\n    </PartitionRunMatrixContainer>\n  );\n};\n\nconst HeaderRowLabel = styled(LeftLabel)`\n  padding-left: 6px;\n  color: ${Colors.GRAY2};\n`;\n\nconst MetadataRowLabel: React.FunctionComponent<{\n  bordered?: boolean;\n  label: string;\n  hovered: boolean;\n  graphEnabled: boolean;\n  graphData?: AssetNumericHistoricalData[0];\n  onToggleGraphEnabled: () => void;\n}> = ({bordered, label, hovered, graphEnabled, graphData, onToggleGraphEnabled}) => (\n  <LeftLabel\n    key={label}\n    hovered={hovered}\n    data-tooltip={label}\n    style={{display: 'flex', borderTop: bordered ? `1px solid ${Colors.LIGHT_GRAY1}` : ''}}\n  >\n    <div style={{width: 149, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>\n      <Button\n        minimal\n        small\n        disabled={!graphData}\n        onClick={onToggleGraphEnabled}\n        icon={graphData ? (graphEnabled ? 'eye-open' : 'eye-off') : 'blank'}\n      />\n      {label}\n    </div>\n    {graphData && <Sparkline data={graphData} width={150} height={23} />}\n  </LeftLabel>\n);\n\nconst plaintextFor = (\n  entry:\n    | AssetQuery_assetOrError_Asset_assetMaterializations_materializationEvent_materialization_metadataEntries\n    | undefined,\n) => {\n  if (!entry) {\n    return '';\n  }\n  if (entry.__typename === 'EventFloatMetadataEntry') {\n    return entry.floatValue;\n  } else if (entry.__typename === 'EventIntMetadataEntry') {\n    if (entry.intValue !== null) {\n      return entry.intValue.toLocaleString();\n    }\n    return entry.intRepr;\n  } else if (entry.__typename === 'EventPathMetadataEntry') {\n    return entry.path;\n  } else if (entry.__typename === 'EventTextMetadataEntry') {\n    return entry.text;\n  } else if (entry.__typename === 'EventUrlMetadataEntry') {\n    return entry.url;\n  } else {\n    return '';\n  }\n};\n\nconst EmptyMessage = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n\nconst PartitionRunMatrixContainer = styled.div`\n  display: block;\n  margin-bottom: 20px;\n`;\n","import {Colors} from '@blueprintjs/core';\nimport {ActiveElement} from 'chart.js';\nimport * as React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nimport {Group} from '../ui/Group';\nimport {Subheading} from '../ui/Text';\n\nimport {AssetNumericHistoricalData} from './types';\n\nimport 'chartjs-adapter-date-fns';\n\nexport const AssetValueGraph: React.FC<{\n  label: string;\n  width: string;\n  data: AssetNumericHistoricalData[0];\n  xHover: string | number | null;\n  onHoverX: (value: string | number | null) => void;\n}> = (props) => {\n  // Note: To get partitions on the X axis, we pass the partition names in as the `labels`,\n  // and pass the partition index as the x value. This prevents ChartJS from auto-coercing\n  // ISO date partition names to dates and then re-formatting the labels away from 2020-01-01.\n  //\n  if (!props.data) {\n    return <span />;\n  }\n  let labels: React.ReactText[] | undefined = undefined;\n  let xHover = props.xHover;\n  if (props.data.xAxis === 'partition') {\n    labels = props.data.values.map((v) => v.x);\n    xHover = xHover ? labels.indexOf(xHover) : null;\n  }\n\n  const graphData = {\n    labels: labels,\n    datasets: [\n      {\n        label: props.label,\n        lineTension: 0,\n        data: props.data.values.map((v) => ({x: v.xNumeric, y: v.y})),\n        borderColor: Colors.BLUE3,\n        backgroundColor: 'rgba(0,0,0,0)',\n        pointBorderWidth: 2,\n        pointHoverBorderWidth: 2,\n        pointHoverRadius: 13,\n        pointHoverBorderColor: Colors.BLUE3,\n      },\n    ],\n  };\n\n  const options = {\n    animation: {\n      duration: 0,\n    },\n    elements: {\n      point: {\n        radius: ((context: any) =>\n          context.dataset.data[context.dataIndex].x === xHover ? 13 : 2) as any,\n      },\n    },\n    scales: {\n      x: {\n        id: 'x',\n        display: true,\n        ...(props.data.xAxis === 'time'\n          ? {\n              type: 'time',\n              title: {\n                display: true,\n                text: 'Timestamp',\n              },\n            }\n          : {\n              type: 'category',\n              title: {\n                display: true,\n                text: 'Partition',\n              },\n            }),\n      },\n      y: {id: 'y', display: true, title: {display: true, text: 'Value'}},\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    onHover(_: MouseEvent, activeElements: ActiveElement[]) {\n      if (activeElements.length === 0) {\n        props.onHoverX(null);\n        return;\n      }\n      const itemIdx = (activeElements[0] as any).index;\n      if (itemIdx === 0) {\n        // ChartJS errantly selects the first item when you're moving the mouse off the line\n        props.onHoverX(null);\n        return;\n      }\n      props.onHoverX(props.data.values[itemIdx].x);\n    },\n  };\n\n  return (\n    <div style={{marginBottom: 30, width: props.width}}>\n      <Group direction=\"column\" spacing={12}>\n        <Subheading>{props.label}</Subheading>\n        <Line type=\"line\" data={graphData} height={100} options={options} key={props.width} />\n      </Group>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport {AssetQuery_assetOrError_Asset_assetMaterializations as Materialization} from './types/AssetQuery';\n\nconst NO_PARTITION_KEY = '__NO_PARTITION__';\n\nexport type HistoricalMaterialization = {\n  latest: Materialization;\n  predecessors?: Materialization[];\n};\n\ntype Config = {\n  materializations: Materialization[];\n  isPartitioned: boolean;\n  shouldBucketPartitions: boolean;\n};\n\n/**\n * A hook that can bucket a list of materializations by partition, if any, with the `latest`\n * materialization separated from predecessor materializations.\n */\nexport const useMaterializationBuckets = (config: Config): HistoricalMaterialization[] => {\n  const {isPartitioned, materializations, shouldBucketPartitions} = config;\n  return React.useMemo(() => {\n    if (!isPartitioned || !shouldBucketPartitions) {\n      return materializations.map((materialization) => ({\n        latest: materialization,\n      }));\n    }\n\n    const buckets: {[key: string]: Materialization[]} = materializations.reduce(\n      (accum, materialization) => {\n        const partition = materialization.partition;\n        const key = partition || NO_PARTITION_KEY;\n        const materializationsForKey = accum[key] || [];\n        return {...accum, [key]: [...materializationsForKey, materialization]};\n      },\n      {},\n    );\n\n    const separate = (key: string) => {\n      const materializationsForKey = [...buckets[key]].sort(\n        (a, b) =>\n          Number(b.materializationEvent?.timestamp) - Number(a.materializationEvent?.timestamp),\n      );\n      const [latest, ...predecessors] = materializationsForKey;\n      return {latest, predecessors};\n    };\n\n    return Object.keys(buckets)\n      .sort()\n      .reverse()\n      .filter((key) => key !== NO_PARTITION_KEY)\n      .map(separate)\n      .concat(buckets.hasOwnProperty(NO_PARTITION_KEY) ? [separate(NO_PARTITION_KEY)] : []);\n  }, [isPartitioned, materializations, shouldBucketPartitions]);\n};\n","import {useQuery} from '@apollo/client';\nimport {Button, ButtonGroup, Colors, Tab, Tabs} from '@blueprintjs/core';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {Box} from '../ui/Box';\nimport {Spinner} from '../ui/Spinner';\nimport {Subheading} from '../ui/Text';\n\nimport {AssetMaterializationMatrix, LABEL_STEP_EXECUTION_TIME} from './AssetMaterializationMatrix';\nimport {AssetMaterializationTable} from './AssetMaterializationTable';\nimport {AssetValueGraph} from './AssetValueGraph';\nimport {ASSET_QUERY} from './queries';\nimport {AssetKey, AssetNumericHistoricalData} from './types';\nimport {\n  AssetQuery,\n  AssetQueryVariables,\n  AssetQuery_assetOrError_Asset_assetMaterializations,\n} from './types/AssetQuery';\nimport {HistoricalMaterialization, useMaterializationBuckets} from './useMaterializationBuckets';\n\ninterface Props {\n  assetKey: AssetKey;\n  asOf: string | null;\n  asSidebarSection?: boolean;\n}\n\nexport const AssetMaterializations: React.FC<Props> = ({assetKey, asOf, asSidebarSection}) => {\n  const before = React.useMemo(() => (asOf ? `${Number(asOf) + 1}` : ''), [asOf]);\n  const {data, loading} = useQuery<AssetQuery, AssetQueryVariables>(ASSET_QUERY, {\n    variables: {\n      assetKey: {path: assetKey.path},\n      limit: 200,\n      before,\n    },\n  });\n\n  const asset = data?.assetOrError.__typename === 'Asset' ? data?.assetOrError : null;\n  const assetMaterializations = asset?.assetMaterializations || [];\n\n  const [activeTab = 'graphs', setActiveTab] = useQueryPersistedState<'graphs' | 'list'>({\n    queryKey: 'tab',\n  });\n\n  const isPartitioned = assetMaterializations.some((m) => m.partition);\n  const [xAxis = isPartitioned ? 'partition' : 'time', setXAxis] = useQueryPersistedState<\n    'partition' | 'time'\n  >({\n    queryKey: 'axis',\n  });\n\n  const hasLineage = assetMaterializations.some(\n    (m) => m.materializationEvent.assetLineage.length > 0,\n  );\n\n  const bucketed = useMaterializationBuckets({\n    materializations: assetMaterializations,\n    isPartitioned,\n    shouldBucketPartitions: true,\n  });\n\n  const reversed = React.useMemo(() => [...bucketed].reverse(), [bucketed]);\n\n  const content = () => {\n    if (loading) {\n      return (\n        <Box padding={{vertical: 20}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      );\n    }\n\n    if (activeTab === 'list') {\n      return (\n        <AssetMaterializationTable\n          isPartitioned={isPartitioned}\n          hasLineage={hasLineage}\n          materializations={bucketed}\n        />\n      );\n    }\n\n    return (\n      <AssetMaterializationMatrixAndGraph\n        assetMaterializations={reversed}\n        isPartitioned={isPartitioned}\n        xAxis={xAxis}\n        asSidebarSection={asSidebarSection}\n      />\n    );\n  };\n\n  if (asSidebarSection) {\n    return content();\n  }\n\n  return (\n    <div>\n      <Box flex={{justifyContent: 'space-between', alignItems: 'flex-end'}}>\n        <Subheading>Materializations over Time</Subheading>\n        {isPartitioned ? (\n          <ButtonGroup>\n            <Button active={xAxis === 'partition'} onClick={() => setXAxis('partition')}>\n              By Partition\n            </Button>\n            <Button active={xAxis === 'time'} onClick={() => setXAxis('time')}>\n              By Timestamp\n            </Button>\n          </ButtonGroup>\n        ) : null}\n      </Box>\n      <Box margin={{vertical: 8}}>\n        <Tabs\n          large={false}\n          selectedTabId={activeTab}\n          onChange={(t) => setActiveTab(t as 'graphs' | 'list')}\n        >\n          <Tab id=\"graphs\" title=\"Graphs\" />\n          <Tab id=\"list\" title=\"List\" />\n        </Tabs>\n      </Box>\n      {content()}\n    </div>\n  );\n};\n\nconst AssetMaterializationMatrixAndGraph: React.FC<{\n  assetMaterializations: HistoricalMaterialization[];\n  isPartitioned: boolean;\n  xAxis: 'partition' | 'time';\n  asSidebarSection?: boolean;\n}> = (props) => {\n  const {assetMaterializations, isPartitioned, xAxis} = props;\n  const [xHover, setXHover] = React.useState<string | number | null>(null);\n  const latest = assetMaterializations.map((m) => m.latest);\n\n  const graphDataByMetadataLabel = extractNumericData(latest, xAxis);\n  const [graphedLabels, setGraphedLabels] = React.useState(() =>\n    Object.keys(graphDataByMetadataLabel).slice(0, 4),\n  );\n\n  return (\n    <>\n      {!props.asSidebarSection && (\n        <AssetMaterializationMatrix\n          isPartitioned={isPartitioned}\n          materializations={assetMaterializations}\n          xAxis={xAxis}\n          xHover={xHover}\n          onHoverX={(x) => x !== xHover && setXHover(x)}\n          graphDataByMetadataLabel={graphDataByMetadataLabel}\n          graphedLabels={graphedLabels}\n          setGraphedLabels={setGraphedLabels}\n        />\n      )}\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          flexDirection: props.asSidebarSection ? 'column' : 'row',\n          marginTop: props.asSidebarSection ? 0 : 30,\n        }}\n      >\n        {[...graphedLabels].sort().map((label) => (\n          <AssetValueGraph\n            key={label}\n            label={label}\n            width={graphedLabels.length === 1 || props.asSidebarSection ? '100%' : '48%'}\n            data={graphDataByMetadataLabel[label]}\n            xHover={xHover}\n            onHoverX={(x) => x !== xHover && setXHover(x)}\n          />\n        ))}\n      </div>\n      {xAxis === 'partition' && (\n        <div style={{color: Colors.GRAY3, fontSize: '0.85rem'}}>\n          When graphing values by partition, the highest data point for each materialized event\n          label is displayed.\n        </div>\n      )}\n    </>\n  );\n};\n\n/**\n * Helper function that iterates over the asset materializations and assembles time series data\n * and stats for all numeric metadata entries. This function makes the following guaruntees:\n *\n * - If a metadata entry is sparsely emitted, points are still included for missing x values\n *   with y = NaN. (For compatiblity with react-chartjs-2)\n * - If a metadata entry is generated many times for the same partition, and xAxis = partition,\n *   the MAX value emitted is used as the data point.\n *\n * Assumes that the data is pre-sorted in ascending partition order if using xAxis = partition.\n */\nconst extractNumericData = (\n  assetMaterializations: AssetQuery_assetOrError_Asset_assetMaterializations[],\n  xAxis: 'time' | 'partition',\n) => {\n  const series: AssetNumericHistoricalData = {};\n\n  // Build a set of the numeric metadata entry labels (note they may be sparsely emitted)\n  const numericMetadataLabels = uniq(\n    flatMap(assetMaterializations, (e) =>\n      e.materializationEvent.materialization.metadataEntries\n        .filter(\n          (k) =>\n            k.__typename === 'EventIntMetadataEntry' || k.__typename === 'EventFloatMetadataEntry',\n        )\n        .map((k) => k.label),\n    ),\n  );\n\n  const append = (label: string, {x, y}: {x: number | string; y: number}) => {\n    series[label] = series[label] || {minX: 0, maxX: 0, minY: 0, maxY: 0, values: [], xAxis};\n\n    if (xAxis === 'partition') {\n      // If the xAxis is partition keys, the graph may only contain one value for each partition.\n      // If the existing sample for the partition was null, replace it. Otherwise take the\n      // most recent value.\n      const existingForPartition = series[label].values.find((v) => v.x === x);\n      if (existingForPartition) {\n        if (!isNaN(y)) {\n          existingForPartition.y = y;\n        }\n        return;\n      }\n    }\n    series[label].values.push({\n      xNumeric: typeof x === 'number' ? x : series[label].values.length,\n      x,\n      y,\n    });\n  };\n\n  for (const {partition, materializationEvent} of assetMaterializations) {\n    const x = xAxis === 'partition' ? partition : Number(materializationEvent.timestamp);\n    if (x === null) {\n      // exclude materializations where partition = null from partitioned graphs\n      continue;\n    }\n\n    // Add an entry for every numeric metadata label\n    for (const label of numericMetadataLabels) {\n      const entry = materializationEvent.materialization.metadataEntries.find(\n        (l) => l.label === label,\n      );\n      if (!entry) {\n        append(label, {x, y: NaN});\n        continue;\n      }\n\n      let y = NaN;\n      if (entry.__typename === 'EventIntMetadataEntry') {\n        if (entry.intValue !== null) {\n          y = entry.intValue;\n        } else {\n          // will incur precision loss here\n          y = parseInt(entry.intRepr);\n        }\n      }\n      if (entry.__typename === 'EventFloatMetadataEntry' && entry.floatValue !== null) {\n        y = entry.floatValue;\n      }\n\n      append(label, {x, y});\n    }\n\n    // Add step execution time as a custom dataset\n    const {startTime, endTime} = materializationEvent.stepStats || {};\n    append(LABEL_STEP_EXECUTION_TIME, {x, y: endTime && startTime ? endTime - startTime : NaN});\n  }\n\n  for (const serie of Object.values(series)) {\n    const xs = serie.values.map((v) => v.xNumeric);\n    const ys = serie.values.map((v) => v.y).filter((v) => !isNaN(v));\n    serie.minXNumeric = Math.min(...xs);\n    serie.maxXNumeric = Math.max(...xs);\n    serie.minY = Math.min(...ys);\n    serie.maxY = Math.max(...ys);\n  }\n  return series;\n};\n","import {Button, Classes, Dialog} from '@blueprintjs/core';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\n\nexport class SidebarComponent extends React.Component<IPluginSidebarProps> {\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('show-kind-info', this.onClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('show-kind-info', this.onClick);\n  }\n\n  onClick = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  render() {\n    const metadata = this.props.definition.metadata.sort((a, b) => a.key.localeCompare(b.key));\n\n    if (metadata.length === 0) {\n      return <span />;\n    }\n\n    return (\n      <div>\n        <Button icon=\"duplicate\" onClick={this.onClick}>\n          View Metadata\n        </Button>\n        <Dialog\n          title={`Metadata: ${this.props.definition.name}`}\n          isOpen={this.state.open}\n          onClose={() =>\n            this.setState({\n              open: false,\n            })\n          }\n        >\n          <div\n            className={Classes.DIALOG_BODY}\n            style={{\n              maxHeight: 400,\n              overflow: 'scroll',\n            }}\n          >\n            <table className=\"bp3-html-table bp3-html-table-striped\" style={{width: '100%'}}>\n              <thead>\n                <tr>\n                  <th>Key</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {metadata.map(({key, value}) => (\n                  <tr key={key}>\n                    <td>{startCase(key)}</td>\n                    <td>\n                      <code style={{whiteSpace: 'pre-wrap'}}>{value}</code>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button onClick={() => this.setState({open: false})}>Close</Button>\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import {Button, Classes, Dialog} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\n\nexport class SidebarComponent extends React.Component<IPluginSidebarProps> {\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('show-kind-info', this.onClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('show-kind-info', this.onClick);\n  }\n\n  onClick = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  render() {\n    const metadata = this.props.definition.metadata;\n    const notebookPath = metadata.find((m) => m.key === 'notebook_path');\n    const repoLocName = this.props.repoAddress?.location;\n\n    if (!notebookPath) {\n      return <span />;\n    }\n\n    return (\n      <div>\n        <Button icon=\"duplicate\" onClick={this.onClick}>\n          View Notebook\n        </Button>\n        <Dialog\n          icon=\"info-sign\"\n          onClose={() =>\n            this.setState({\n              open: false,\n            })\n          }\n          style={{width: '80vw', maxWidth: 900, height: 615}}\n          title={notebookPath.value.split('/').pop()}\n          usePortal={true}\n          isOpen={this.state.open}\n        >\n          <div className={Classes.DIALOG_BODY} style={{margin: 0}}>\n            <iframe\n              title={notebookPath.value}\n              src={`${this.props.rootServerURI}/dagit/notebook?path=${encodeURIComponent(\n                notebookPath.value,\n              )}&repoLocName=${repoLocName}`}\n              sandbox=\"\"\n              style={{border: 0, background: 'white'}}\n              seamless={true}\n              width=\"100%\"\n              height={500}\n            />\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button onClick={() => this.setState({open: false})}>Close</Button>\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import {Button, Classes, Dialog} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\nimport {HighlightedCodeBlock} from '../ui/HighlightedCodeBlock';\n\nexport class SidebarComponent extends React.Component<IPluginSidebarProps> {\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('show-kind-info', this.onClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('show-kind-info', this.onClick);\n  }\n\n  onClick = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  render() {\n    const metadata = this.props.definition.metadata;\n    const sql = metadata.find((m) => m.key === 'sql');\n    if (!sql) {\n      return <span />;\n    }\n\n    return (\n      <div>\n        <Button icon=\"duplicate\" onClick={this.onClick}>\n          View SQL\n        </Button>\n        <Dialog\n          icon=\"info-sign\"\n          onClose={() =>\n            this.setState({\n              open: false,\n            })\n          }\n          style={{width: '80vw', maxWidth: 900, height: 615}}\n          title={`SQL: ${this.props.definition.name}`}\n          usePortal={true}\n          isOpen={this.state.open}\n        >\n          <div className={Classes.DIALOG_BODY} style={{margin: 0}}>\n            <HighlightedCodeBlock\n              language=\"sql\"\n              value={sql.value}\n              style={{\n                height: 510,\n                padding: 10,\n                overflow: 'scroll',\n                fontSize: '0.9em',\n              }}\n            />\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button onClick={() => this.setState({open: false})}>Close</Button>\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import {SidebarSolidDefinitionFragment} from '../pipelines/types/SidebarSolidDefinitionFragment';\nimport * as generic from '../plugins/generic';\nimport * as ipynb from '../plugins/ipynb';\nimport * as sql from '../plugins/sql';\nimport {RepoAddress} from '../workspace/types';\n\nconst plugins = {\n  sql: sql,\n  ipynb: ipynb,\n  snowflake: sql,\n};\n\nexport interface IPluginSidebarProps {\n  definition: SidebarSolidDefinitionFragment;\n  rootServerURI: string;\n  repoAddress?: RepoAddress;\n}\n\ninterface IPluginInterface {\n  SidebarComponent: React.ComponentClass<IPluginSidebarProps> | React.SFC<IPluginSidebarProps>;\n}\n\nexport function pluginForMetadata(\n  metadata: {key: string; value: string}[],\n): IPluginInterface | null {\n  const kindMetadata = metadata.find((m) => m.key === 'kind');\n  if (!kindMetadata) {\n    return null;\n  }\n  return plugins[kindMetadata.value] || generic;\n}\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {useFeatureFlags} from '../app/Flags';\nimport {breakOnUnderscores} from '../app/Util';\nimport {pluginForMetadata} from '../plugins';\nimport {SolidTypeSignature, SOLID_TYPE_SIGNATURE_FRAGMENT} from '../solids/SolidTypeSignature';\nimport {ConfigTypeSchema, CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from '../typeexplorer/TypeWithTooltip';\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {IconWIP} from '../ui/Icon';\nimport {RepoAddress} from '../workspace/types';\n\nimport {Description} from './Description';\nimport {\n  SectionItemContainer,\n  SectionSmallHeader,\n  SidebarSection,\n  SidebarSubhead,\n  SidebarTitle,\n} from './SidebarComponents';\nimport {\n  Invocation,\n  ResourceContainer,\n  ResourceHeader,\n  ShowAllButton,\n  SidebarSolidInvocationInfo,\n  SolidLinks,\n  SolidMappingTable,\n  TypeWrapper,\n} from './SidebarSolidHelpers';\nimport {SidebarSolidDefinitionFragment} from './types/SidebarSolidDefinitionFragment';\n\ninterface SidebarSolidDefinitionProps {\n  definition: SidebarSolidDefinitionFragment;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  showingSubsolids: boolean;\n  onClickInvocation: (arg: SidebarSolidInvocationInfo) => void;\n  repoAddress?: RepoAddress;\n}\n\nconst DEFAULT_INVOCATIONS_SHOWN = 20;\n\nexport const SidebarSolidDefinition: React.FC<SidebarSolidDefinitionProps> = (props) => {\n  const {definition, getInvocations, showingSubsolids, onClickInvocation, repoAddress} = props;\n  const {flagPipelineModeTuples} = useFeatureFlags();\n  const Plugin = pluginForMetadata(definition.metadata);\n  const isComposite = definition.__typename === 'CompositeSolidDefinition';\n  const configField = definition.__typename === 'SolidDefinition' ? definition.configField : null;\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const inputMappings: SolidMappingTable = {};\n  const outputMappings: SolidMappingTable = {};\n\n  if (showingSubsolids && definition.__typename === 'CompositeSolidDefinition') {\n    definition.inputMappings.forEach(\n      (m) =>\n        (inputMappings[m.definition.name] = [\n          ...(inputMappings[m.definition.name] || []),\n          m.mappedInput,\n        ]),\n    );\n    definition.outputMappings.forEach(\n      (m) =>\n        (outputMappings[m.definition.name] = [\n          ...(outputMappings[m.definition.name] || []),\n          m.mappedOutput,\n        ]),\n    );\n  }\n\n  let requiredResources = null;\n  if (definition.__typename === 'SolidDefinition') {\n    requiredResources = definition.requiredResources;\n  }\n\n  const subheadString = React.useMemo(() => {\n    if (flagPipelineModeTuples) {\n      return isComposite ? 'Graph' : 'Op';\n    }\n    return isComposite ? 'Composite solid' : 'Solid';\n  }, [flagPipelineModeTuples, isComposite]);\n\n  return (\n    <div>\n      <SidebarSection title={'Definition'}>\n        <Box padding={12}>\n          <SidebarSubhead>{subheadString}</SidebarSubhead>\n          <SidebarTitle>{breakOnUnderscores(definition.name)}</SidebarTitle>\n          <SolidTypeSignature definition={definition} />\n        </Box>\n      </SidebarSection>\n      {definition.description && (\n        <SidebarSection title={'Description'}>\n          <Box padding={12}>\n            <Description description={definition.description} />\n          </Box>\n        </SidebarSection>\n      )}\n      {definition.metadata && Plugin && Plugin.SidebarComponent && (\n        <SidebarSection title={'Metadata'}>\n          <Box padding={12}>\n            <Plugin.SidebarComponent\n              definition={definition}\n              rootServerURI={rootServerURI}\n              repoAddress={repoAddress}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {configField && (\n        <SidebarSection title={'Config'}>\n          <Box padding={12}>\n            <ConfigTypeSchema\n              type={configField.configType}\n              typesInScope={configField.configType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {requiredResources && (\n        <SidebarSection title={'Required Resources'}>\n          <Box padding={12}>\n            {[...requiredResources].sort().map((requirement) => (\n              <ResourceContainer key={requirement.resourceKey}>\n                <IconWIP name=\"layers\" color={ColorsWIP.Gray700} />\n                <ResourceHeader>{requirement.resourceKey}</ResourceHeader>\n              </ResourceContainer>\n            ))}\n          </Box>\n        </SidebarSection>\n      )}\n      <SidebarSection title={'Inputs'}>\n        <Box padding={12}>\n          {definition.inputDefinitions.map((inputDef, idx) => (\n            <SectionItemContainer key={idx}>\n              <SectionSmallHeader>{breakOnUnderscores(inputDef.name)}</SectionSmallHeader>\n              <TypeWrapper>\n                <TypeWithTooltip type={inputDef.type} />\n              </TypeWrapper>\n              <Description description={inputDef.description} />\n              <SolidLinks title=\"Mapped to:\" items={inputMappings[inputDef.name]} />\n            </SectionItemContainer>\n          ))}\n        </Box>\n      </SidebarSection>\n      <SidebarSection title={'Outputs'}>\n        <Box padding={12}>\n          {definition.outputDefinitions.map((outputDef, idx) => (\n            <SectionItemContainer key={idx}>\n              <SectionSmallHeader>\n                {breakOnUnderscores(outputDef.name)}\n                {outputDef.isDynamic && <span title=\"DynamicOutput\">[*]</span>}\n              </SectionSmallHeader>\n              <TypeWrapper>\n                <TypeWithTooltip type={outputDef.type} />\n              </TypeWrapper>\n              <SolidLinks title=\"Mapped from:\" items={outputMappings[outputDef.name]} />\n              <Description description={outputDef.description} />\n            </SectionItemContainer>\n          ))}\n        </Box>\n      </SidebarSection>\n      {getInvocations && (\n        <SidebarSection title={'All Invocations'}>\n          <Box padding={12}>\n            <InvocationList\n              invocations={getInvocations(definition.name)}\n              onClickInvocation={onClickInvocation}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const SIDEBAR_SOLID_DEFINITION_FRAGMENT = gql`\n  fragment SidebarSolidDefinitionFragment on ISolidDefinition {\n    ...SolidTypeSignatureFragment\n    __typename\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    outputDefinitions {\n      name\n      description\n      isDynamic\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    inputDefinitions {\n      name\n      description\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    ... on SolidDefinition {\n      requiredResources {\n        resourceKey\n      }\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n    ... on CompositeSolidDefinition {\n      inputMappings {\n        definition {\n          name\n        }\n        mappedInput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n      outputMappings {\n        definition {\n          name\n        }\n        mappedOutput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n  ${SOLID_TYPE_SIGNATURE_FRAGMENT}\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n\nconst InvocationList: React.FC<{\n  invocations: SidebarSolidInvocationInfo[];\n  onClickInvocation: (arg: SidebarSolidInvocationInfo) => void;\n}> = ({invocations, onClickInvocation}) => {\n  const [showAll, setShowAll] = React.useState<boolean>(false);\n  const displayed = showAll ? invocations : invocations.slice(0, DEFAULT_INVOCATIONS_SHOWN);\n\n  return (\n    <>\n      {displayed.map((invocation, idx) => (\n        <Invocation\n          key={idx}\n          invocation={invocation}\n          onClick={() => onClickInvocation(invocation)}\n        />\n      ))}\n      {displayed.length < invocations.length && (\n        <ShowAllButton onClick={() => setShowAll(true)}>\n          {`Show ${invocations.length - displayed.length} More Invocations`}\n        </ShowAllButton>\n      )}\n    </>\n  );\n};\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nconst OverflowFade = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  user-select: none;\n  pointer-events: none;\n  background: linear-gradient(to bottom, rgba(245, 248, 250, 0) 0%, rgba(245, 248, 250, 255) 100%);\n`;\n\nconst OverflowButtonContainer = styled.div`\n  position: absolute;\n  bottom: 6px;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst OverflowButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  font-size: 12px;\n  font-weight: 500;\n  background: rgba(0, 0, 0, 0.4);\n  border-radius: 4px;\n  padding: 12px 24px;\n  color: ${Colors.WHITE};\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:active {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport class CellTruncationProvider extends React.Component<\n  {\n    style: React.CSSProperties;\n    onExpand?: () => void;\n    forceExpandability?: boolean;\n  },\n  {isOverflowing: boolean}\n> {\n  state = {\n    isOverflowing: false,\n  };\n\n  private contentContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidMount() {\n    this.detectOverflow();\n  }\n\n  componentDidUpdate() {\n    this.detectOverflow();\n  }\n\n  detectOverflow() {\n    const child =\n      this.contentContainerRef.current && this.contentContainerRef.current.firstElementChild;\n\n    if (!child) {\n      return;\n    }\n\n    const isOverflowing = child.scrollHeight > this.props.style.height!;\n    if (isOverflowing !== this.state.isOverflowing) {\n      this.setState({isOverflowing});\n    }\n  }\n\n  defaultExpand() {\n    const message =\n      this.contentContainerRef.current && this.contentContainerRef.current.textContent;\n    message &&\n      showCustomAlert({\n        body: <div style={{whiteSpace: 'pre-wrap'}}>{message}</div>,\n      });\n  }\n\n  onView = () => {\n    const {onExpand} = this.props;\n    onExpand ? onExpand() : this.defaultExpand();\n  };\n\n  render() {\n    const style = {...this.props.style, overflow: 'hidden'};\n\n    return (\n      <div style={style}>\n        <div ref={this.contentContainerRef}>{this.props.children}</div>\n        {(this.state.isOverflowing || this.props.forceExpandability) && (\n          <>\n            <OverflowFade />\n            <OverflowButtonContainer>\n              <OverflowButton onClick={this.onView}>View full message</OverflowButton>\n            </OverflowButtonContainer>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import {Colors, Intent, Tag} from '@blueprintjs/core';\nimport qs from 'qs';\nimport querystring from 'query-string';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {assertUnreachable} from '../app/Util';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment';\nimport {ErrorSource} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\n\nimport {EventTypeColumn} from './LogsRowComponents';\nimport {LogRowStructuredContentTable, MetadataEntries, MetadataEntryLink} from './MetadataEntry';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {\n  LogsRowStructuredFragment,\n  LogsRowStructuredFragment_StepMaterializationEvent_materialization,\n} from './types/LogsRowStructuredFragment';\nimport {MetadataEntryFragment} from './types/MetadataEntryFragment';\n\ninterface IStructuredContentProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n}\n\nexport const LogsRowStructuredContent: React.FC<IStructuredContentProps> = ({node, metadata}) => {\n  const location = useLocation();\n  const eventType = node.eventType as string;\n  switch (node.__typename) {\n    case 'ExecutionStepFailureEvent':\n      return (\n        <FailureContent\n          eventType={eventType}\n          error={node.error}\n          metadataEntries={node?.failureMetadata?.metadataEntries}\n          errorSource={node.errorSource}\n          message={node.error ? undefined : node.message}\n        />\n      );\n\n    case 'ExecutionStepUpForRetryEvent':\n      return <DefaultContent eventType={eventType} message={node.message} eventIntent=\"warning\" />;\n\n    case 'ExecutionStepStartEvent':\n      if (!node.stepKey || metadata.logCaptureSteps) {\n        return <DefaultContent message={node.message} eventType={eventType} />;\n      } else {\n        const currentQuery = querystring.parse(location.search);\n        const updatedQuery = {\n          ...currentQuery,\n          logType: 'stdout',\n          logs: `query:${node.stepKey}`,\n          selection: node.stepKey,\n        };\n        const href = `${location.pathname}?${querystring.stringify(updatedQuery)}`;\n        return (\n          <DefaultContent message={node.message} eventType={eventType}>\n            <LogRowStructuredContentTable\n              rows={[\n                {\n                  label: 'step_logs',\n                  item: (\n                    <Link to={href} style={{color: 'inherit'}}>\n                      View Raw Step Output\n                    </Link>\n                  ),\n                },\n              ]}\n            />\n          </DefaultContent>\n        );\n      }\n    case 'ExecutionStepSkippedEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(173, 185, 152, 0.3)\"\n        />\n      );\n\n    case 'ExecutionStepRestartEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n\n    case 'ExecutionStepSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'ExecutionStepInputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.typeCheck.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'ExecutionStepOutputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <>\n            <MetadataEntries entries={node.typeCheck.metadataEntries} />\n            <MetadataEntries entries={node.metadataEntries} />\n          </>\n        </DefaultContent>\n      );\n    case 'StepExpectationResultEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventIntent={node.expectationResult.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.expectationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'StepMaterializationEvent':\n      return (\n        <MaterializationContent\n          message={node.message}\n          materialization={node.materialization}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'ObjectStoreOperationEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.operationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HandledOutputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LoadedInputEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'HookCompletedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookSkippedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookErroredEvent':\n      return <FailureContent eventType={eventType} error={node.error} />;\n    case 'AlertStartEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertSuccessEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'PipelineFailureEvent':\n      if (node.pipelineFailureError) {\n        return (\n          <FailureContent\n            message={node.message}\n            error={node.pipelineFailureError}\n            eventType={eventType}\n          />\n        );\n      }\n\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"danger\" />;\n    case 'PipelineSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n\n    case 'PipelineStartEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'PipelineEnqueuedEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'PipelineDequeuedEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'PipelineStartingEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'PipelineCancelingEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'PipelineCanceledEvent':\n      return <FailureContent message={node.message} eventType={eventType} />;\n    case 'EngineEvent':\n      if (node.engineError) {\n        return (\n          <FailureContent message={node.message} error={node.engineError} eventType={eventType} />\n        );\n      }\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(27,164,206,0.2)\"\n        >\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LogMessageEvent':\n      return <DefaultContent message={node.message} />;\n    case 'LogsCapturedEvent':\n      const currentQuery = querystring.parse(location.search);\n      const updatedQuery = {...currentQuery, logType: 'stdout', logKey: node.stepKey};\n      const rawLogsUrl = `${location.pathname}?${querystring.stringify(updatedQuery)}`;\n      const rawLogsLink = (\n        <Link to={rawLogsUrl} style={{color: 'inherit'}}>\n          View stdout / stderr\n        </Link>\n      );\n      const rows = node.stepKey\n        ? [\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ]\n        : [\n            {\n              label: 'step_keys',\n              item: <>{JSON.stringify(node.stepKeys)}</>,\n            },\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ];\n      return (\n        <DefaultContent eventType={eventType} message={node.message}>\n          <LogRowStructuredContentTable rows={rows} />\n        </DefaultContent>\n      );\n    default:\n      // This allows us to check that the switch is exhaustive because the union type should\n      // have been narrowed following each successive case to `never` at this point.\n      return assertUnreachable(node);\n  }\n};\n\n// Structured Content Renderers\n\nconst DefaultContent: React.FunctionComponent<{\n  message: string;\n  eventType?: string;\n  eventColor?: string;\n  eventIntent?: Intent;\n  metadataEntries?: MetadataEntryFragment[];\n  children?: React.ReactElement;\n}> = ({message, eventType, eventColor, eventIntent, children}) => {\n  return (\n    <>\n      <EventTypeColumn>\n        {eventType && (\n          <Tag\n            minimal={true}\n            intent={eventIntent}\n            style={\n              eventColor\n                ? {\n                    fontSize: '0.9em',\n                    color: 'black',\n                    background: eventColor,\n                  }\n                : {\n                    fontSize: '0.9em',\n                  }\n            }\n          >\n            {eventType}\n          </Tag>\n        )}\n      </EventTypeColumn>\n      <Box padding={{left: 4}} style={{flex: 1}}>\n        {message}\n        {children}\n      </Box>\n    </>\n  );\n};\n\nconst FailureContent: React.FunctionComponent<{\n  message?: string;\n  eventType: string;\n  error?: PythonErrorFragment | null;\n  errorSource?: ErrorSource | null;\n  metadataEntries?: MetadataEntryFragment[];\n}> = ({message, error, errorSource, eventType, metadataEntries}) => {\n  let contextMessage = null;\n  let errorMessage = null;\n  let errorStack = null;\n  let errorCause = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    errorMessage = <span style={{color: Colors.RED3}}>{`${error.message}`}</span>;\n\n    // omit the outer stack for user code errors with a cause\n    // as the outer stack is just framework code\n    if (!(errorSource === ErrorSource.USER_CODE_ERROR && error.cause)) {\n      errorStack = <span style={{color: Colors.RED3}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    }\n\n    if (error.cause) {\n      errorCause = (\n        <>\n          {`The above exception was caused by the following exception:\\n`}\n          <span style={{color: Colors.RED3}}>{`${error.cause.message}`}</span>\n          <span style={{color: Colors.RED3}}>{`\\nStack Trace:\\n${error.cause.stack}`}</span>\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal={true} intent=\"danger\" style={{fontSize: '0.9em'}}>\n          {eventType}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{left: 4}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        <MetadataEntries entries={metadataEntries} />\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst MaterializationContent: React.FC<{\n  message: string;\n  materialization: LogsRowStructuredFragment_StepMaterializationEvent_materialization;\n  eventType: string;\n  timestamp: string;\n}> = ({message, materialization, eventType, timestamp}) => {\n  if (!materialization.assetKey) {\n    return (\n      <DefaultContent message={message} eventType={eventType}>\n        <MetadataEntries entries={materialization.metadataEntries} />\n      </DefaultContent>\n    );\n  }\n\n  const asOf = qs.stringify({asOf: timestamp});\n  const to = `/instance/assets/${materialization.assetKey.path\n    .map(encodeURIComponent)\n    .join('/')}?${asOf}`;\n\n  const assetDashboardLink = (\n    <span style={{marginLeft: 10}}>\n      [<MetadataEntryLink to={to}>View Asset</MetadataEntryLink>]\n    </span>\n  );\n\n  return (\n    <DefaultContent message={message} eventType={eventType}>\n      <>\n        <LogRowStructuredContentTable\n          rows={[\n            {\n              label: 'asset_key',\n              item: (\n                <>\n                  {materialization.assetKey.path.join(' > ')}\n                  {assetDashboardLink}\n                </>\n              ),\n            },\n          ]}\n          styles={{paddingBottom: 0}}\n        />\n        <MetadataEntries entries={materialization.metadataEntries} />\n      </>\n    </DefaultContent>\n  );\n};\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {setHighlightedGanttChartTime} from '../gantt/GanttChart';\nimport {LogLevel} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\n\nimport {CellTruncationProvider} from './CellTruncationProvider';\nimport {\n  EventTypeColumn,\n  Row,\n  SolidColumn,\n  StructuredContent,\n  TimestampColumn,\n} from './LogsRowComponents';\nimport {LogsRowStructuredContent} from './LogsRowStructuredContent';\nimport {METADATA_ENTRY_FRAGMENT} from './MetadataEntry';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {LogsRowStructuredFragment} from './types/LogsRowStructuredFragment';\nimport {LogsRowUnstructuredFragment} from './types/LogsRowUnstructuredFragment';\n\ninterface StructuredProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\ninterface StructuredState {\n  expanded: boolean;\n}\n\nexport class Structured extends React.Component<StructuredProps, StructuredState> {\n  onExpand = () => {\n    const {node, metadata} = this.props;\n\n    if (node.__typename === 'ExecutionStepFailureEvent') {\n      showCustomAlert({\n        title: 'Error',\n        body: (\n          <PythonErrorInfo\n            error={node.error ? node.error : node}\n            failureMetadata={node.failureMetadata}\n            errorSource={node.errorSource}\n          />\n        ),\n      });\n    } else if (node.__typename === 'HookErroredEvent') {\n      showCustomAlert({\n        title: 'Error',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else if (node.__typename === 'EngineEvent' && node.engineError) {\n      showCustomAlert({\n        title: 'Error',\n        body: <PythonErrorInfo error={node.engineError} />,\n      });\n    } else if (node.__typename === 'PipelineFailureEvent' && node.pipelineFailureError) {\n      showCustomAlert({\n        title: 'Error',\n        body: (\n          <PythonErrorInfo error={node.pipelineFailureError ? node.pipelineFailureError : node} />\n        ),\n      });\n    } else {\n      showCustomAlert({\n        title: (node.stepKey && node.stepKey) || 'Info',\n        body: (\n          <StructuredContent>\n            <LogsRowStructuredContent node={node} metadata={metadata} />\n          </StructuredContent>\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <StructuredMemoizedContent\n          node={this.props.node}\n          metadata={this.props.metadata}\n          highlighted={this.props.highlighted}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_STRUCTURED_FRAGMENT = gql`\n  fragment LogsRowStructuredFragment on PipelineRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      eventType\n      timestamp\n      level\n      stepKey\n    }\n    ... on StepMaterializationEvent {\n      materialization {\n        assetKey {\n          path\n        }\n        label\n        description\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on PipelineFailureEvent {\n      pipelineFailureError: error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on ExecutionStepFailureEvent {\n      error {\n        ...PythonErrorFragment\n      }\n      errorSource\n      failureMetadata {\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepInputEvent {\n      inputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepOutputEvent {\n      outputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n    ... on StepExpectationResultEvent {\n      expectationResult {\n        success\n        label\n        description\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on HandledOutputEvent {\n      outputName\n      managerKey\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n    ... on LoadedInputEvent {\n      inputName\n      managerKey\n      upstreamOutputName\n      upstreamStepKey\n    }\n    ... on EngineEvent {\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n      engineError: error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on HookErroredEvent {\n      error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on LogsCapturedEvent {\n      logKey\n      stepKeys\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst StructuredMemoizedContent: React.FC<{\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, metadata, highlighted}) => (\n  <Row\n    level={LogLevel.INFO}\n    onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n    onMouseLeave={() => setHighlightedGanttChartTime(null)}\n    highlighted={highlighted}\n  >\n    <SolidColumn stepKey={'stepKey' in node && node.stepKey} />\n    <StructuredContent>\n      <LogsRowStructuredContent node={node} metadata={metadata} />\n    </StructuredContent>\n    <TimestampColumn time={'timestamp' in node ? node.timestamp : null} />\n  </Row>\n));\n\nStructuredMemoizedContent.displayName = 'StructuredMemoizedContent';\n\ninterface UnstructuredProps {\n  node: LogsRowUnstructuredFragment;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\nexport class Unstructured extends React.Component<UnstructuredProps> {\n  onExpand = () => {\n    showCustomAlert({\n      title: 'Log',\n      body: <div style={{whiteSpace: 'pre-wrap'}}>{this.props.node.message}</div>,\n    });\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <UnstructuredMemoizedContent node={this.props.node} highlighted={this.props.highlighted} />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_UNSTRUCTURED_FRAGMENT = gql`\n  fragment LogsRowUnstructuredFragment on PipelineRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n  }\n`;\n\nconst UnstructuredMemoizedContent: React.FC<{\n  node: LogsRowUnstructuredFragment;\n  highlighted: boolean;\n}> = React.memo(({node, highlighted}) => (\n  <Row\n    level={node.level}\n    onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n    onMouseLeave={() => setHighlightedGanttChartTime(null)}\n    highlighted={highlighted}\n  >\n    <SolidColumn stepKey={node.stepKey} />\n    <EventTypeColumn>{node.level}</EventTypeColumn>\n    <Box padding={{left: 4}} style={{flex: 1}}>\n      {node.message}\n    </Box>\n    <TimestampColumn time={node.timestamp} />\n  </Row>\n));\n\nUnstructuredMemoizedContent.displayName = 'UnstructuredMemoizedContent';\n","import {gql} from '@apollo/client';\nimport {Colors, NonIdealState} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {CellMeasurer, CellMeasurerCache, List, ListRowProps, ScrollParams} from 'react-virtualized';\nimport styled from 'styled-components/macro';\n\nimport {Spinner} from '../ui/Spinner';\n\nimport {LogFilter, LogsProviderLogs} from './LogsProvider';\nimport {\n  LOGS_ROW_STRUCTURED_FRAGMENT,\n  LOGS_ROW_UNSTRUCTURED_FRAGMENT,\n  Structured,\n  Unstructured,\n} from './LogsRow';\nimport {ColumnWidthsProvider, Headers} from './LogsScrollingTableHeader';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {RunPipelineRunEventFragment} from './types/RunPipelineRunEventFragment';\n\nconst LOGS_PADDING_BOTTOM = 50;\n\ninterface ILogsScrollingTableProps {\n  logs: LogsProviderLogs;\n  filter: LogFilter;\n  filterStepKeys: string[];\n\n  // We use this string to know whether the changes to `nodes` require us to\n  // re-layout the entire table. Appending new rows can be done very fast, but\n  // removing some rows requires the whole list be \"reflowed\" again. Checking\n  // `nodes` for equality doesn't let us optimize for the append- case.\n  filterKey: string;\n  metadata: IRunMetadataDict;\n}\n\ninterface ILogsScrollingTableSizedProps {\n  width: number;\n  height: number;\n\n  filteredNodes: (RunPipelineRunEventFragment & {clientsideKey: string})[];\n  textMatchNodes: (RunPipelineRunEventFragment & {clientsideKey: string})[];\n\n  filterKey: string;\n  loading: boolean;\n  focusedTime: number;\n  metadata: IRunMetadataDict;\n}\n\nfunction filterLogs(logs: LogsProviderLogs, filter: LogFilter, filterStepKeys: string[]) {\n  const filteredNodes = logs.allNodes.filter((node) => {\n    const l = node.__typename === 'LogMessageEvent' ? node.level : 'EVENT';\n    if (!filter.levels[l]) {\n      return false;\n    }\n    if (filter.sinceTime && Number(node.timestamp) < filter.sinceTime) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasTextFilter = !!(filter.logQuery.length && filter.logQuery[0].value !== '');\n\n  const textMatchNodes = hasTextFilter\n    ? filteredNodes.filter((node) => {\n        return (\n          filter.logQuery.length > 0 &&\n          filter.logQuery.every((f) => {\n            if (f.token === 'query') {\n              return node.stepKey && filterStepKeys.includes(node.stepKey);\n            }\n            if (f.token === 'step') {\n              return node.stepKey && node.stepKey === f.value;\n            }\n            if (f.token === 'type') {\n              return node.eventType === f.value;\n            }\n            return node.message.toLowerCase().includes(f.value.toLowerCase());\n          })\n        );\n      })\n    : [];\n\n  return {\n    filteredNodes: hasTextFilter && filter.hideNonMatches ? textMatchNodes : filteredNodes,\n    textMatchNodes: textMatchNodes,\n  };\n}\n\nexport const LogsScrollingTable: React.FC<ILogsScrollingTableProps> = (props) => {\n  const {filterKey, filterStepKeys, metadata, filter, logs} = props;\n  const table = React.useRef<LogsScrollingTableSized>(null);\n\n  return (\n    <ColumnWidthsProvider onWidthsChanged={() => table.current && table.current.didResize()}>\n      <Headers />\n      <div style={{flex: 1, minHeight: 0}}>\n        <AutoSizer>\n          {({width, height}) => (\n            <LogsScrollingTableSized\n              width={width}\n              height={height}\n              ref={table}\n              filterKey={filterKey}\n              loading={logs.loading}\n              metadata={metadata}\n              focusedTime={filter.focusedTime}\n              {...filterLogs(logs, filter, filterStepKeys)}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </ColumnWidthsProvider>\n  );\n};\n\nexport const LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT = gql`\n  fragment LogsScrollingTableMessageFragment on PipelineRunEvent {\n    __typename\n    ...LogsRowStructuredFragment\n    ...LogsRowUnstructuredFragment\n  }\n\n  ${LOGS_ROW_STRUCTURED_FRAGMENT}\n  ${LOGS_ROW_UNSTRUCTURED_FRAGMENT}\n`;\n\nclass LogsScrollingTableSized extends React.Component<ILogsScrollingTableSizedProps> {\n  list = React.createRef<List>();\n\n  get listEl() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = this.list.current && ReactDOM.findDOMNode(this.list.current);\n    if (!(el instanceof HTMLElement)) {\n      return null;\n    }\n    return el;\n  }\n\n  cache = new CellMeasurerCache({\n    defaultHeight: 30,\n    fixedWidth: true,\n    keyMapper: (rowIndex) =>\n      this.props.filteredNodes ? this.props.filteredNodes[rowIndex].clientsideKey : '',\n  });\n\n  isAtBottomOrZero = true;\n  scrollToBottomObserver: MutationObserver | null = null;\n\n  componentDidMount() {\n    this.attachScrollToBottomObserver();\n    if (this.props.focusedTime) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ILogsScrollingTableSizedProps) {\n    if (!this.list.current) {\n      return;\n    }\n\n    if (this.props.width !== prevProps.width) {\n      this.didResize();\n    }\n    if (this.props.filterKey !== prevProps.filterKey) {\n      this.list.current.recomputeGridSize();\n    }\n\n    if (\n      this.props.focusedTime &&\n      this.props.filteredNodes?.length !== prevProps.filteredNodes?.length\n    ) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scrollToBottomObserver) {\n      this.scrollToBottomObserver.disconnect();\n    }\n  }\n\n  didResize() {\n    this.cache.clearAll();\n    this.forceUpdate();\n  }\n\n  attachScrollToBottomObserver() {\n    const el = this.listEl;\n    if (!el) {\n      console.warn(`No container, LogsScrollingTable must render listEl`);\n      return;\n    }\n\n    let lastHeight: string | null = null;\n\n    this.scrollToBottomObserver = new MutationObserver(() => {\n      const rowgroupEl = el.querySelector('[role=rowgroup]') as HTMLElement;\n      if (!rowgroupEl) {\n        lastHeight = null;\n        return;\n      }\n      if (rowgroupEl.style.height === lastHeight) {\n        return;\n      }\n      if (!this.isAtBottomOrZero) {\n        return;\n      }\n\n      lastHeight = rowgroupEl.style.height;\n      el.scrollTop = el.scrollHeight - el.clientHeight;\n    });\n\n    this.scrollToBottomObserver.observe(el, {\n      attributes: true,\n      subtree: true,\n    });\n  }\n\n  onScroll = ({scrollTop, scrollHeight, clientHeight}: ScrollParams) => {\n    const atTopAndStarting = scrollTop === 0 && scrollHeight <= clientHeight;\n\n    // Note: The distance to the bottom can go negative if you scroll into the padding at the bottom of the list.\n    // react-virtualized seems to be faking these numbers (they're different than what you get if you inspect the el)\n    const distanceToBottom = scrollHeight - clientHeight - scrollTop;\n    const atBottom = distanceToBottom < 5;\n\n    this.isAtBottomOrZero = atTopAndStarting || atBottom;\n  };\n\n  scrollToTime = (ms: number) => {\n    if (!this.props.filteredNodes || !this.list.current) {\n      return;\n    }\n\n    // Stop the table from attempting to return to the bottom-of-feed\n    // if more logs arrive.\n    this.isAtBottomOrZero = false;\n\n    // Find the row immediately at or after the provided timestamp\n    const target: {index: number; alignment: 'center'} = {\n      index: this.props.filteredNodes.findIndex((n) => Number(n.timestamp) >= ms),\n      alignment: 'center',\n    };\n    if (target.index === -1) {\n      target.index = this.props.filteredNodes.length - 1;\n    }\n\n    // Move to the offset. For some reason, this takes multiple iterations but not multiple renders.\n    // It seems react-virtualized may be using default row height for rows more than X rows away and\n    // the number gets more accurate as we scroll, which is very annoying.\n    let offset = 0;\n    let iterations = 0;\n    while (offset !== this.list.current.getOffsetForRow(target)) {\n      offset = this.list.current.getOffsetForRow(target);\n      this.list.current.scrollToPosition(offset);\n      iterations += 1;\n      if (iterations > 20) {\n        break;\n      }\n    }\n  };\n\n  rowRenderer = ({parent, index, style}: ListRowProps) => {\n    if (!this.props.filteredNodes) {\n      return;\n    }\n    const node = this.props.filteredNodes[index];\n    const focusedTimeMatch = Number(node.timestamp) === this.props.focusedTime;\n    const textMatch = !!this.props.textMatchNodes?.includes(node);\n\n    const metadata = this.props.metadata;\n    if (!node) {\n      return <span />;\n    }\n    const isLastRow = index === this.props.filteredNodes.length - 1;\n    const lastRowStyles = isLastRow\n      ? {\n          borderBottom: `1px solid ${Colors.LIGHT_GRAY3}`,\n        }\n      : {};\n\n    return (\n      <CellMeasurer cache={this.cache} index={index} parent={parent} key={node.clientsideKey}>\n        {node.__typename === 'LogMessageEvent' ? (\n          <Unstructured\n            node={node}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        ) : (\n          <Structured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  noContentRenderer = () => {\n    if (this.props.filteredNodes) {\n      return <NonIdealState icon={IconNames.CONSOLE} title=\"No logs to display\" />;\n    }\n    return <span />;\n  };\n\n  render() {\n    const {filteredNodes, height, loading, width} = this.props;\n    return (\n      <div>\n        {loading ? (\n          <ListEmptyState>\n            <NonIdealState icon={<Spinner purpose=\"section\" />} title=\"Fetching logs...\" />\n          </ListEmptyState>\n        ) : null}\n        <List\n          ref={this.list}\n          deferredMeasurementCache={this.cache}\n          rowCount={filteredNodes?.length || 0}\n          noContentRenderer={this.noContentRenderer}\n          rowHeight={this.cache.rowHeight}\n          rowRenderer={this.rowRenderer}\n          width={width}\n          height={height}\n          overscanRowCount={10}\n          style={{paddingBottom: LOGS_PADDING_BOTTOM}}\n          onScroll={this.onScroll}\n        />\n      </div>\n    );\n  }\n}\n\nclass AutoSizer extends React.Component<{\n  children: (size: {width: number; height: number}) => React.ReactNode;\n}> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.measure();\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (el && el instanceof HTMLElement && 'ResizeObserver' in window) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO((entries: any) => {\n        this.setState({\n          width: entries[0].contentRect.width,\n          height: entries[0].contentRect.height,\n        });\n      });\n      this.resizeObserver.observe(el);\n    }\n  }\n\n  componentDidUpdate() {\n    this.measure();\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  measure() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (!el || !(el instanceof HTMLElement)) {\n      return;\n    }\n    if (el.clientWidth !== this.state.width || el.clientHeight !== this.state.height) {\n      this.setState({width: el.clientWidth, height: el.clientHeight});\n    }\n  }\n\n  render() {\n    return <div style={{width: '100%', height: '100%'}}>{this.props.children(this.state)}</div>;\n  }\n}\n\nconst ListEmptyState = styled.div`\n  background-color: rgba(255, 255, 255, 0.7);\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 50px);\n`;\n","import {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {PipelineColorScale} from './PipelineColorScale';\nimport {SVGEllipseInRect} from './SVGComponents';\n\ninterface ISolidConfigPortProps {\n  x: number;\n  y: number;\n  minified: boolean;\n}\n\nexport const SolidConfigPort: React.SFC<ISolidConfigPortProps> = ({x, y, minified}) => {\n  return (\n    <>\n      <SVGEllipseInRect\n        x={x}\n        y={y}\n        width={26}\n        height={26}\n        stroke={Colors.GRAY3}\n        fill={PipelineColorScale('solid')}\n        pathLength={100}\n        strokeWidth={1}\n        strokeDasharray={`0 50 0`}\n      />\n      <SVGEllipseInRect\n        x={x + 3}\n        y={y + 3}\n        width={20}\n        height={20}\n        stroke={Colors.WHITE}\n        fill={PipelineColorScale('solidDarker')}\n        pathLength={100}\n        strokeWidth={2}\n      />\n      {!minified && (\n        <text\n          x={x + 8}\n          y={y + 7.5}\n          style={{font: `14px \"Arial\", san-serif`}}\n          fill={Colors.WHITE}\n          dominantBaseline=\"hanging\"\n        >\n          C\n        </text>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport {SVGFlowLayoutFiller, SVGFlowLayoutRect, SVGMonospaceText} from './SVGComponents';\n\nexport interface ISolidTag {\n  label: string;\n  onClick: (e: React.MouseEvent) => void;\n}\n\ninterface ISolidTagsProps {\n  x: number;\n  y: number;\n  width: number;\n  minified: boolean;\n  tags: ISolidTag[];\n}\n\nfunction hueForTag(text = '') {\n  if (text === 'ipynb') {\n    return 25;\n  }\n  if (text === 'snowflake') {\n    return 197;\n  }\n  if (text === 'pyspark' || text === 'spark') {\n    return 30;\n  }\n  return (\n    text\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((n, a) => n + a) % 360\n  );\n}\n\nconst SolidTagsInner: React.FunctionComponent<ISolidTagsProps> = ({\n  tags,\n  x,\n  y,\n  width,\n  minified,\n}) => {\n  const height = minified ? 32 : 20;\n  const overhang = 10;\n\n  return (\n    <SVGFlowLayoutRect\n      x={x}\n      y={y - (height - overhang)}\n      width={width}\n      height={height}\n      fill={'transparent'}\n      stroke={'transparent'}\n      spacing={minified ? 8 : 4}\n      padding={0}\n    >\n      <SVGFlowLayoutFiller />\n      {tags.map((tag) => {\n        const hue = hueForTag(tag.label);\n        return (\n          <SVGFlowLayoutRect\n            key={tag.label}\n            rx={0}\n            ry={0}\n            height={height}\n            padding={minified ? 8 : 4}\n            fill={`hsl(${hue}, 10%, 95%)`}\n            stroke={`hsl(${hue}, 75%, 50%)`}\n            onClick={tag.onClick}\n            strokeWidth={1}\n            spacing={0}\n          >\n            <SVGMonospaceText\n              text={tag.label}\n              fill={`hsl(${hue}, 75%, 50%)`}\n              size={minified ? 24 : 14}\n            />\n          </SVGFlowLayoutRect>\n        );\n      })}\n    </SVGFlowLayoutRect>\n  );\n};\n\nexport const SolidTags = React.memo(SolidTagsInner);\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {PipelineColorScale} from './PipelineColorScale';\nimport {SVGFlowLayoutRect, SVGMonospaceText} from './SVGComponents';\nimport {SolidConfigPort} from './SolidConfigPort';\nimport {SolidIOBox, metadataForIO} from './SolidIOBox';\nimport {SolidTags, ISolidTag} from './SolidTags';\nimport {IFullSolidLayout} from './getFullSolidLayout';\nimport {Edge} from './highlighting';\nimport {SolidNodeDefinitionFragment} from './types/SolidNodeDefinitionFragment';\nimport {SolidNodeInvocationFragment} from './types/SolidNodeInvocationFragment';\n\ninterface ISolidNodeProps {\n  layout: IFullSolidLayout;\n  invocation?: SolidNodeInvocationFragment;\n  definition: SolidNodeDefinitionFragment;\n  highlightedEdges: Edge[];\n  minified: boolean;\n  selected: boolean;\n  focused: boolean;\n  dim: boolean;\n  onClick: () => void;\n  onDoubleClick: () => void;\n  onEnterComposite: () => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nconst SELECTED_STYLE = {\n  stroke: 'rgba(255, 69, 0, 1)',\n  fill: 'rgba(255, 69, 0, 0.2)',\n  dashed: true,\n};\nconst FOCUSED_STYLE = {\n  stroke: 'rgba(59, 141, 227, 1)',\n  fill: 'rgba(59, 141, 227, 0.2)',\n  dashed: false,\n};\nconst TOOLTIP_STYLE = JSON.stringify({\n  top: -20,\n  left: 5,\n});\n\nexport class SolidNode extends React.Component<ISolidNodeProps> {\n  shouldComponentUpdate(prevProps: ISolidNodeProps) {\n    if (prevProps.dim !== this.props.dim) {\n      return true;\n    }\n    if (prevProps.selected !== this.props.selected) {\n      return true;\n    }\n    if (prevProps.focused !== this.props.focused) {\n      return true;\n    }\n    if (prevProps.minified !== this.props.minified) {\n      return true;\n    }\n    if (prevProps.highlightedEdges !== this.props.highlightedEdges) {\n      return true;\n    }\n    if (prevProps.layout !== this.props.layout) {\n      return true;\n    }\n    if (\n      (prevProps.invocation && prevProps.invocation.name) !==\n      (this.props.invocation && this.props.invocation.name)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onClick();\n  };\n\n  handleDoubleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onDoubleClick();\n  };\n\n  handleEnterComposite = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onEnterComposite();\n  };\n\n  handleKindClicked = (e: React.MouseEvent) => {\n    this.handleClick(e);\n    window.requestAnimationFrame(() => document.dispatchEvent(new Event('show-kind-info')));\n  };\n\n  renderSurroundingBox(style: {stroke: string; fill: string; dashed: boolean}) {\n    const {x, y, width, height} = this.props.layout.boundingBox;\n    return (\n      <rect\n        x={x - 10}\n        y={y - 10}\n        width={width + 20}\n        height={height + (this.props.definition.outputDefinitions.length > 0 ? 20 : 30)}\n        stroke={style.stroke}\n        fill={style.fill}\n        strokeWidth={this.props.minified ? 5 : 3}\n        strokeDasharray={style.dashed ? (this.props.minified ? 8 : 4) : undefined}\n      />\n    );\n  }\n\n  renderSolid() {\n    const {invocation, definition, layout, minified} = this.props;\n    const composite = definition.__typename === 'CompositeSolidDefinition';\n\n    return (\n      <SVGFlowLayoutRect\n        {...layout.solid}\n        fill={PipelineColorScale(\n          composite\n            ? 'solidComposite'\n            : invocation?.name.includes('.')\n            ? 'solidCompositeChild'\n            : 'solid',\n        )}\n        stroke=\"#979797\"\n        strokeWidth={1}\n        spacing={0}\n        padding={12}\n      >\n        <SVGMonospaceText\n          size={minified ? 30 : 16}\n          allowTwoLines={!minified}\n          text={invocation ? invocation.name : definition.name}\n          fill={'#222'}\n        />\n      </SVGFlowLayoutRect>\n    );\n  }\n\n  public renderSolidCompositeIndicator() {\n    const {x, y, width, height} = this.props.layout.solid;\n    return (\n      <>\n        <rect\n          x={x - 6}\n          y={y - 6}\n          width={width + 12}\n          height={height + 12}\n          fill={PipelineColorScale('solidComposite')}\n          stroke=\"#979797\"\n          strokeWidth={1}\n        />\n        <rect\n          x={x - 3}\n          y={y - 3}\n          width={width + 6}\n          height={height + 6}\n          fill={PipelineColorScale('solidComposite')}\n          stroke=\"#979797\"\n          strokeWidth={1}\n        />\n      </>\n    );\n  }\n\n  public render() {\n    const {definition, invocation, layout, dim, focused, selected, minified} = this.props;\n    const {metadata} = definition;\n    if (!layout) {\n      throw new Error(`Layout is missing for ${definition.name}`);\n    }\n    const {x, y, width, height} = layout.solid;\n\n    let configField = null;\n    if (definition.__typename === 'SolidDefinition') {\n      configField = definition.configField;\n    }\n\n    const tags: ISolidTag[] = [];\n\n    const kind = metadata.find((m) => m.key === 'kind');\n    const composite = definition.__typename === 'CompositeSolidDefinition';\n\n    if (kind) {\n      tags.push({label: kind.value, onClick: this.handleKindClicked});\n    }\n    if (composite) {\n      tags.push({label: 'Expand', onClick: this.handleEnterComposite});\n    }\n\n    return (\n      <g\n        onClick={this.handleClick}\n        onDoubleClick={this.handleDoubleClick}\n        data-tooltip={invocation ? invocation.name : definition.name}\n        data-tooltip-style={TOOLTIP_STYLE}\n        opacity={dim ? 0.3 : undefined}\n      >\n        {selected\n          ? this.renderSurroundingBox(SELECTED_STYLE)\n          : focused\n          ? this.renderSurroundingBox(FOCUSED_STYLE)\n          : undefined}\n\n        {composite && this.renderSolidCompositeIndicator()}\n\n        {invocation?.isDynamicMapped && (\n          <g style={{transform: 'translate(7px, 7px)'}}>\n            <SVGFlowLayoutRect\n              {...layout.solid}\n              fill={'#F0D9CA'}\n              stroke=\"#979797\"\n              strokeWidth={1}\n              spacing={0}\n              padding={12}\n            />\n          </g>\n        )}\n\n        {this.renderSolid()}\n\n        {definition.inputDefinitions.map((item, idx) => (\n          <SolidIOBox\n            {...this.props}\n            {...metadataForIO(item, invocation)}\n            key={idx}\n            item={item}\n            layout={layout.inputs[item.name].layout}\n            colorKey=\"input\"\n          />\n        ))}\n\n        {definition.outputDefinitions.map((item, idx) => (\n          <SolidIOBox\n            {...this.props}\n            {...metadataForIO(item, invocation)}\n            key={idx}\n            item={item}\n            layout={layout.outputs[item.name].layout}\n            colorKey=\"output\"\n          />\n        ))}\n\n        {configField && configField.configType.key !== 'Any' ? (\n          <SolidConfigPort x={x + width - 33} y={y - 13} minified={minified} />\n        ) : null}\n\n        {tags.length > 0 && (\n          <SolidTags x={x} y={y + height} width={width + 5} minified={minified} tags={tags} />\n        )}\n      </g>\n    );\n  }\n}\n\nexport const SOLID_NODE_INVOCATION_FRAGMENT = gql`\n  fragment SolidNodeInvocationFragment on Solid {\n    name\n    isDynamicMapped\n    inputs {\n      definition {\n        name\n      }\n      isDynamicCollect\n      dependsOn {\n        definition {\n          name\n          type {\n            displayName\n          }\n        }\n        solid {\n          name\n        }\n      }\n    }\n    outputs {\n      definition {\n        name\n      }\n      dependedBy {\n        solid {\n          name\n        }\n        definition {\n          name\n          type {\n            displayName\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const SOLID_NODE_DEFINITION_FRAGMENT = gql`\n  fragment SolidNodeDefinitionFragment on ISolidDefinition {\n    __typename\n    name\n    metadata {\n      key\n      value\n    }\n    inputDefinitions {\n      name\n      type {\n        displayName\n      }\n    }\n    outputDefinitions {\n      name\n      isDynamic\n      type {\n        displayName\n      }\n    }\n    ... on SolidDefinition {\n      configField {\n        configType {\n          key\n          description\n        }\n      }\n    }\n    ... on CompositeSolidDefinition {\n      inputMappings {\n        definition {\n          name\n        }\n        mappedInput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n      outputMappings {\n        definition {\n          name\n        }\n        mappedOutput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n","import {gql, useMutation} from '@apollo/client';\nimport {Button, Intent} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\n\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {InstigationType} from '../types/globalTypes';\nimport {Spinner} from '../ui/Spinner';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nimport {SCHEDULES_ROOT_QUERY} from './ScheduleUtils';\nimport {ReconcileSchedulerState} from './types/ReconcileSchedulerState';\n\nexport const ReconcileButton: React.FC<{repoAddress: RepoAddress}> = ({repoAddress}) => {\n  const {canReconcileSchedulerState} = usePermissions();\n  const repositorySelector = repoAddressToSelector(repoAddress);\n  const refetchQueries = [\n    {\n      query: SCHEDULES_ROOT_QUERY,\n      variables: {\n        repositorySelector: repositorySelector,\n        instigationType: InstigationType.SCHEDULE,\n      },\n    },\n  ];\n\n  const [\n    reconcileScheduleState,\n    {loading: reconcileInFlight},\n  ] = useMutation<ReconcileSchedulerState>(RECONCILE_SCHEDULE_STATE_MUTATION, {refetchQueries});\n\n  if (reconcileInFlight) {\n    return <Spinner purpose=\"body-text\" />;\n  }\n\n  if (!canReconcileSchedulerState) {\n    return (\n      <Tooltip content={DISABLED_MESSAGE}>\n        <Button small={true} disabled>\n          Reconcile\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Button\n      small={true}\n      intent={Intent.SUCCESS}\n      onClick={() => reconcileScheduleState({variables: {repositorySelector}})}\n    >\n      Reconcile\n    </Button>\n  );\n};\n\nconst RECONCILE_SCHEDULE_STATE_MUTATION = gql`\n  mutation ReconcileSchedulerState($repositorySelector: RepositorySelector!) {\n    reconcileSchedulerState(repositorySelector: $repositorySelector) {\n      __typename\n      ... on PythonError {\n        message\n        stack\n      }\n      ... on ReconcileSchedulerStateSuccess {\n        __typename\n        message\n      }\n    }\n  }\n`;\n","import {\n  Button,\n  Colors,\n  Intent,\n  Menu,\n  MenuItem,\n  Popover,\n  PopoverInteractionKind,\n  Position,\n  Tag,\n} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {TickTag} from '../instigation/InstigationTick';\nimport {InstigatedRunStatus} from '../instigation/InstigationUtils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {InstigationStatus, InstigationType} from '../types/globalTypes';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Table} from '../ui/Table';\nimport {Code} from '../ui/Text';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ReconcileButton} from './ReconcileButton';\nimport {SchedulePartitionStatus} from './SchedulePartitionStatus';\nimport {ScheduleSwitch} from './ScheduleSwitch';\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {humanCronString} from './humanCronString';\nimport {ScheduleFragment} from './types/ScheduleFragment';\n\nexport const SchedulesTable: React.FC<{\n  schedules: ScheduleFragment[];\n  repoAddress: RepoAddress;\n}> = ({repoAddress, schedules}) => {\n  const lastTick = 'Status of the last tick: One of `Started`, `Skipped`, `Requested`, `Failed`';\n  const lastRun = 'The status of the last run requested by this schedule';\n  const partitionStatus = (\n    <div style={{width: 300}}>\n      <p>The status of each partition in the partition set associated with this schedule.</p>\n      <p>\n        Partitions have a `Success` status if the last run for that partition completed\n        successfully.\n      </p>\n      <p>Partititons have a `Missing` status if no run has been executed for that partition.</p>\n    </div>\n  );\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '60px'}}></th>\n          <th style={{minWidth: '300px'}}>Schedule Name</th>\n          <th style={{minWidth: '150px'}}>Schedule</th>\n          <th style={{width: '160px'}}>Next Tick</th>\n          <th style={{width: '120px'}}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              Last Tick\n              <Tooltip position=\"top\" content={lastTick}>\n                <IconWIP name=\"info\" color={ColorsWIP.Gray400} />\n              </Tooltip>\n            </Group>\n          </th>\n          <th>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              Last Run\n              <Tooltip position=\"top\" content={lastRun}>\n                <IconWIP name=\"info\" color={ColorsWIP.Gray400} />\n              </Tooltip>\n            </Group>\n          </th>\n          <th>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              Partition\n              <Tooltip position=\"top\" content={partitionStatus}>\n                <IconWIP name=\"info\" color={ColorsWIP.Gray400} />\n              </Tooltip>\n            </Group>\n          </th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {schedules.map((schedule) => (\n          <ScheduleRow repoAddress={repoAddress} schedule={schedule} key={schedule.name} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst errorDisplay = (\n  status: InstigationStatus,\n  runningScheduleCount: number,\n  repoAddress: RepoAddress,\n) => {\n  if (status === InstigationStatus.STOPPED && runningScheduleCount === 0) {\n    return null;\n  } else if (status === InstigationStatus.RUNNING && runningScheduleCount === 1) {\n    return null;\n  }\n\n  const errors = [];\n  if (status === InstigationStatus.RUNNING && runningScheduleCount === 0) {\n    errors.push(\n      'Schedule is set to be running, but either the scheduler is not configured or the scheduler is not running the schedule',\n    );\n  } else if (status === InstigationStatus.STOPPED && runningScheduleCount > 0) {\n    errors.push('Schedule is set to be stopped, but the scheduler is still running the schedule');\n  }\n\n  if (runningScheduleCount > 0) {\n    errors.push('Duplicate cron job for schedule found.');\n  }\n\n  return (\n    <Popover\n      interactionKind={PopoverInteractionKind.CLICK}\n      popoverClassName=\"bp3-popover-content-sizing\"\n      position={Position.RIGHT}\n      fill={true}\n    >\n      <Tag fill={true} interactive={true} intent={Intent.DANGER}>\n        Error\n      </Tag>\n      <div>\n        <h3>There are errors with this schedule.</h3>\n\n        <p>Errors:</p>\n        <ul>\n          {errors.map((error, index) => (\n            <li key={index}>{error}</li>\n          ))}\n        </ul>\n\n        <p>\n          To resolve, click <ReconcileButton repoAddress={repoAddress} /> or run{' '}\n          <Code>dagster schedule up</Code>\n        </p>\n      </div>\n    </Popover>\n  );\n};\n\nconst ScheduleRow: React.FC<{\n  schedule: ScheduleFragment;\n  repoAddress: RepoAddress;\n}> = (props) => {\n  const {repoAddress, schedule} = props;\n\n  const {\n    name,\n    cronSchedule,\n    executionTimezone,\n    futureTicks,\n    pipelineName,\n    mode,\n    scheduleState,\n  } = schedule;\n  const {status, ticks, runningCount: runningScheduleCount} = scheduleState;\n\n  const latestTick = ticks.length > 0 ? ticks[0] : null;\n\n  return (\n    <tr key={name}>\n      <td>\n        <ScheduleSwitch repoAddress={repoAddress} schedule={schedule} />\n        {errorDisplay(status, runningScheduleCount, repoAddress)}\n      </td>\n      <td>\n        <Group direction=\"column\" spacing={4}>\n          <span style={{fontWeight: 500}}>\n            <Link to={workspacePathFromAddress(repoAddress, `/schedules/${name}`)}>{name}</Link>\n          </span>\n          <PipelineReference\n            showIcon\n            fontSize={13}\n            pipelineName={pipelineName}\n            pipelineHrefContext={repoAddress}\n            mode={mode}\n          />\n        </Group>\n      </td>\n      <td>\n        {cronSchedule ? (\n          <Tooltip position={'bottom'} content={cronSchedule}>\n            {humanCronString(cronSchedule)}\n          </Tooltip>\n        ) : (\n          <span style={{color: Colors.GRAY4}}>None</span>\n        )}\n      </td>\n      <td>\n        {futureTicks.results.length && status === InstigationStatus.RUNNING ? (\n          <TimestampDisplay\n            timestamp={futureTicks.results[0].timestamp}\n            timezone={executionTimezone}\n          />\n        ) : (\n          <span style={{color: Colors.GRAY4}}>None</span>\n        )}\n      </td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SCHEDULE} />\n        ) : (\n          <span style={{color: Colors.GRAY4}}>None</span>\n        )}\n      </td>\n      <td>\n        <InstigatedRunStatus instigationState={scheduleState} />\n      </td>\n      <td>\n        {schedule.partitionSet ? (\n          <SchedulePartitionStatus schedule={schedule} repoAddress={repoAddress} />\n        ) : (\n          <div style={{color: Colors.GRAY4}}>None</div>\n        )}\n      </td>\n      <td>\n        {schedule.partitionSet ? (\n          <Popover\n            content={\n              <Menu>\n                <MenuItem\n                  text=\"View Partition History...\"\n                  icon=\"multi-select\"\n                  target=\"_blank\"\n                  href={workspacePathFromAddress(\n                    repoAddress,\n                    `/pipelines/${pipelineName}/partitions`,\n                  )}\n                />\n                <MenuItem\n                  text=\"Launch Partition Backfill...\"\n                  icon=\"add\"\n                  target=\"_blank\"\n                  href={workspacePathFromAddress(\n                    repoAddress,\n                    `/pipelines/${pipelineName}/partitions`,\n                  )}\n                />\n              </Menu>\n            }\n            position=\"bottom\"\n          >\n            <Button small minimal icon=\"chevron-down\" style={{marginLeft: '4px'}} />\n          </Popover>\n        ) : null}\n      </td>\n    </tr>\n  );\n};\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n"],"sourceRoot":""}