{"version":3,"sources":["../../core/src/assets/AssetsCatalogTable.tsx","../../core/src/assets/AssetView.tsx","../../core/src/assets/AssetWipeDialog.tsx","../../core/src/ui/useSuggestionsForString.tsx","../../core/src/assets/AssetsFilter.tsx","../../core/src/assets/useAssetView.tsx","../../core/src/runs/LogsToolbar.tsx","../../core/src/assets/AssetEntryRoot.tsx","../../core/src/assets/AssetsCatalogRoot.tsx","../../core/src/runs/useComputeLogs.tsx","../../core/src/runs/ComputeLogPanel.tsx","../../core/src/runs/LogsProvider.tsx","../../core/src/runs/ExecutionStateDot.tsx","../../core/src/runs/LogsFilterInput.tsx","../../core/src/runs/getRunFilterProviders.ts","../../core/src/runs/RunActionButtons.tsx","../../core/src/runs/RunContext.tsx","../../core/src/runs/useQueryPersistedLogFilter.ts","../../core/src/runs/useRunFavicon.tsx","../../core/src/runs/Run.tsx","../../core/src/runs/RunRoot.tsx","../../core/src/runs/AllScheduledTicks.tsx","../../core/src/runs/RunsRoot.tsx","../../core/src/snapshots/SnapshotNav.tsx","../../core/src/snapshots/SnapshotRoot.tsx","../../core/src/instance/BackfillTerminationDialog.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/InstanceBackfills.tsx","../../core/src/instance/InstanceConfig.tsx","../../core/src/instance/InstanceHealthPage.tsx","../../core/src/instance/InstanceSchedules.tsx","../../core/src/instance/InstanceSensors.tsx","../../core/src/instance/InstanceStatusRoot.tsx","../../core/src/instance/InstanceRoot.tsx","../../core/src/runs/ComputeLogContent.tsx","../../../node_modules/ansi-to-react/lib/index.js","../../../node_modules/anser/lib/index.js","../../../node_modules/escape-carriage/index.js","../../../node_modules/lodash/throttle.js"],"names":["ActionType","AssetView","assetKey","asOf","assetPath","path","join","useDocumentTitle","Group","spacing","direction","AssetDetails","AssetMaterializations","AssetWipeDialog","assetKeys","isOpen","onClose","onComplete","requery","useMutation","ASSET_WIPE_MUTATION","variables","map","key","refetchQueries","requestWipe","wipe","a","length","title","style","width","className","Classes","DIALOG_BODY","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","intent","onClick","gql","useSuggestionsForString","buildSuggestions","value","tokens","toLocaleLowerCase","trim","split","queryString","suggestions","React","onSelectSuggestion","suggestion","lastIndex","lastIndexOf","keep","slice","getAssetFilterProviders","memoize","assets","allTags","forEach","asset","tags","tag","tagList","Object","keys","push","sort","token","values","textMatches","haystack","needle","toLowerCase","filter","x","every","word","includes","fuseOptions","threshold","AssetsFilter","query","onSetQuery","highlight","setHighlight","shown","setShown","suggestionProviders","perProvider","reduce","accum","provider","fuse","Fuse","all","providerKeys","empty","results","search","result","item","onSelect","minimal","usePortal","position","content","Menu","idx","Item","onMouseDown","e","preventDefault","stopPropagation","isHighlight","InputGroup","type","fill","placeholder","hasSuggestions","onChange","target","onKeyDown","lastResult","picked","Error","onBlur","onFocus","styled","props","Colors","LIGHT_GRAY1","ul","li","BLUE3","WHITE","LIGHT_GRAY3","ASSET_VIEW_KEY","useAssetView","storedValue","window","localStorage","getItem","view","setView","update","setItem","EXPERIMENTAL_TAGS_WARNING","Box","maxWidth","href","color","AssetsCatalogTable","prefixPath","queryResult","useQuery","ASSETS_TABLE_QUERY","notifyOnNetworkStatusChange","pollInterval","q","setQ","isFlattened","history","useHistory","setIsFlattened","flat","flexGrow","Loading","allowStaleData","assetsOrError","__typename","Wrapper","PythonErrorInfo","error","allAssets","nodes","part","i","matching","tagFilters","startsWith","s","substring","assetKeyFilters","filterTag","some","assetTag","filterAssets","matches","icon","description","showSwitcher","flex","justifyContent","active","QueryCountdown","currentPath","setQuery","AssetSearch","open","setOpen","selectOption","minWidth","text","initialState","checkedPaths","Set","lastPath","undefined","LogType","reducer","state","action","copy","Array","from","payload","checked","add","JSON","stringify","delete","actionPath","allPaths","actionPathKey","lastPathKey","allPathKeys","indexOfLast","findIndex","indexOfChecked","start","end","pathKey","AssetsTable","toWipe","setToWipe","canWipeAssets","usePermissions","dispatch","hasTags","pathMap","sorted","parse","onTagClick","onToggleAll","TOGGLE_ALL","onToggle","HTMLInputElement","nativeEvent","MouseEvent","getModifierState","TOGGLE_SLICE","TOGGLE_ONE","selectedAssets","has","margin","top","Table","display","alignItems","marginBottom","marginTop","indeterminate","size","AssetActions","selected","clearSelection","Icon","name","isSelected","AssetEntryRow","shouldShowTags","onSelectToggle","onWipe","canWipe","_","fullPath","isAssetEntry","linkUrl","encodeURIComponent","paddingRight","to","p","curr","ii","wrap","Tag","small","marginLeft","disabled","showBulkWipeDialog","setShowBulkWipeDialog","prompt","div","PYTHON_ERROR_FRAGMENT","BlueprintInputGroup","AssetEntryRoot","location","match","params","decodeURIComponent","pathname","URLSearchParams","get","invalidTime","asOfNumber","Number","Date","now","ASSET_ENTRY_ROOT_QUERY","Page","PageHeader","prev","padding","PathDetails","breadcrumbs","elem","right","breadcrumbRenderer","fontSize","items","pathDetails","assetOrError","GRAY2","AssetsCatalogRoot","MAX_STREAMING_LOG_BYTES","merge","b","data","downloadUrl","cursor","stdout","stepKey","log","isLoading","stderr","COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT","COMPUTE_LOG_CONTENT_FRAGMENT","COMPUTE_LOGS_SUBSCRIPTION","ComputeLogPanel","runId","stepKeys","computeLogKey","ioType","setComputeLogUrl","rootServerURI","AppContext","useSubscription","fetchPolicy","ComputeIOType","STDOUT","skip","onSubscriptionData","subscriptionData","computeLogs","STDERR","useComputeLogs","height","Spinner","purpose","logData","resolveDownloadUrl","minHeight","flexDirection","isVisible","ContentWrapper","ComputeLogContent","queued","m","clientsideKey","loading","hasMore","useLogsProviderWithSubscription","client","useApolloClient","websocketClient","WebSocketContext","queue","syncPipelineStatusToApolloCache","status","local","readFragment","fragmentName","fragment","PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT","id","toWrite","PipelineRunStatus","FAILURE","SUCCESS","STARTING","CANCELING","CANCELED","canTerminate","writeFragment","unlisten","onDisconnected","current","throttledSetNodes","throttle","PIPELINE_RUN_LOGS_SUBSCRIPTION","after","logs","pipelineRunLogs","messages","hasMorePastEvents","nextPipelineStatus","reversed","reverse","STARTED","QUEUED","pipelineStatusFromMessages","allNodes","LogsProviderWithSubscription","children","LogsProviderWithQuery","setNodes","setAfter","RUN_LOGS_QUERY","onCompleted","stopPolling","newSlice","count","pipelineRunOrError","events","event","startPolling","LogsProvider","availability","RunFragments","RunPipelineRunEventFragment","ExecutionStateDot","IStepState","RUNNING","GRAY3","SUCCEEDED","GREEN2","SKIPPED","GOLD3","FAILED","RED3","PREPARING","RETRY_REQUESTED","UNKNOWN","RED5","LogsFilterInput","numResults","highlightedResult","onInputChange","Results","FilterInput","spellCheck","autoCorrect","ResultItem","element","scrollIntoView","block","ref","input","GRAY5","typeValues","DagsterEventType","getRunFilterProviders","stepNames","LogsToolbar","steps","metadata","onSetFilter","logType","onSetLogType","onSetComputeLogKey","computeLogUrl","LogsToolbarContainer","structured","LogsToolbarDivider","resolveState","logCapture","ComputeLogToolbar","logCaptureSteps","extractLogCaptureStepsFromLegacySteps","isValidStepSelection","logKeyText","logKey","captureInfo","pid","itemRenderer","options","handleClick","modifiers","activeItem","filterable","onItemSelect","rightIcon","selectedTabId","ButtonLink","BLUE1","link","hover","underline","aria-label","download","StructuredLogToolbar","IconNames","CLIPBOARD","copyIcon","setCopyIcon","logQueryString","logQuery","setQueryString","copyToClipboard","useCopyToClipboard","selectedStep","find","v","filterText","SAVED","setTimeout","clearTimeout","segments","NonMatchCheckbox","inline","hideNonMatches","currentTarget","LogLevel","level","enabled","levels","FilterTag","interactive","round","marginRight","GRAY4","Checkbox","CancelRunButton","run","isFinalStatus","showDialog","setShowDialog","closeDialog","terminationState","errors","SharedToaster","show","message","Intent","DANGER","STOP","TerminationDialog","selectedRuns","stepSelectionWithState","selection","stepStates","present","failed","finished","stepState","RunActionButtons","graph","onLaunch","artifactsPersisted","executionPlan","canLaunchPipelineReexecution","pipelineError","repoMatch","useRepositoryForRun","pipeline","ERROR","tooltip","matchType","WARNING_SIGN","repositoryOrigin","repositoryName","repositoryLocationName","repoForRun","repoLocationForRun","buildRepoPath","usePipelineAvailabilityErrorForRun","selectionOfCurrentRun","t","DagsterTag","StepSelection","filterByQuery","k","stepSelectionFromRunTags","doneStatuses","isFailedWithPlan","full","scope","same","fromSelected","console","warn","Promise","resolve","selectionAndDownstreamQuery","selectionKeys","node","fromFailure","option","preferredRerun","primary","LaunchButton","runCount","DISABLED_MESSAGE","StepSelectionDescription","paddingLeft","step","RunContext","DELIMITER","levelsToQuery","DefaultQuerystring","DefaultLogLevels","focusedTime","decodeRunPageFilters","qs","logValues","providers","sinceTime","tokenizedValueFromString","toUpperCase","hasOwnProperty","encodeRunPageFilters","logQueryTokenStrings","document","querySelector","createElement","rel","getElementsByTagName","appendChild","FaviconsForStatus","NOT_STARTED","Run","useQueryPersistedState","encode","decode","defaults","logsFilter","setLogsFilter","queryKey","selectionQuery","setSelectionQuery","basePath","filePath","faviconHref","useRunFavicon","onShowStateDetails","errorNode","showCustomAlert","body","onSetSelectionQuery","Provider","RunMetadataProvider","onSetLogsFilter","RunWithData","LAUNCH_PIPELINE_REEXECUTION_MUTATION","launchPipelineReexecution","splitPanelContainer","queryLogType","setQueryLogType","setComputeLogKey","logTypeFromQuery","stepKeysJSON","runtimeGraph","toGraphQueryItems","selectionStepKeys","n","logKeys","selectedLogKey","logsFilterStepKeys","getReexecutionVariables","repositoryLocation","repository","handleLaunchResult","showLaunchError","onClickStep","evt","newSelected","index","indexOf","shiftKey","splice","SplitPanelContainer","axis","identifier","firstInitialPercent","firstMinSize","first","GanttChart","mode","GanttChartMode","WATERFALL_TIMED","toolbarLeftActions","container","toolbarActions","onSetSelection","gantt","second","LogsContainer","lt","LogsScrollingTable","filterStepKeys","filterKey","RunRoot","RUN_ROOT_QUERY","partialRefetch","snapshotID","pipelineSnapshotId","repoAddress","buildRepoAddress","overflow","background","bottom","horizontal","border","side","zIndex","fontFamily","FontFamily","monospace","RunStatusTag","PipelineReference","pipelineName","pipelineHrefContext","snapshotId","RunDetails","RunById","SEND_TO_GRAPH","RunFragment","AllScheduledTicks","SCHEDULER_INFO_QUERY","POLL_INTERVAL","repositoriesOrError","instance","scheduler","Alert","SchedulerInfo","schedulerOrError","daemonHealth","SchedulesNextTicks","repos","SCHEDULER_FRAGMENT","INSTANCE_HEALTH_FRAGMENT","REPOSITORY_SCHEDULES_FRAGMENT","RunsRoot","useQueryPersistedRunFilters","filterTokens","setFilterTokens","runsFilterForSearchTokens","showScheduled","setShowScheduled","flagPipelineModeTuples","useFeatureFlags","useCursorPaginatedQuery","nextCursorForResult","runs","pipelineRunsOrError","PAGE_SIZE","getResultArray","queuedFilter","statuses","queuedStatuses","inProgressFilter","inProgressStatuses","RUNS_ROOT_QUERY","pageSize","paginationProps","setStatusFilter","tokensMinusStatus","statusTokens","selectedTab","isEqual","tabColor","enabledFilters","TabButton","queuedCount","inProgressCount","alignSelf","RunsFilter","refetch","RunTable","COUNT_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","QueueDaemonAlert","QUEUE_DAEMON_STATUS_QUERY","daemonStatus","required","healthy","CountTag","CountTagStyled","SNAPSHOT_PARENT_QUERY","SnapshotNav","activeTab","explorerPath","explorerPathString","explorerPathToString","pathSolids","currentPipelineState","useActivePipelineForName","currentSnapshotID","tabs","pathComponent","pipelineSnapshotOrError","parentSnapshotId","workspacePipelinePathGuessRepo","pipelineMode","large","tab","SnapshotRoot","pipelinePath","explorerPathFromString","render","PipelineRunsRoot","component","PipelineExplorerSnapshotRoot","BackfillTerminationDialog","backfill","CANCEL_BACKFILL_MUTATION","cancelBackfill","isSubmitting","setIsSubmitting","numUnscheduled","numTotal","numRequested","cancelableRuns","unfinishedMap","cancel","backfillId","BulkActionStatus","InstanceTabs","queryData","InstanceBackfills","INSTANCE_HEALTH_FOR_BACKFILLS_QUERY","BACKFILLS_QUERY","partitionBackfillsOrError","backfillHealths","allDaemonStatuses","daemon","daemonType","isBackfillHealthy","backfills","BackfillTable","terminationBackfill","setTerminationBackfill","RESUME_BACKFILL_MUTATION","resumeBackfill","cancelRunBackfill","setCancelRunBackfill","canCancelPartitionBackfill","candidateId","resume","resumePartitionBackfill","textAlign","onTerminateBackfill","onResumeBackfill","BackfillRow","canLaunchPartitionBackfill","counts","getProgressCounts","runsUrl","stringFromValue","partitionSetBackfillUrl","partitionSet","workspacePipelinePath","canCancel","partitionSetName","timestamp","TimestampDisplay","REQUESTED","byPartitionRuns","Partition","runPartitionName","latestPartitionRuns","numQueued","numInProgress","numSucceeded","successStatuses","numFailed","failedStatuses","numSkipped","BackfillProgress","numCompleted","fontWeight","GRAY1","fontVariantNumeric","Math","floor","PartitionSetReference","DARK_GRAY3","showIcon","BackfillStatusTable","label","isTotal","BackfillStatusTableRow","boxShadow","fontVariant","borderTop","YamlShimStyle","createGlobalStyle","InstanceConfig","INSTANCE_CONFIG_QUERY","hash","setHash","documentHash","getElementById","listen","sections","info","version","section","hashForSection","ConfigLink","ColorsWIP","Gray300","ConfigSection","highlighted","HighlightedCodeBlock","language","Link","css","InstanceHealthPage","INSTANCE_HEALTH_QUERY","DaemonList","REPOSITORY_LOCATIONS_FRAGMENT","InstanceSchedules","INSTANCE_SCHEDULES_QUERY","AllSchedules","unloadableInstigationStatesOrError","unloadable","withSchedules","schedules","loadedSchedulesSection","SchedulesTable","unloadableSchedules","instigationType","InstigationType","SCHEDULE","unloadableSchedulesSection","Unloadable","scheduleStates","REPOSITORY_INFO_FRAGMENT","SCHEDULE_FRAGMENT","INSTIGATION_STATE_FRAGMENT","InstanceSensors","INSTANCE_SENSORS_QUERY","AllSensors","withSensors","sensors","sensorDefinitionsSection","SensorInfo","SensorsTable","unloadableSensors","SENSOR","unloadableSensorsSection","sensorStates","SENSOR_FRAGMENT","InstanceStatusRoot","InstanceRoot","useLocation","main","scrollTo","MainContent","exact","timeout","contentContainer","showScrollToTop","hideWarning","setState","scheduleHideWarning","cancelHideWarning","onScrollUp","onScrollDown","_position","scrollToTop","this","ScrollToast","ScrollToTop","onMouseOver","onMouseOut","White","isTruncated","Buffer","byteLength","nextLine","truncated","warning","FileWarning","Yellow500","FileContainer","renderScrollToTop","FileContent","RelativeContainer","LogContent","LoadingContainer","FileFooter","ScrollContainer","lastScroll","onScroll","scrollHeight","scrollTop","offsetHeight","scrollToBottom","focus","addEventListener","_props","_state","shouldScroll","outline","tabIndex","ContentContainer","LineNumbers","Content","SolarizedColors","linkify","useClasses","LineNumberContainer","String","DARK_GRAY2","__importDefault","mod","__esModule","__importStar","call","defineProperty","exports","anser_1","require","escape_carriage_1","LINK_REGEX","convertBundleIntoReact","bundle","bg","backgroundColor","fg","createStyle","classNames","createClass","words","test","default","use_classes","escapeCarriageReturn","ansiToJson","json","remove_empty","ansiToJSON","bind","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","ANSI_COLORS","Anser","TypeError","_classCallCheck","fg_truecolor","bg_truecolor","bright","txt","escapeForHtml","ansiToHtml","ansiToText","PALETTE_COLORS","j","format","r","g","_r","_g","_b","_i","replace","str","process","clearLine","markup","_this","raw_text_chunks","first_chunk","shift","color_chunks","chunk","processChunk","processChunkJson","unshift","c","isEmpty","decoration","was_processed","nums","self","num_str","num","parseInt","isNaN","is_foreground","palette_index","klass","setupPalette","_this2","jsonChunk","styles","classes","render_data","fragments","module","base","exec","insert","findLongestString","arr","longest","escapeSingleLineSafe","res","escapeCarriageReturnSafe","debounce","isObject","func","wait","leading","trailing"],"mappings":"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","file":"static/js/8.0e73a7e4.chunk.js","sourcesContent":["import {gql, useQuery} from '@apollo/client';\nimport {\n  Button,\n  Checkbox,\n  Menu,\n  MenuItem,\n  Popover,\n  InputGroup as BlueprintInputGroup,\n  NonIdealState,\n  Colors,\n  ButtonGroup,\n} from '@blueprintjs/core';\nimport {Tooltip2 as Tooltip} from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport {useHistory, Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {usePermissions} from '../app/Permissions';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {QueryCountdown} from '../app/QueryCountdown';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Loading} from '../ui/Loading';\nimport {Table} from '../ui/Table';\nimport {Tag} from '../ui/Tag';\n\nimport {AssetWipeDialog} from './AssetWipeDialog';\nimport {AssetsFilter, filterAssets} from './AssetsFilter';\nimport {\n  AssetsTableQuery,\n  AssetsTableQuery_assetsOrError_AssetConnection_nodes,\n  AssetsTableQuery_assetsOrError_AssetConnection_nodes_key,\n  AssetsTableQuery_assetsOrError_AssetConnection_nodes_tags,\n} from './types/AssetsTableQuery';\nimport {useAssetView} from './useAssetView';\n\ntype Asset = AssetsTableQuery_assetsOrError_AssetConnection_nodes;\ntype AssetKey = AssetsTableQuery_assetsOrError_AssetConnection_nodes_key;\ntype AssetTag = AssetsTableQuery_assetsOrError_AssetConnection_nodes_tags;\n\nconst EXPERIMENTAL_TAGS_WARNING = (\n  <Box style={{maxWidth: 300}}>\n    Tags are an experimental feature of asset materializations. See the{' '}\n    <a\n      href=\"https://docs.dagster.io/_apidocs/solids#dagster.AssetMaterialization\"\n      style={{color: Colors.WHITE}}\n    >\n      AssetMaterialization documentation\n    </a>{' '}\n    for more about adding asset tags.\n  </Box>\n);\n\nconst POLL_INTERVAL = 15000;\n\nexport const AssetsCatalogTable: React.FC<{prefixPath?: string[]}> = ({prefixPath}) => {\n  const queryResult = useQuery<AssetsTableQuery>(ASSETS_TABLE_QUERY, {\n    notifyOnNetworkStatusChange: true,\n    pollInterval: POLL_INTERVAL,\n  });\n\n  const [q, setQ] = React.useState<string>('');\n  const [view, setView] = useAssetView();\n\n  const isFlattened = view !== 'directory';\n  const history = useHistory();\n  const setIsFlattened = (flat: boolean) => {\n    setView(flat ? 'flat' : 'directory');\n    if (flat && prefixPath) {\n      history.push('/instance/assets');\n    }\n  };\n\n  return (\n    <div style={{flexGrow: 1}}>\n      <Loading allowStaleData queryResult={queryResult}>\n        {({assetsOrError}) => {\n          if (assetsOrError.__typename === 'PythonError') {\n            return (\n              <Wrapper>\n                <PythonErrorInfo error={assetsOrError} />\n              </Wrapper>\n            );\n          }\n\n          const allAssets = assetsOrError.nodes;\n          const assets = prefixPath\n            ? assetsOrError.nodes.filter(\n                (asset: Asset) =>\n                  prefixPath.length < asset.key.path.length &&\n                  prefixPath.every((part: string, i: number) => part === asset.key.path[i]),\n              )\n            : assetsOrError.nodes;\n\n          const matching = isFlattened\n            ? filterAssets(assets, q)\n            : assets.filter((asset) => !q || matches(asset.key.path.join('/'), q));\n\n          if (!assets.length) {\n            return (\n              <Wrapper>\n                <NonIdealState\n                  icon=\"panel-table\"\n                  title=\"Assets\"\n                  description={\n                    <p>\n                      {prefixPath && prefixPath.length ? (\n                        <span>\n                          There are no matching materialized assets with the specified asset key.\n                        </span>\n                      ) : (\n                        <span>There are no known materialized assets.</span>\n                      )}\n                      Any asset keys that have been specified with an{' '}\n                      <code>AssetMaterialization</code> during a pipeline run will appear here. See\n                      the{' '}\n                      <a href=\"https://docs.dagster.io/_apidocs/solids#dagster.AssetMaterialization\">\n                        AssetMaterialization documentation\n                      </a>{' '}\n                      for more information.\n                    </p>\n                  }\n                />\n              </Wrapper>\n            );\n          }\n\n          const showSwitcher = prefixPath || assets.some((asset) => asset.key.path.length > 1);\n          return (\n            <Wrapper>\n              <Box flex={{justifyContent: 'space-between'}}>\n                <div>\n                  {showSwitcher ? (\n                    <Group spacing={8} direction=\"row\">\n                      <ButtonGroup>\n                        <Button\n                          icon=\"list\"\n                          title=\"Flat\"\n                          active={isFlattened}\n                          onClick={() => setIsFlattened(true)}\n                        />\n                        <Button\n                          icon=\"folder-close\"\n                          title=\"Directory\"\n                          active={!isFlattened}\n                          onClick={() => setIsFlattened(false)}\n                        />\n                      </ButtonGroup>\n                      {isFlattened ? (\n                        <AssetsFilter assets={assets} query={q} onSetQuery={setQ} />\n                      ) : (\n                        <AssetSearch assets={allAssets} />\n                      )}\n                    </Group>\n                  ) : isFlattened ? (\n                    <AssetsFilter assets={assets} query={q} onSetQuery={setQ} />\n                  ) : (\n                    <AssetSearch assets={allAssets} />\n                  )}\n                </div>\n                <QueryCountdown pollInterval={POLL_INTERVAL} queryResult={queryResult} />\n              </Box>\n              <AssetsTable\n                assets={matching}\n                currentPath={prefixPath || []}\n                setQuery={setQ}\n                isFlattened={isFlattened}\n              />\n            </Wrapper>\n          );\n        }}\n      </Loading>\n    </div>\n  );\n};\n\nconst matches = (haystack: string, needle: string) =>\n  needle\n    .toLowerCase()\n    .split(' ')\n    .filter((x) => x)\n    .every((word) => haystack.toLowerCase().includes(word));\n\nconst AssetSearch = ({assets}: {assets: Asset[]}) => {\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [highlight, setHighlight] = React.useState<number>(0);\n  const [q, setQ] = React.useState<string>('');\n\n  React.useEffect(() => {\n    setHighlight(0);\n    if (q) {\n      setOpen(true);\n    }\n  }, [q]);\n\n  const selectOption = (asset: Asset) => {\n    history.push(`/instance/assets/${asset.key.path.join('/')}`);\n  };\n\n  const matching = assets.filter((asset) => !q || matches(asset.key.path.join('/'), q));\n\n  const onKeyDown = (e: React.KeyboardEvent<any>) => {\n    // Enter and Return confirm the currently selected suggestion or\n    // confirm the freeform text you've typed if no suggestions are shown.\n    if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n      if (matching.length) {\n        const picked = matching[highlight];\n        if (!picked) {\n          throw new Error('Selection out of sync with suggestions');\n        }\n        selectOption(picked);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      return;\n    }\n\n    // Escape closes the options. The options re-open if you type another char or click.\n    if (e.key === 'Escape') {\n      setHighlight(0);\n      setOpen(false);\n      return;\n    }\n\n    const lastResult = matching.length - 1;\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      setHighlight(highlight === 0 ? lastResult : highlight - 1);\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      setHighlight(highlight === lastResult ? 0 : highlight + 1);\n    }\n  };\n\n  return (\n    <div style={{width: 600}}>\n      <Popover\n        minimal\n        fill={true}\n        isOpen={open && matching.length > 0}\n        position={'bottom-left'}\n        content={\n          <Menu style={{maxWidth: 600, minWidth: 600}}>\n            {matching.slice(0, 10).map((asset, idx) => (\n              <MenuItem\n                key={idx}\n                onMouseDown={(e: React.MouseEvent<any>) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  selectOption(asset);\n                }}\n                active={highlight === idx}\n                icon=\"panel-table\"\n                text={\n                  <div>\n                    <div>{asset.key.path.join('/')}</div>\n                  </div>\n                }\n              />\n            ))}\n          </Menu>\n        }\n      >\n        <InputGroup\n          type=\"text\"\n          value={q}\n          width={600}\n          fill={false}\n          placeholder={`Search all asset_keys...`}\n          onChange={(e: React.ChangeEvent<any>) => setQ(e.target.value)}\n          onFocus={() => setOpen(true)}\n          onBlur={() => setOpen(false)}\n          onKeyDown={onKeyDown}\n        />\n      </Popover>\n    </div>\n  );\n};\n\ntype State = {\n  checkedPaths: Set<string>;\n  lastPath?: string[];\n};\nconst initialState: State = {\n  checkedPaths: new Set(),\n  lastPath: undefined,\n};\nenum ActionType {\n  TOGGLE_ONE = 'toggle-one',\n  TOGGLE_SLICE = 'toggle-slice',\n  TOGGLE_ALL = 'toggle-all',\n}\ntype Action = {\n  type: ActionType;\n  payload: {\n    checked: boolean;\n    path?: string[];\n    allPaths: string[][];\n  };\n};\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedPaths));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, path} = action.payload;\n      checked ? copy.add(JSON.stringify(path)) : copy.delete(JSON.stringify(path));\n      return {checkedPaths: copy, lastPath: path};\n    }\n\n    case 'toggle-slice': {\n      const {checked, path: actionPath, allPaths} = action.payload;\n      const actionPathKey = JSON.stringify(actionPath);\n      const lastPathKey = JSON.stringify(state.lastPath);\n      const allPathKeys = allPaths.map((path) => JSON.stringify(path));\n      const indexOfLast = allPathKeys.findIndex((key) => key === lastPathKey);\n      const indexOfChecked = allPathKeys.findIndex((key) => key === actionPathKey);\n      if (indexOfLast === undefined || indexOfChecked === undefined) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allPathKeys\n        .slice(start, end + 1)\n        .forEach((pathKey) => (checked ? copy.add(pathKey) : copy.delete(pathKey)));\n      return {\n        lastPath: actionPath,\n        checkedPaths: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allPaths} = action.payload;\n      return {\n        checkedPaths: checked ? new Set(allPaths.map((path) => JSON.stringify(path))) : new Set(),\n        lastPath: undefined,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst AssetsTable = ({\n  assets,\n  currentPath,\n  isFlattened,\n  setQuery,\n}: {\n  assets: Asset[];\n  currentPath: string[];\n  setQuery: (q: string) => void;\n  isFlattened: boolean;\n}) => {\n  useDocumentTitle(currentPath.length ? `Assets: ${currentPath.join(' \\u203A ')}` : 'Assets');\n  const [toWipe, setToWipe] = React.useState<AssetKey[] | undefined>();\n  const {canWipeAssets} = usePermissions();\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {checkedPaths} = state;\n\n  const hasTags = !!assets.filter((asset) => asset.tags.length).length;\n  const pathMap: {[key: string]: Asset[]} = {};\n  assets.forEach((asset) => {\n    const path = isFlattened\n      ? asset.key.path\n      : asset.key.path.slice(currentPath.length, currentPath.length + 1);\n    const pathKey = JSON.stringify(path);\n    pathMap[pathKey] = [...(pathMap[pathKey] || []), asset];\n  });\n  const sorted = Object.keys(pathMap)\n    .sort()\n    .map((x) => JSON.parse(x));\n\n  const onTagClick = (tag: AssetTag) => {\n    setQuery(`tag:${tag.key}=${tag.value}`);\n  };\n  const onChangeAll = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const checked = checkedPaths.size !== sorted.length;\n      onToggleAll(checked);\n    }\n  };\n  const onToggleAll = (checked: boolean) => {\n    dispatch({\n      type: ActionType.TOGGLE_ALL,\n      payload: {checked, allPaths: sorted},\n    });\n  };\n  const onToggle = (e: React.FormEvent<HTMLInputElement>, path: string[]) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      if (shiftKey && state.lastPath) {\n        dispatch({\n          type: ActionType.TOGGLE_SLICE,\n          payload: {checked, path, allPaths: sorted},\n        });\n      } else {\n        dispatch({\n          type: ActionType.TOGGLE_ONE,\n          payload: {checked, path, allPaths: sorted},\n        });\n      }\n    }\n  };\n\n  const selectedAssets = new Set<Asset>();\n  sorted.forEach((path) => {\n    const key = JSON.stringify(path);\n    if (checkedPaths.has(key)) {\n      const assets = pathMap[key] || [];\n      assets.forEach((asset) => selectedAssets.add(asset));\n    }\n  });\n\n  return (\n    <Box margin={{top: 20}}>\n      <Table>\n        <thead>\n          <tr>\n            {canWipeAssets ? (\n              <th style={{width: 50}}>\n                <div style={{display: 'flex', alignItems: 'center'}}>\n                  <Checkbox\n                    style={{marginBottom: 0, marginTop: 1}}\n                    indeterminate={checkedPaths.size > 0 && checkedPaths.size !== sorted.length}\n                    checked={checkedPaths.size === sorted.length}\n                    onChange={onChangeAll}\n                  />\n                  <AssetActions\n                    selected={Array.from(selectedAssets)}\n                    clearSelection={() => onToggleAll(false)}\n                  />\n                </div>\n              </th>\n            ) : null}\n            <th>Asset Key</th>\n            {hasTags ? (\n              <th>\n                <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                  Tags\n                  <Tooltip position=\"top\" content={EXPERIMENTAL_TAGS_WARNING}>\n                    <IconWIP name=\"info\" />\n                  </Tooltip>\n                </Group>\n              </th>\n            ) : null}\n            {canWipeAssets ? <th>Actions</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {sorted.map((path, idx) => {\n            const isSelected = checkedPaths.has(JSON.stringify(path));\n            return (\n              <AssetEntryRow\n                key={idx}\n                currentPath={currentPath}\n                path={path}\n                assets={pathMap[JSON.stringify(path)] || []}\n                shouldShowTags={hasTags}\n                isFlattened={isFlattened}\n                isSelected={isSelected}\n                onSelectToggle={onToggle}\n                onTagClick={onTagClick}\n                onWipe={(assets: Asset[]) => setToWipe(assets.map((asset) => asset.key))}\n                canWipe={canWipeAssets}\n              />\n            );\n          })}\n        </tbody>\n      </Table>\n      <AssetWipeDialog\n        assetKeys={toWipe || []}\n        isOpen={!!toWipe}\n        onClose={() => setToWipe(undefined)}\n        onComplete={() => setToWipe(undefined)}\n        requery={(_) => [{query: ASSETS_TABLE_QUERY}]}\n      />\n    </Box>\n  );\n};\n\nconst AssetEntryRow: React.FC<{\n  currentPath?: string[];\n  path: string[];\n  isSelected: boolean;\n  isFlattened: boolean;\n  onSelectToggle: (e: React.FormEvent<HTMLInputElement>, path: string[]) => void;\n  shouldShowTags: boolean;\n  assets: Asset[];\n  onTagClick: (tag: AssetTag) => void;\n  onWipe: (assets: Asset[]) => void;\n  canWipe: boolean;\n}> = React.memo(\n  ({\n    currentPath,\n    path,\n    shouldShowTags,\n    assets,\n    onTagClick,\n    isSelected,\n    isFlattened,\n    onSelectToggle,\n    onWipe,\n    canWipe,\n  }) => {\n    const fullPath = [...(currentPath || []), ...path];\n    const isAssetEntry = assets.length === 1 && fullPath.join('/') === assets[0].key.path.join('/');\n    const linkUrl = `/instance/assets/${fullPath.map(encodeURIComponent).join('/')}`;\n    return (\n      <tr>\n        {canWipe ? (\n          <td style={{paddingRight: '4px'}}>\n            <Checkbox checked={isSelected} onChange={(e) => onSelectToggle(e, path)} />\n          </td>\n        ) : null}\n        <td>\n          <Link to={linkUrl}>\n            <Box flex={{alignItems: 'center'}}>\n              {path\n                .map((p, i) => <span key={i}>{p}</span>)\n                .reduce(\n                  (accum, curr, ii) => [\n                    ...accum,\n                    ii > 0 ? (\n                      <React.Fragment key={`${ii}-space`}>&nbsp;{`>`}&nbsp;</React.Fragment>\n                    ) : null,\n                    curr,\n                  ],\n                  [] as React.ReactNode[],\n                )}\n              {isAssetEntry || isFlattened ? null : '/'}\n            </Box>\n          </Link>\n        </td>\n        {shouldShowTags ? (\n          <td>\n            {isAssetEntry && assets[0].tags.length ? (\n              <Box flex={{direction: 'row', wrap: 'wrap'}}>\n                {assets[0].tags.map((tag, idx) => (\n                  <Tag tag={tag} key={idx} onClick={() => onTagClick(tag)} />\n                ))}\n              </Box>\n            ) : null}\n          </td>\n        ) : null}\n        {canWipe ? (\n          <td>\n            {isAssetEntry ? (\n              <Popover\n                content={\n                  <Menu>\n                    <MenuItem\n                      text=\"Wipe ...\"\n                      icon=\"trash\"\n                      target=\"_blank\"\n                      onClick={() => onWipe(assets)}\n                    />\n                  </Menu>\n                }\n                position=\"bottom\"\n              >\n                <Button small minimal icon=\"chevron-down\" style={{marginLeft: '4px'}} />\n              </Popover>\n            ) : (\n              <Button small minimal disabled icon=\"chevron-down\" style={{marginLeft: '4px'}} />\n            )}\n          </td>\n        ) : null}\n      </tr>\n    );\n  },\n);\n\nconst AssetActions: React.FC<{\n  selected: Asset[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const [showBulkWipeDialog, setShowBulkWipeDialog] = React.useState<boolean>(false);\n  const {canWipeAssets} = usePermissions();\n\n  if (!canWipeAssets) {\n    return null;\n  }\n\n  const disabled = selected.length === 0;\n  const prompt = disabled\n    ? 'Select assets to wipe'\n    : selected.length === 1\n    ? 'Wipe 1 asset'\n    : `Wipe ${selected.length} assets`;\n\n  return (\n    <>\n      <Tooltip position=\"right\" content={prompt}>\n        <Button\n          disabled={disabled}\n          icon=\"trash\"\n          intent={disabled ? undefined : 'danger'}\n          onClick={() => setShowBulkWipeDialog(true)}\n        >\n          {disabled ? null : selected.length}\n        </Button>\n      </Tooltip>\n      <AssetWipeDialog\n        assetKeys={selected.map((asset) => asset.key)}\n        isOpen={showBulkWipeDialog}\n        onClose={() => setShowBulkWipeDialog(false)}\n        onComplete={() => {\n          setShowBulkWipeDialog(false);\n          clearSelection();\n        }}\n        requery={(_) => [{query: ASSETS_TABLE_QUERY}]}\n      />\n    </>\n  );\n});\n\nconst Wrapper = styled.div`\n  flex: 1 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-width: 0;\n  overflow: auto;\n  position: relative;\n  z-index: 0;\n  table th {\n    vertical-align: middle;\n  }\n`;\n\nconst ASSETS_TABLE_QUERY = gql`\n  query AssetsTableQuery {\n    assetsOrError {\n      __typename\n      ... on AssetConnection {\n        nodes {\n          id\n          key {\n            path\n          }\n          tags {\n            key\n            value\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst InputGroup = styled(BlueprintInputGroup)`\n  input,\n  input:focus {\n    outline: none;\n    box-shadow: none;\n    border: 1px solid #ececec;\n  }\n`;\n","import * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {Group} from '../ui/Group';\n\nimport {AssetDetails} from './AssetDetails';\nimport {AssetMaterializations} from './AssetMaterializations';\nimport {AssetKey} from './types';\n\ninterface Props {\n  assetKey: AssetKey;\n  asOf: string | null;\n}\n\nexport const AssetView: React.FC<Props> = ({assetKey, asOf}) => {\n  const assetPath = assetKey.path.join(' \\u203A ');\n  useDocumentTitle(`Asset: ${assetPath}`);\n\n  return (\n    <Group spacing={24} direction=\"column\">\n      <AssetDetails assetKey={assetKey} asOf={asOf} />\n      <AssetMaterializations assetKey={assetKey} asOf={asOf} />\n    </Group>\n  );\n};\n","import {gql, RefetchQueriesFunction, useMutation} from '@apollo/client';\nimport {Button, Classes, Dialog} from '@blueprintjs/core';\nimport * as React from 'react';\n\ninterface AssetKey {\n  path: string[];\n}\n\nexport const AssetWipeDialog: React.FC<{\n  assetKeys: AssetKey[];\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (assetKeys: AssetKey[]) => void;\n  requery?: RefetchQueriesFunction;\n}> = ({assetKeys, isOpen, onClose, onComplete, requery}) => {\n  const [requestWipe] = useMutation(ASSET_WIPE_MUTATION, {\n    variables: {assetKeys: assetKeys.map((key) => ({path: key.path || []}))},\n    refetchQueries: requery,\n  });\n\n  const wipe = async () => {\n    if (!assetKeys.length) {\n      return;\n    }\n    await requestWipe();\n    onComplete(assetKeys);\n  };\n\n  const title =\n    assetKeys.length === 1 ? (\n      <>\n        Wipe asset <code>{assetKeys[0].path.join(' > ')}</code>\n      </>\n    ) : (\n      <>Wipe {assetKeys.length} assets</>\n    );\n  return (\n    <Dialog isOpen={isOpen} title={title} onClose={onClose} style={{width: 800}}>\n      <div className={Classes.DIALOG_BODY}>Wiping assets cannot be undone.</div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button intent=\"danger\" onClick={wipe}>\n            Wipe\n          </Button>\n          <Button intent=\"none\" onClick={onClose}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst ASSET_WIPE_MUTATION = gql`\n  mutation AssetWipeMutation($assetKeys: [AssetKeyInput!]!) {\n    wipeAssets(assetKeys: $assetKeys) {\n      ... on AssetWipeSuccess {\n        assetKeys {\n          path\n        }\n      }\n      ... on PythonError {\n        message\n        stack\n      }\n    }\n  }\n`;\n","import * as React from 'react';\n\nexport const useSuggestionsForString = (\n  buildSuggestions: (value: string) => string[],\n  value: string,\n) => {\n  const tokens = value.toLocaleLowerCase().trim().split(/\\s+/);\n  const queryString = tokens.length ? tokens[tokens.length - 1] : '';\n\n  const suggestions = React.useMemo(() => buildSuggestions(queryString), [\n    buildSuggestions,\n    queryString,\n  ]);\n\n  const onSelectSuggestion = React.useCallback(\n    (suggestion: string) => {\n      const lastIndex = value.toLocaleLowerCase().lastIndexOf(queryString);\n      if (lastIndex !== -1) {\n        const keep = value.slice(0, lastIndex);\n        return `${keep}${suggestion}`;\n      }\n\n      // Shouldn't really ever fall through to this, since `queryString` should definitely\n      // be the last token in `value`. No-op just in case.\n      return value;\n    },\n    [queryString, value],\n  );\n\n  return React.useMemo(\n    () => ({\n      suggestions,\n      onSelectSuggestion,\n    }),\n    [onSelectSuggestion, suggestions],\n  );\n};\n","import {InputGroup as BlueprintInputGroup, Colors, Popover} from '@blueprintjs/core';\nimport Fuse from 'fuse.js';\nimport memoize from 'lodash/memoize';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useSuggestionsForString} from '../ui/useSuggestionsForString';\n\nimport {AssetsTableQuery_assetsOrError_AssetConnection_nodes} from './types/AssetsTableQuery';\n\ntype Asset = AssetsTableQuery_assetsOrError_AssetConnection_nodes;\n\nconst getAssetFilterProviders = memoize((assets: Asset[] = []) => {\n  const allTags = {};\n  assets.forEach((asset) => {\n    asset.tags.forEach((tag) => {\n      allTags[tag.key] = tag.value;\n    });\n  });\n  const tagList: string[] = [];\n  Object.keys(allTags).forEach((key) => {\n    tagList.push(`${key}=${allTags[key]}`);\n  });\n  tagList.sort();\n\n  if (!tagList.length) {\n    return [];\n  }\n\n  return [\n    {\n      token: 'tag',\n      values: () => tagList,\n    },\n  ];\n});\n\nexport const filterAssets = (assets: Asset[], query?: string) => {\n  if (!query) {\n    return assets;\n  }\n\n  const tokens = query.split(/\\s+/);\n  const tagFilters = tokens\n    .filter((token) => token.startsWith('tag:'))\n    .map((s) => {\n      const [key, value] = s.substring(4).split('=');\n      return {key, value};\n    });\n  const assetKeyFilters = tokens.filter((token) => !token.startsWith('tag:'));\n\n  return assets\n    .filter((asset) => textMatches(asset.key.path.join(' '), assetKeyFilters.join(' ')))\n    .filter((asset) =>\n      tagFilters.every((filterTag) =>\n        asset.tags.some(\n          (assetTag) => assetTag.key === filterTag.key && assetTag.value === filterTag.value,\n        ),\n      ),\n    );\n};\n\nconst textMatches = (haystack: string, needle: string) =>\n  needle\n    .toLowerCase()\n    .split(' ')\n    .filter((x) => x)\n    .every((word) => haystack.toLowerCase().includes(word));\n\nconst fuseOptions = {threshold: 0.3};\n\nexport const AssetsFilter = ({\n  assets,\n  query,\n  onSetQuery,\n}: {\n  assets: Asset[];\n  query: string | undefined;\n  onSetQuery: (query: string) => void;\n}) => {\n  const [highlight, setHighlight] = React.useState<number>(0);\n  const [shown, setShown] = React.useState<boolean>(false);\n\n  const suggestionProviders = getAssetFilterProviders(assets);\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}};\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders.map((provider) => provider.token);\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token in perProvider) {\n        const {fuse, all} = perProvider[token];\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, query || '');\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      onSetQuery(onSelectSuggestion(suggestion));\n      setHighlight(0);\n    },\n    [onSetQuery, onSelectSuggestion],\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent<any>) => {\n    // Enter and Return confirm the currently selected suggestion or\n    // confirm the freeform text you've typed if no suggestions are shown.\n    if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n      if (suggestions.length) {\n        const picked = suggestions[highlight];\n        if (!picked) {\n          throw new Error('Selection out of sync with suggestions');\n        }\n        onSelect(picked);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      return;\n    }\n\n    // Escape closes the options. The options re-open if you type another char or click.\n    if (e.key === 'Escape') {\n      setHighlight(0);\n      return;\n    }\n\n    const lastResult = suggestions.length - 1;\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      setHighlight(highlight === 0 ? lastResult : highlight - 1);\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      setHighlight(highlight === lastResult ? 0 : highlight + 1);\n    }\n  };\n\n  const onChange = (e: React.ChangeEvent<any>) => {\n    onSetQuery(e.target.value);\n    setHighlight(0);\n  };\n\n  const isOpen = shown && suggestions.length > 0;\n  return (\n    <Popover\n      minimal\n      usePortal\n      isOpen={isOpen}\n      position={'bottom-left'}\n      content={\n        <Menu>\n          {suggestions.map((suggestion, idx) => (\n            <Item\n              key={idx}\n              onMouseDown={(e: React.MouseEvent<any>) => {\n                e.preventDefault();\n                e.stopPropagation();\n                onSelect(suggestion);\n              }}\n              isHighlight={highlight === idx}\n            >\n              <div>\n                <div>{suggestion}</div>\n              </div>\n            </Item>\n          ))}\n        </Menu>\n      }\n    >\n      <InputGroup\n        type=\"text\"\n        value={query}\n        width={300}\n        fill={false}\n        placeholder={`Filter asset_keys...`}\n        hasSuggestions={isOpen}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onBlur={() => setShown(false)}\n        onFocus={() => setShown(true)}\n      />\n    </Popover>\n  );\n};\n\nconst InputGroup = styled(({hasSuggestions, ...props}) => <BlueprintInputGroup {...props} />)`\n  input,\n  input:focus {\n    outline: none;\n    box-shadow: none;\n    border: 1px solid ${Colors.LIGHT_GRAY1};\n    margin-left: 0px;\n    min-width: 600px;\n  }\n\n  input:focus {\n    border-bottom-left-radius: ${({hasSuggestions}) => (hasSuggestions ? 0 : 3)};\n    border-bottom-right-radius: ${({hasSuggestions}) => (hasSuggestions ? 0 : 3)};\n  }\n`;\n\nconst Menu = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 600px;\n  overflow-y: auto;\n  padding: 0;\n`;\nconst Item = styled.li<{\n  readonly isHighlight: boolean;\n}>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.BLUE3 : Colors.WHITE)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.WHITE : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.BLUE3 : Colors.LIGHT_GRAY3)};\n  }\n`;\n","import * as React from 'react';\n\nconst ASSET_VIEW_KEY = 'AssetViewPreference';\n\ntype View = 'flat' | 'directory';\n\ntype Output = [View, (update: View) => void];\n\nexport const useAssetView = () => {\n  const [view, setView] = React.useState<View>(() => {\n    const storedValue = window.localStorage.getItem(ASSET_VIEW_KEY);\n    if (storedValue === 'flat' || storedValue === 'directory') {\n      return storedValue;\n    }\n    return 'flat';\n  });\n\n  const onChange = React.useCallback((update: View) => {\n    window.localStorage.setItem(ASSET_VIEW_KEY, update);\n    setView(update);\n  }, []);\n\n  return React.useMemo(() => [view, onChange], [view, onChange]) as Output;\n};\n","import {\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Colors,\n  IconName,\n  MenuItem,\n  Tab,\n  Tabs,\n  Tag,\n} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport {Select} from '@blueprintjs/select';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useCopyToClipboard} from '../app/browser';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\nimport {Spinner} from '../ui/Spinner';\n\nimport {ExecutionStateDot} from './ExecutionStateDot';\nimport {LogLevel} from './LogLevel';\nimport {LogsFilterInput} from './LogsFilterInput';\nimport {LogFilter, LogFilterValue} from './LogsProvider';\nimport {\n  extractLogCaptureStepsFromLegacySteps,\n  ILogCaptureInfo,\n  IRunMetadataDict,\n  IStepState,\n} from './RunMetadataProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nexport enum LogType {\n  structured = 'structured',\n  stdout = 'stdout',\n  stderr = 'stderr',\n}\n\ninterface ILogsToolbarProps {\n  steps: string[];\n  metadata: IRunMetadataDict;\n\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  logType: LogType;\n  onSetLogType: (logType: LogType) => void;\n  computeLogKey?: string;\n  onSetComputeLogKey: (key: string) => void;\n  computeLogUrl: string | null;\n}\n\nconst logQueryToString = (logQuery: LogFilterValue[]) =>\n  logQuery.map(({token, value}) => (token ? `${token}:${value}` : value)).join(' ');\n\nexport const LogsToolbar: React.FC<ILogsToolbarProps> = (props) => {\n  const {\n    steps,\n    metadata,\n    filter,\n    onSetFilter,\n    logType,\n    onSetLogType,\n    computeLogKey,\n    onSetComputeLogKey,\n    computeLogUrl,\n  } = props;\n  return (\n    <LogsToolbarContainer>\n      <ButtonGroup>\n        <Button\n          icon=\"properties\"\n          title=\"Structured event logs\"\n          active={logType === LogType.structured}\n          onClick={() => onSetLogType(LogType.structured)}\n        />\n        <Button\n          icon=\"console\"\n          title=\"Raw compute logs\"\n          active={logType !== LogType.structured}\n          onClick={() => onSetLogType(LogType.stdout)}\n        />\n      </ButtonGroup>\n      <LogsToolbarDivider />\n      {logType === 'structured' ? (\n        <StructuredLogToolbar filter={filter} onSetFilter={onSetFilter} steps={steps} />\n      ) : (\n        <ComputeLogToolbar\n          steps={steps}\n          metadata={metadata}\n          logType={logType}\n          onSetLogType={onSetLogType}\n          computeLogKey={computeLogKey}\n          onSetComputeLogKey={onSetComputeLogKey}\n          computeLogUrl={computeLogUrl}\n        />\n      )}\n    </LogsToolbarContainer>\n  );\n};\n\nconst resolveState = (metadata: IRunMetadataDict, logCapture: ILogCaptureInfo) => {\n  // resolves the state of potentially many steps into a single state so that we can show the\n  // execution dot representing the status of this log capture group (potentially at the process\n  // level)\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.RUNNING)) {\n    return IStepState.RUNNING;\n  }\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.SKIPPED)) {\n    return IStepState.SKIPPED;\n  }\n  if (\n    logCapture.stepKeys.every((stepKey) => metadata.steps[stepKey].state === IStepState.SUCCEEDED)\n  ) {\n    return IStepState.SUCCEEDED;\n  }\n  return IStepState.FAILED;\n};\n\nconst ComputeLogToolbar = ({\n  steps,\n  metadata,\n  computeLogKey,\n  onSetComputeLogKey,\n  logType,\n  onSetLogType,\n  computeLogUrl,\n}: {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  computeLogKey?: string;\n  onSetComputeLogKey: (step: string) => void;\n  logType: LogType;\n  onSetLogType: (type: LogType) => void;\n  computeLogUrl: string | null;\n}) => {\n  const logCaptureSteps =\n    metadata.logCaptureSteps || extractLogCaptureStepsFromLegacySteps(Object.keys(metadata.steps));\n  const isValidStepSelection = computeLogKey && logCaptureSteps[computeLogKey];\n  const logKeyText = (logKey?: string) => {\n    if (!logKey || !logCaptureSteps[logKey]) {\n      return null;\n    }\n    const captureInfo = logCaptureSteps[logKey];\n    if (captureInfo.stepKeys.length === 1 && logKey === captureInfo.stepKeys[0]) {\n      return logKey;\n    }\n    if (captureInfo.pid) {\n      return `pid: ${captureInfo.pid} (${captureInfo.stepKeys.length} steps)`;\n    }\n    return `${logKey} (${captureInfo.stepKeys.length} steps)`;\n  };\n\n  return (\n    <Box\n      flex={{justifyContent: 'space-between', alignItems: 'center', direction: 'row'}}\n      style={{flex: 1}}\n    >\n      <Group direction=\"row\" spacing={24} alignItems=\"center\">\n        <Select\n          disabled={!steps.length}\n          items={Object.keys(logCaptureSteps)}\n          itemRenderer={(item: string, options: {handleClick: any; modifiers: any}) => (\n            <MenuItem\n              key={item}\n              onClick={options.handleClick}\n              text={logKeyText(item)}\n              active={options.modifiers.active}\n            />\n          )}\n          activeItem={computeLogKey}\n          filterable={false}\n          onItemSelect={(logKey) => {\n            onSetComputeLogKey(logKey);\n          }}\n        >\n          <Button\n            text={logKeyText(computeLogKey) || 'Select a step...'}\n            disabled={!steps.length}\n            rightIcon=\"caret-down\"\n            style={{minHeight: 25}}\n          />\n        </Select>\n        {isValidStepSelection ? (\n          <Tabs selectedTabId={LogType[logType]}>\n            <Tab\n              id={LogType[LogType.stdout]}\n              title={\n                <ButtonLink\n                  color={\n                    logType === LogType.stdout\n                      ? Colors.BLUE1\n                      : {link: Colors.GRAY2, hover: Colors.BLUE1}\n                  }\n                  underline=\"never\"\n                  onClick={() => onSetLogType(LogType.stdout)}\n                >\n                  stdout\n                </ButtonLink>\n              }\n            />\n            <Tab\n              id={LogType[LogType.stderr]}\n              title={\n                <ButtonLink\n                  color={\n                    logType === LogType.stderr\n                      ? Colors.BLUE1\n                      : {link: Colors.GRAY2, hover: Colors.BLUE1}\n                  }\n                  underline=\"never\"\n                  onClick={() => onSetLogType(LogType.stderr)}\n                >\n                  stderr\n                </ButtonLink>\n              }\n            />\n          </Tabs>\n        ) : null}\n      </Group>\n      {isValidStepSelection ? (\n        <Group direction=\"row\" spacing={12} alignItems=\"center\">\n          {computeLogKey && logCaptureSteps[computeLogKey] ? (\n            resolveState(metadata, logCaptureSteps[computeLogKey]) === IStepState.RUNNING ? (\n              <Spinner purpose=\"body-text\" />\n            ) : (\n              <ExecutionStateDot state={resolveState(metadata, logCaptureSteps[computeLogKey])} />\n            )\n          ) : null}\n          {computeLogUrl ? (\n            <a\n              aria-label=\"Download link\"\n              className=\"bp3-button bp3-minimal bp3-icon-download\"\n              href={computeLogUrl}\n              title={\n                computeLogKey && logCaptureSteps[computeLogKey]?.stepKeys.length === 1\n                  ? `Download ${logCaptureSteps[computeLogKey]?.stepKeys[0]} compute logs`\n                  : `Download compute logs`\n              }\n              download\n            ></a>\n          ) : null}\n        </Group>\n      ) : null}\n    </Box>\n  );\n};\n\nconst StructuredLogToolbar = ({\n  filter,\n  onSetFilter,\n  steps,\n}: {\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  steps: string[];\n}) => {\n  const [copyIcon, setCopyIcon] = React.useState<IconName>(IconNames.CLIPBOARD);\n  const logQueryString = logQueryToString(filter.logQuery);\n  const [queryString, setQueryString] = React.useState<string>(() => logQueryString);\n  const copyToClipboard = useCopyToClipboard();\n\n  const selectedStep = filter.logQuery.find((v) => v.token === 'step')?.value || null;\n  const filterText = filter.logQuery.reduce((accum, value) => accum + value.value, '');\n\n  // Reset the query string if the filter is updated, allowing external behavior\n  // (e.g. clicking a Gantt step) to set the input.\n  React.useEffect(() => {\n    setQueryString(logQueryString);\n  }, [logQueryString]);\n\n  const onChange = (value: string) => {\n    const tokens = value.split(/\\s+/);\n    const logQuery = tokens.map((item) => {\n      const segments = item.split(':');\n      if (segments.length > 1) {\n        return {token: segments[0], value: segments[1]};\n      }\n      return {value: segments[0]};\n    });\n    onSetFilter({...filter, logQuery: logQuery as LogFilterValue[]});\n    setQueryString(value);\n  };\n\n  // Restore the clipboard icon after a delay.\n  React.useEffect(() => {\n    let token: any;\n    if (copyIcon === IconNames.SAVED) {\n      token = setTimeout(() => {\n        setCopyIcon(IconNames.CLIPBOARD);\n      }, 2000);\n    }\n    return () => {\n      token && clearTimeout(token);\n    };\n  }, [copyIcon]);\n\n  return (\n    <>\n      <LogsFilterInput\n        value={queryString}\n        suggestionProviders={getRunFilterProviders(steps)}\n        onChange={onChange}\n      />\n      {filterText ? (\n        <NonMatchCheckbox\n          inline\n          checked={filter.hideNonMatches}\n          onChange={(event) =>\n            onSetFilter({...filter, hideNonMatches: event.currentTarget.checked})\n          }\n        >\n          Hide non-matches\n        </NonMatchCheckbox>\n      ) : null}\n      <LogsToolbarDivider />\n      <div style={{display: 'flex'}}>\n        {Object.keys(LogLevel).map((level) => {\n          const enabled = filter.levels[level];\n          return (\n            <FilterTag\n              key={level}\n              intent={enabled ? 'primary' : 'none'}\n              interactive\n              minimal={!enabled}\n              onClick={() =>\n                onSetFilter({\n                  ...filter,\n                  levels: {\n                    ...filter.levels,\n                    [level]: !enabled,\n                  },\n                })\n              }\n              round\n            >\n              {level.toLowerCase()}\n            </FilterTag>\n          );\n        })}\n      </div>\n      {selectedStep && <LogsToolbarDivider />}\n      <div style={{minWidth: 15, flex: 1}} />\n      <div style={{marginRight: '8px'}}>\n        <Button\n          small\n          icon={copyIcon}\n          onClick={() => {\n            copyToClipboard(window.location.href);\n            setCopyIcon(IconNames.SAVED);\n          }}\n          text=\"Copy URL\"\n        />\n      </div>\n    </>\n  );\n};\n\nconst LogsToolbarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: ${Colors.WHITE};\n  align-items: center;\n  padding: 4px 8px;\n  border-bottom: 1px solid ${Colors.GRAY4};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.07);\n  z-index: 2;\n`;\n\nconst NonMatchCheckbox = styled(Checkbox)`\n  &&& {\n    margin: 0 4px 0 12px;\n  }\n\n  white-space: nowrap;\n`;\n\nconst LogsToolbarDivider = styled.div`\n  display: inline-block;\n  width: 1px;\n  height: 30px;\n  margin: 0 8px;\n  border-right: 1px solid ${Colors.LIGHT_GRAY3};\n`;\n\nconst FilterTag = styled(Tag)`\n  margin-right: 8px;\n  text-transform: capitalize;\n  opacity: ${({minimal}) => (minimal ? '0.5' : '1')};\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, Breadcrumbs, BreadcrumbProps} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link, Redirect, RouteComponentProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Loading} from '../ui/Loading';\nimport {Page} from '../ui/Page';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading} from '../ui/Text';\n\nimport {AssetView} from './AssetView';\nimport {AssetsCatalogTable} from './AssetsCatalogTable';\nimport {AssetEntryRootQuery} from './types/AssetEntryRootQuery';\nimport {useAssetView} from './useAssetView';\n\n// Jan 1, 2015 at 00:00 GMT\nconst EARLIEST_TIME = 1420070400000;\n\nexport const AssetEntryRoot: React.FC<RouteComponentProps> = ({location, match}) => {\n  const currentPath: string[] = (match.params['0'] || '')\n    .split('/')\n    .filter((x: string) => x)\n    .map(decodeURIComponent);\n\n  const {pathname, search} = location;\n  const asOf = React.useMemo(() => {\n    const params = new URLSearchParams(search);\n    return params.get('asOf');\n  }, [search]);\n\n  // Validate the `asOf` time, since it's user-specified.\n  const invalidTime = React.useMemo(() => {\n    const asOfNumber = Number(asOf);\n    return asOfNumber && (asOfNumber < EARLIEST_TIME || asOfNumber > Date.now());\n  }, [asOf]);\n\n  const [view] = useAssetView();\n\n  const queryResult = useQuery<AssetEntryRootQuery>(ASSET_ENTRY_ROOT_QUERY, {\n    variables: {assetKey: {path: currentPath}},\n  });\n\n  // If the asOf timestamp is invalid, discard it via redirect.\n  if (invalidTime) {\n    return <Redirect to={pathname} />;\n  }\n\n  const pathDetails = () => {\n    if (currentPath.length === 1 || view !== 'directory') {\n      return <Link to=\"/instance/assets\">Assets</Link>;\n    }\n\n    const breadcrumbs: BreadcrumbProps[] = [];\n    currentPath.slice(0, currentPath.length - 1).reduce((accum: string, elem: string) => {\n      const href = `${accum}/${encodeURIComponent(elem)}`;\n      breadcrumbs.push({text: elem, href});\n      return href;\n    }, '/instance/assets');\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center'}} style={{maxWidth: 500}}>\n        <Box margin={{right: 4}}>\n          <Link to=\"/instance/assets\">Assets</Link>:\n        </Box>\n        <Breadcrumbs\n          breadcrumbRenderer={({text, href}) => (\n            <Link to={href || '#'}>\n              <span style={{fontSize: '14px'}}>{text}</span>\n            </Link>\n          )}\n          items={breadcrumbs}\n        />\n      </Box>\n    );\n  };\n\n  return (\n    <Page>\n      <Group direction=\"column\" spacing={20}>\n        <PageHeader\n          title={\n            view !== 'directory' ? (\n              <Heading>{currentPath[currentPath.length - 1]}</Heading>\n            ) : (\n              <Box flex={{alignItems: 'center'}}>\n                {currentPath\n                  .map<React.ReactNode>((p, i) => <Heading key={i}>{p}</Heading>)\n                  .reduce((prev, curr, i) => [\n                    prev,\n                    <Box key={`separator_${i}`} padding={4}>\n                      <IconWIP name=\"chevron_right\" size={24} />\n                    </Box>,\n                    curr,\n                  ])}\n              </Box>\n            )\n          }\n          icon=\"table_view\"\n          description={<PathDetails>{pathDetails()}</PathDetails>}\n        />\n        <Loading queryResult={queryResult}>\n          {({assetOrError}) => {\n            if (assetOrError.__typename === 'AssetNotFoundError') {\n              return <AssetsCatalogTable prefixPath={currentPath} />;\n            }\n\n            return (\n              <Wrapper>\n                <AssetView assetKey={assetOrError.key} asOf={asOf} />\n              </Wrapper>\n            );\n          }}\n        </Loading>\n      </Group>\n    </Page>\n  );\n};\n\nconst Wrapper = styled.div`\n  flex: 1 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-width: 0;\n  overflow: auto;\n`;\n\nconst PathDetails = styled.div`\n  color: ${Colors.GRAY2};\n\n  .bp3-breadcrumbs {\n    height: auto;\n  }\n\n  .bp3-breadcrumbs-collapsed {\n    position: relative;\n    top: 2px;\n    margin-left: 2px;\n  }\n`;\n\nconst ASSET_ENTRY_ROOT_QUERY = gql`\n  query AssetEntryRootQuery($assetKey: AssetKeyInput!) {\n    assetOrError(assetKey: $assetKey) {\n      __typename\n      ... on Asset {\n        id\n        key {\n          path\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport {RouteComponentProps} from 'react-router-dom';\n\nimport {Group} from '../ui/Group';\nimport {Page} from '../ui/Page';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading} from '../ui/Text';\n\nimport {AssetsCatalogTable} from './AssetsCatalogTable';\n\nexport const AssetsCatalogRoot: React.FunctionComponent<RouteComponentProps> = ({match}) => {\n  const currentPath = (match.params['0'] || '')\n    .split('/')\n    .filter((x: string) => x)\n    .map(decodeURIComponent);\n\n  return (\n    <Page>\n      <Group direction=\"column\" spacing={12}>\n        <PageHeader title={<Heading>Assets</Heading>} />\n        <AssetsCatalogTable prefixPath={currentPath} />\n      </Group>\n    </Page>\n  );\n};\n","import {gql, useSubscription} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ComputeIOType} from '../types/globalTypes';\n\nimport {COMPUTE_LOG_CONTENT_FRAGMENT, MAX_STREAMING_LOG_BYTES} from './ComputeLogContent';\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\nimport {ComputeLogsSubscription} from './types/ComputeLogsSubscription';\nimport {ComputeLogsSubscriptionFragment} from './types/ComputeLogsSubscriptionFragment';\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (\n  a: ComputeLogContentFileFragment | null,\n  b: ComputeLogContentFileFragment | null,\n): ComputeLogContentFileFragment | null => {\n  if (!b) {\n    return a;\n  }\n  let data = a?.data;\n  if (a?.data && b?.data) {\n    data = slice(a.data + b.data);\n  } else if (b?.data) {\n    data = slice(b.data);\n  }\n  return {\n    __typename: b.__typename,\n    path: b.path,\n    downloadUrl: b.downloadUrl,\n    data: typeof data === 'string' ? data : null,\n    cursor: b.cursor,\n  };\n};\n\ninterface State {\n  stepKey: string;\n  stdout: ComputeLogsSubscriptionFragment | null;\n  stderr: ComputeLogsSubscriptionFragment | null;\n  isLoading: boolean;\n}\n\ntype Action =\n  | {type: 'stdout'; stepKey: string; log: ComputeLogsSubscriptionFragment | null}\n  | {type: 'stderr'; stepKey: string; log: ComputeLogsSubscriptionFragment | null};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'stdout':\n      const stdout =\n        action.stepKey === state.stepKey ? merge(state.stdout, action.log) : action.log;\n      return {...state, isLoading: false, stdout};\n    case 'stderr':\n      const stderr =\n        action.stepKey === state.stepKey ? merge(state.stderr, action.log) : action.log;\n      return {...state, isLoading: false, stderr};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stepKey: '',\n  stdout: null,\n  stderr: null,\n  isLoading: true,\n};\n\nexport const useComputeLogs = (runId: string, stepKey?: string) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useSubscription<ComputeLogsSubscription>(COMPUTE_LOGS_SUBSCRIPTION, {\n    fetchPolicy: 'no-cache',\n    variables: {runId, stepKey, ioType: ComputeIOType.STDOUT, cursor: null},\n    skip: !stepKey,\n    onSubscriptionData: ({subscriptionData}) => {\n      if (stepKey) {\n        dispatch({type: 'stdout', stepKey, log: subscriptionData.data?.computeLogs || null});\n      }\n    },\n  });\n\n  useSubscription<ComputeLogsSubscription>(COMPUTE_LOGS_SUBSCRIPTION, {\n    fetchPolicy: 'no-cache',\n    variables: {runId, stepKey, ioType: ComputeIOType.STDERR, cursor: null},\n    skip: !stepKey,\n    onSubscriptionData: ({subscriptionData}) => {\n      if (stepKey) {\n        dispatch({type: 'stderr', stepKey, log: subscriptionData.data?.computeLogs || null});\n      }\n    },\n  });\n\n  return state;\n};\n\nconst COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT = gql`\n  fragment ComputeLogsSubscriptionFragment on ComputeLogFile {\n    data\n    cursor\n    ...ComputeLogContentFileFragment\n  }\n  ${COMPUTE_LOG_CONTENT_FRAGMENT}\n`;\n\nconst COMPUTE_LOGS_SUBSCRIPTION = gql`\n  subscription ComputeLogsSubscription(\n    $runId: ID!\n    $stepKey: String!\n    $ioType: ComputeIOType!\n    $cursor: String\n  ) {\n    computeLogs(runId: $runId, stepKey: $stepKey, ioType: $ioType, cursor: $cursor) {\n      ...ComputeLogsSubscriptionFragment\n    }\n  }\n  ${COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT}\n`;\n","import * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {Box} from '../ui/Box';\nimport {Spinner} from '../ui/Spinner';\n\nimport {ComputeLogContent} from './ComputeLogContent';\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\nimport {useComputeLogs} from './useComputeLogs';\ninterface RunComputeLogs {\n  runId: string;\n  stepKeys: string[];\n  computeLogKey?: string;\n  ioType: string;\n  setComputeLogUrl: (url: string | null) => void;\n}\n\nconst resolveDownloadUrl = (\n  rootServerURI: string,\n  logData: ComputeLogContentFileFragment | null,\n) => {\n  const downloadUrl = logData?.downloadUrl;\n  if (!downloadUrl) {\n    return null;\n  }\n  const isRelativeUrl = (x?: string) => x && x.startsWith('/');\n  return isRelativeUrl(downloadUrl) ? rootServerURI + downloadUrl : downloadUrl;\n};\n\nexport const ComputeLogPanel: React.FC<RunComputeLogs> = React.memo(\n  ({runId, stepKeys, computeLogKey, ioType, setComputeLogUrl}) => {\n    const {rootServerURI} = React.useContext(AppContext);\n    const {isLoading, stdout, stderr} = useComputeLogs(runId, computeLogKey);\n\n    if (!stepKeys.length || !computeLogKey) {\n      return (\n        <Box\n          flex={{justifyContent: 'center', alignItems: 'center'}}\n          style={{flex: 1, height: '100%'}}\n        >\n          <Spinner purpose=\"section\" />\n        </Box>\n      );\n    }\n\n    const logData = ioType === 'stdout' ? stdout : stderr;\n    const downloadUrl = resolveDownloadUrl(rootServerURI, logData);\n\n    return (\n      <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n        <ContentWrapper\n          logData={stdout}\n          isLoading={isLoading}\n          isVisible={ioType === 'stdout'}\n          downloadUrl={downloadUrl}\n          setComputeLogUrl={setComputeLogUrl}\n        />\n        <ContentWrapper\n          logData={stderr}\n          isLoading={isLoading}\n          isVisible={ioType === 'stderr'}\n          downloadUrl={downloadUrl}\n          setComputeLogUrl={setComputeLogUrl}\n        />\n      </div>\n    );\n  },\n);\n\nconst ContentWrapper = ({\n  isLoading,\n  isVisible,\n  logData,\n  downloadUrl,\n  setComputeLogUrl,\n}: {\n  isVisible: boolean;\n  isLoading: boolean;\n  logData: ComputeLogContentFileFragment | null;\n  downloadUrl: string | null;\n  setComputeLogUrl: (url: string | null) => void;\n}) => {\n  React.useEffect(() => {\n    setComputeLogUrl(downloadUrl);\n  }, [setComputeLogUrl, downloadUrl]);\n  return (\n    <ComputeLogContent\n      logData={logData}\n      isLoading={isLoading}\n      isVisible={isVisible}\n      downloadUrl={downloadUrl}\n    />\n  );\n};\n","import {gql, useApolloClient, useQuery, useSubscription} from '@apollo/client';\nimport throttle from 'lodash/throttle';\nimport * as React from 'react';\n\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {PipelineRunStatus} from '../types/globalTypes';\nimport {TokenizingFieldValue} from '../ui/TokenizingField';\n\nimport {RunFragments} from './RunFragments';\nimport {PipelineRunLogsSubscription} from './types/PipelineRunLogsSubscription';\nimport {PipelineRunLogsSubscriptionStatusFragment} from './types/PipelineRunLogsSubscriptionStatusFragment';\nimport {RunLogsQuery} from './types/RunLogsQuery';\nimport {RunPipelineRunEventFragment} from './types/RunPipelineRunEventFragment';\n\nexport interface LogFilterValue extends TokenizingFieldValue {\n  token?: 'step' | 'type' | 'query';\n}\n\nexport interface LogFilter {\n  logQuery: LogFilterValue[];\n  levels: {[key: string]: boolean};\n  focusedTime: number;\n  sinceTime: number;\n  hideNonMatches: boolean;\n}\n\ntype LogNode = RunPipelineRunEventFragment & {clientsideKey: string};\ntype Nodes = LogNode[];\n\nexport interface LogsProviderLogs {\n  allNodes: LogNode[];\n  loading: boolean;\n}\n\nconst pipelineStatusFromMessages = (messages: RunPipelineRunEventFragment[]) => {\n  const reversed = [...messages].reverse();\n  for (const message of reversed) {\n    const {__typename} = message;\n    switch (__typename) {\n      case 'PipelineStartEvent':\n        return PipelineRunStatus.STARTED;\n      case 'PipelineEnqueuedEvent':\n        return PipelineRunStatus.QUEUED;\n      case 'PipelineStartingEvent':\n        return PipelineRunStatus.STARTING;\n      case 'PipelineCancelingEvent':\n        return PipelineRunStatus.CANCELING;\n      case 'PipelineCanceledEvent':\n        return PipelineRunStatus.CANCELED;\n      case 'PipelineSuccessEvent':\n        return PipelineRunStatus.SUCCESS;\n      case 'PipelineFailureEvent':\n        return PipelineRunStatus.FAILURE;\n    }\n  }\n  return null;\n};\n\nconst BATCH_INTERVAL = 100;\n\ntype State = {\n  nodes: Nodes;\n  cursor: number;\n  loading: boolean;\n};\n\ntype Action =\n  | {type: 'append'; queued: RunPipelineRunEventFragment[]; hasMore: boolean}\n  | {type: 'set-cursor'}\n  | {type: 'reset'};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'append':\n      const nodes = [...state.nodes, ...action.queued].map((m, idx) => ({\n        ...m,\n        clientsideKey: `csk${idx}`,\n      }));\n      return {...state, nodes, loading: action.hasMore};\n    case 'set-cursor':\n      return {...state, cursor: state.nodes.length - 1};\n    case 'reset':\n      return {nodes: [], cursor: -1, loading: true};\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  nodes: [],\n  cursor: -1,\n  loading: true,\n};\n\nconst useLogsProviderWithSubscription = (runId: string) => {\n  const client = useApolloClient();\n  const {websocketClient} = React.useContext(WebSocketContext);\n  const queue = React.useRef<RunPipelineRunEventFragment[]>([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const syncPipelineStatusToApolloCache = React.useCallback(\n    (status: PipelineRunStatus) => {\n      const local = client.readFragment<PipelineRunLogsSubscriptionStatusFragment>({\n        fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n        fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n        id: `PipelineRun:${runId}`,\n      });\n\n      if (local) {\n        const toWrite = {...local, status};\n        if (\n          status === PipelineRunStatus.FAILURE ||\n          status === PipelineRunStatus.SUCCESS ||\n          status === PipelineRunStatus.STARTING ||\n          status === PipelineRunStatus.CANCELING ||\n          status === PipelineRunStatus.CANCELED\n        ) {\n          toWrite.canTerminate = false;\n        }\n        client.writeFragment({\n          fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n          fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n          id: `PipelineRun:${runId}`,\n          data: toWrite,\n        });\n      }\n    },\n    [client, runId],\n  );\n\n  // If the WebSocket disconnects, move the cursor to the end to ensure that we don't\n  // incorrectly refetch logs that we already have.\n  React.useEffect(() => {\n    const unlisten = websocketClient?.onDisconnected(() => dispatch({type: 'set-cursor'}));\n    return () => unlisten && unlisten();\n  }, [websocketClient]);\n\n  React.useEffect(() => {\n    queue.current = [];\n    dispatch({type: 'reset'});\n  }, [runId]);\n\n  // Batch the nodes together so they don't overwhelm the animation of the Gantt,\n  // which depends on a bit of a timing delay to maintain smoothness.\n  const throttledSetNodes = React.useMemo(() => {\n    return throttle((hasMore: boolean) => {\n      const queued = [...queue.current];\n      queue.current = [];\n      dispatch({type: 'append', queued, hasMore});\n    }, BATCH_INTERVAL);\n  }, []);\n\n  const {nodes, cursor, loading} = state;\n\n  useSubscription<PipelineRunLogsSubscription>(PIPELINE_RUN_LOGS_SUBSCRIPTION, {\n    fetchPolicy: 'no-cache',\n    variables: {runId, after: cursor},\n    onSubscriptionData: ({subscriptionData}) => {\n      const logs = subscriptionData.data?.pipelineRunLogs;\n      if (!logs || logs.__typename === 'PipelineRunLogsSubscriptionFailure') {\n        return;\n      }\n\n      const {messages, hasMorePastEvents} = logs;\n      const nextPipelineStatus = pipelineStatusFromMessages(messages);\n\n      // If we're still loading past events, don't sync to the cache -- event chunks could\n      // give us `status` values that don't match the actual state of the run.\n      if (nextPipelineStatus && !hasMorePastEvents) {\n        syncPipelineStatusToApolloCache(nextPipelineStatus);\n      }\n\n      // Maintain a queue of messages as they arrive, and call the throttled setter.\n      queue.current = [...queue.current, ...messages];\n      throttledSetNodes(hasMorePastEvents);\n    },\n  });\n\n  return React.useMemo(\n    () => (nodes !== null ? {allNodes: nodes, loading} : {allNodes: [], loading}),\n    [loading, nodes],\n  );\n};\n\ninterface LogsProviderProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst LogsProviderWithSubscription: React.FC<LogsProviderProps> = (props) => {\n  const state = useLogsProviderWithSubscription(props.runId);\n  return <>{props.children(state)}</>;\n};\n\ninterface LogsProviderWithQueryProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst POLL_INTERVAL = 5000;\n\nconst LogsProviderWithQuery = (props: LogsProviderWithQueryProps) => {\n  const {children, runId} = props;\n  const [nodes, setNodes] = React.useState<LogNode[]>(() => []);\n  const [after, setAfter] = React.useState<number>(-1);\n\n  const {stopPolling, startPolling} = useQuery<RunLogsQuery>(RUN_LOGS_QUERY, {\n    notifyOnNetworkStatusChange: true,\n    variables: {runId, after},\n    pollInterval: POLL_INTERVAL,\n    onCompleted: (data: RunLogsQuery) => {\n      // We have to stop polling in order to update the `after` value.\n      stopPolling();\n\n      const slice = () => {\n        const count = nodes.length;\n        if (data?.pipelineRunOrError.__typename === 'PipelineRun') {\n          return data?.pipelineRunOrError.events.map((event, ii) => ({\n            ...event,\n            clientsideKey: `csk${count + ii}`,\n          }));\n        }\n        return [];\n      };\n\n      const newSlice = slice();\n      setNodes((current) => [...current, ...newSlice]);\n      setAfter((current) => current + newSlice.length);\n\n      const status =\n        data?.pipelineRunOrError.__typename === 'PipelineRun'\n          ? data?.pipelineRunOrError.status\n          : null;\n\n      if (\n        status &&\n        status !== PipelineRunStatus.FAILURE &&\n        status !== PipelineRunStatus.SUCCESS &&\n        status !== PipelineRunStatus.CANCELED\n      ) {\n        startPolling(POLL_INTERVAL);\n      }\n    },\n  });\n\n  return (\n    <>\n      {children(\n        nodes !== null && nodes.length > 0\n          ? {allNodes: nodes, loading: false}\n          : {allNodes: [], loading: true},\n      )}\n    </>\n  );\n};\n\nexport const LogsProvider: React.FC<LogsProviderProps> = (props) => {\n  const {children, runId} = props;\n  const {availability} = React.useContext(WebSocketContext);\n\n  if (availability === 'attempting-to-connect') {\n    return <>{children({allNodes: [], loading: true})}</>;\n  }\n\n  if (availability === 'unavailable') {\n    return <LogsProviderWithQuery runId={runId}>{children}</LogsProviderWithQuery>;\n  }\n\n  return <LogsProviderWithSubscription runId={runId}>{children}</LogsProviderWithSubscription>;\n};\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION = gql`\n  subscription PipelineRunLogsSubscription($runId: ID!, $after: Cursor) {\n    pipelineRunLogs(runId: $runId, after: $after) {\n      __typename\n      ... on PipelineRunLogsSubscriptionSuccess {\n        messages {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunPipelineRunEventFragment\n        }\n        hasMorePastEvents\n      }\n      ... on PipelineRunLogsSubscriptionFailure {\n        missingRunId\n        message\n      }\n    }\n  }\n\n  ${RunFragments.RunPipelineRunEventFragment}\n`;\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT = gql`\n  fragment PipelineRunLogsSubscriptionStatusFragment on PipelineRun {\n    id\n    runId\n    status\n    canTerminate\n  }\n`;\n\nconst RUN_LOGS_QUERY = gql`\n  query RunLogsQuery($runId: ID!, $after: Cursor) {\n    pipelineRunOrError(runId: $runId) {\n      ... on PipelineRun {\n        id\n        runId\n        status\n        canTerminate\n        events(after: $after) {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunPipelineRunEventFragment\n          __typename\n        }\n      }\n    }\n  }\n  ${RunFragments.RunPipelineRunEventFragment}\n`;\n","import {Colors} from '@blueprintjs/core';\nimport styled from 'styled-components/macro';\n\nimport {IStepState} from './RunMetadataProvider';\n\nexport const ExecutionStateDot = styled.div<{state: IStepState}>`\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  border-radius: 5.5px;\n  transition: background 200ms linear;\n  background: ${({state}) =>\n    ({\n      [IStepState.RUNNING]: Colors.GRAY3,\n      [IStepState.SUCCEEDED]: Colors.GREEN2,\n      [IStepState.SKIPPED]: Colors.GOLD3,\n      [IStepState.FAILED]: Colors.RED3,\n      [IStepState.PREPARING]: Colors.RED3,\n      [IStepState.RETRY_REQUESTED]: Colors.RED3,\n      [IStepState.UNKNOWN]: Colors.RED3,\n    }[state])};\n  &:hover {\n    background: ${({state}) =>\n      ({\n        [IStepState.RUNNING]: Colors.GRAY3,\n        [IStepState.SUCCEEDED]: Colors.GREEN2,\n        [IStepState.SKIPPED]: Colors.GOLD3,\n        [IStepState.FAILED]: Colors.RED5,\n        [IStepState.PREPARING]: Colors.RED3,\n        [IStepState.RETRY_REQUESTED]: Colors.RED3,\n        [IStepState.UNKNOWN]: Colors.RED3,\n      }[state])};\n  }\n`;\n","import {Colors, Popover} from '@blueprintjs/core';\nimport Fuse from 'fuse.js';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {SuggestionProvider} from '../ui/TokenizingField';\nimport {useSuggestionsForString} from '../ui/useSuggestionsForString';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n  suggestionProviders: SuggestionProvider[];\n}\n\ntype Action =\n  | {type: 'show-popover'}\n  | {type: 'hide-popover'}\n  | {type: 'highlight'; highlight: number}\n  | {type: 'change-query'}\n  | {type: 'select-suggestion'};\n\ntype State = {\n  shown: boolean;\n  highlight: number;\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'show-popover':\n      return {...state, shown: true};\n    case 'hide-popover':\n      return {...state, shown: false};\n    case 'highlight':\n      return {...state, highlight: action.highlight};\n    case 'change-query':\n      return {...state, shown: true, highlight: 0};\n    case 'select-suggestion':\n      return {...state, highlight: 0};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  shown: false,\n  highlight: 0,\n};\n\nconst fuseOptions = {\n  threshold: 0.3,\n};\n\nexport const LogsFilterInput: React.FC<Props> = (props) => {\n  const {value, onChange, suggestionProviders} = props;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {shown, highlight} = state;\n\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}};\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders.map((provider) => provider.token);\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token in perProvider) {\n        const {fuse, all} = perProvider[token];\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, value);\n\n  const numResults = suggestions.length;\n  const highlightedResult = suggestions[highlight] || null;\n\n  const onInputChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({type: 'change-query'});\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      dispatch({type: 'select-suggestion'});\n      onChange(onSelectSuggestion(suggestion));\n    },\n    [onChange, onSelectSuggestion],\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const {key} = e;\n    if (key === 'Escape') {\n      dispatch({type: 'hide-popover'});\n      return;\n    }\n\n    if (!numResults) {\n      return;\n    }\n\n    const lastResult = numResults - 1;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === 0 ? lastResult : highlight - 1});\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === lastResult ? 0 : highlight + 1});\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedResult) {\n          onSelect(highlightedResult);\n        }\n    }\n  };\n\n  return (\n    <Popover\n      minimal\n      usePortal\n      isOpen={shown && suggestions.length > 0}\n      position=\"bottom-left\"\n      content={\n        <Results>\n          {suggestions.map((suggestion, ii) => (\n            <ResultItem\n              key={suggestion}\n              suggestion={suggestion}\n              isHighlight={highlight === ii}\n              onSelect={onSelect}\n            />\n          ))}\n        </Results>\n      }\n    >\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Filter…\"\n        spellCheck={false}\n        autoCorrect=\"off\"\n        value={value}\n        onChange={onInputChange}\n        onFocus={() => dispatch({type: 'show-popover'})}\n        onBlur={() => dispatch({type: 'hide-popover'})}\n        onKeyDown={onKeyDown}\n        style={{}}\n      />\n    </Popover>\n  );\n};\n\nconst ResultItem: React.FC<{\n  suggestion: string;\n  isHighlight: boolean;\n  onSelect: (suggestion: string) => void;\n}> = (props) => {\n  const {suggestion, isHighlight, onSelect} = props;\n  const element = React.useRef<HTMLLIElement>(null);\n\n  React.useEffect(() => {\n    if (element.current && isHighlight) {\n      element.current.scrollIntoView({block: 'nearest'});\n    }\n  }, [isHighlight]);\n\n  return (\n    <Item\n      ref={element}\n      isHighlight={isHighlight}\n      onMouseDown={(e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        onSelect(suggestion);\n      }}\n    >\n      {suggestion}\n    </Item>\n  );\n};\n\nconst FilterInput = styled.input`\n  border: 1px solid ${Colors.GRAY5};\n  border-radius: 3px;\n  padding: 4px 6px;\n  font-size: 12px;\n  width: 300px;\n`;\n\nconst Results = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 300px;\n  overflow-y: auto;\n  padding: 0;\n`;\n\ninterface HighlightableTextProps {\n  readonly isHighlight: boolean;\n}\n\nconst Item = styled.li<HighlightableTextProps>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.BLUE3 : Colors.WHITE)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.WHITE : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.BLUE3 : Colors.LIGHT_GRAY3)};\n  }\n`;\n","import memoize from 'lodash/memoize';\n\nimport {DagsterEventType} from '../types/globalTypes';\n\nconst typeValues = memoize(() => Object.values(DagsterEventType).sort());\n\nexport const getRunFilterProviders = memoize(\n  (stepNames: string[] = []) => {\n    return [\n      {\n        token: 'step',\n        values: () => stepNames,\n      },\n      {\n        token: 'type',\n        values: typeValues,\n      },\n      {\n        token: 'query',\n        values: () => [],\n      },\n    ];\n  },\n  (stepNames: string[] = []) => JSON.stringify(stepNames),\n);\n","import {Button, IconName, Intent} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {LaunchButtonConfiguration, LaunchButtonDropdown} from '../execute/LaunchButton';\nimport {PipelineRunStatus} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {buildRepoPath} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {IRunMetadataDict, IStepState} from './RunMetadataProvider';\nimport {doneStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {ReExecutionStyle} from './RunUtils';\nimport {StepSelection} from './StepSelection';\nimport {TerminationDialog, TerminationState} from './TerminationDialog';\nimport {RunFragment} from './types/RunFragment';\n\ninterface RunActionButtonsProps {\n  run: RunFragment;\n  selection: StepSelection;\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  onLaunch: (style: ReExecutionStyle) => Promise<void>;\n}\n\nconst CancelRunButton: React.FC<{run: RunFragment | undefined; isFinalStatus: boolean}> = ({\n  run,\n  isFinalStatus,\n}) => {\n  const [showDialog, setShowDialog] = React.useState<boolean>(false);\n  const closeDialog = React.useCallback(() => setShowDialog(false), []);\n\n  const onComplete = React.useCallback(\n    (terminationState: TerminationState) => {\n      const {errors} = terminationState;\n      const error = run?.id && errors[run.id];\n      if (error && 'message' in error) {\n        SharedToaster.show({\n          message: error.message,\n          icon: 'error',\n          intent: Intent.DANGER,\n        });\n      }\n    },\n    [run?.id],\n  );\n\n  if (!run) {\n    return null;\n  }\n\n  return (\n    <>\n      {!isFinalStatus ? (\n        <Button\n          icon={IconNames.STOP}\n          small={true}\n          text=\"Terminate\"\n          intent=\"warning\"\n          disabled={showDialog}\n          onClick={() => setShowDialog(true)}\n        />\n      ) : null}\n      <TerminationDialog\n        isOpen={showDialog}\n        onClose={closeDialog}\n        onComplete={onComplete}\n        selectedRuns={{[run.id]: run.canTerminate}}\n      />\n    </>\n  );\n};\n\nfunction stepSelectionWithState(selection: StepSelection, metadata: IRunMetadataDict) {\n  const stepStates = selection.keys.map(\n    (key) => (key && metadata.steps[key]?.state) || IStepState.PREPARING,\n  );\n\n  return {\n    ...selection,\n    present: selection.keys.length > 0,\n    failed: selection.keys.length && stepStates.includes(IStepState.FAILED),\n    finished: stepStates.every((stepState) =>\n      [IStepState.FAILED, IStepState.SUCCEEDED].includes(stepState),\n    ),\n  };\n}\n\nfunction stepSelectionFromRunTags(\n  run: RunFragment,\n  graph: GraphQueryItem[],\n  metadata: IRunMetadataDict,\n) {\n  const tag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  if (!tag) {\n    return null;\n  }\n  return stepSelectionWithState(\n    {keys: filterByQuery(graph, tag.value).all.map((k) => k.name), query: tag.value},\n    metadata,\n  );\n}\n\nexport const RunActionButtons: React.FC<RunActionButtonsProps> = (props) => {\n  const {metadata, graph, onLaunch, run} = props;\n  const artifactsPersisted = run?.executionPlan?.artifactsPersisted;\n  const {canLaunchPipelineReexecution} = usePermissions();\n  const pipelineError = usePipelineAvailabilityErrorForRun(run);\n\n  const selection = stepSelectionWithState(props.selection, metadata);\n  const selectionOfCurrentRun = stepSelectionFromRunTags(run, graph, metadata);\n\n  const isFinalStatus = !!doneStatuses.has(run.status);\n  const isFailedWithPlan =\n    run.executionPlan &&\n    (run.status === PipelineRunStatus.FAILURE || run.status === PipelineRunStatus.CANCELED);\n\n  const full: LaunchButtonConfiguration = {\n    icon: 'repeat',\n    scope: '*',\n    title: 'All Steps in Root Run',\n    tooltip: 'Re-execute the pipeline run from scratch',\n    disabled: !isFinalStatus,\n    onClick: () => onLaunch({type: 'all'}),\n  };\n\n  const same: LaunchButtonConfiguration = {\n    icon: 'select',\n    scope: selectionOfCurrentRun?.query || '*',\n    title: 'Same Steps',\n    disabled:\n      !selectionOfCurrentRun || !(selectionOfCurrentRun.finished || selectionOfCurrentRun.failed),\n    tooltip: (\n      <div>\n        {!selectionOfCurrentRun || !selectionOfCurrentRun.present\n          ? 'Re-executes the same step subset used for this run if one was present.'\n          : !selectionOfCurrentRun.finished\n          ? 'Wait for all of the steps to finish to re-execute the same subset.'\n          : 'Re-execute the same step subset used for this run:'}\n        <StepSelectionDescription selection={selectionOfCurrentRun} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection: selectionOfCurrentRun!}),\n  };\n\n  const selected: LaunchButtonConfiguration = {\n    icon: 'select',\n    scope: selection.query,\n    title: selection.keys.length > 1 ? 'Selected Steps' : 'Selected Step',\n    disabled: !selection.present || !(selection.finished || selection.failed),\n    tooltip: (\n      <div>\n        {!selection.present\n          ? 'Select a step or type a step subset to re-execute.'\n          : !selection.finished\n          ? 'Wait for the steps to finish to re-execute them.'\n          : 'Re-execute the selected steps with existing configuration:'}\n        <StepSelectionDescription selection={selection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection}),\n  };\n\n  const fromSelected: LaunchButtonConfiguration = {\n    icon: 'inheritance',\n    title: 'From Selected',\n    disabled: !isFinalStatus || selection.keys.length !== 1,\n    tooltip: 'Re-execute the pipeline downstream from the selected steps',\n    onClick: () => {\n      if (!run.executionPlan) {\n        console.warn('Run execution plan must be present to launch from-selected execution');\n        return Promise.resolve();\n      }\n      const selectionAndDownstreamQuery = selection.keys.map((k) => `${k}*`).join(',');\n      const selectionKeys = filterByQuery(graph, selectionAndDownstreamQuery).all.map(\n        (node) => node.name,\n      );\n\n      return onLaunch({\n        type: 'selection',\n        selection: {\n          keys: selectionKeys,\n          query: selectionAndDownstreamQuery,\n        },\n      });\n    },\n  };\n\n  const fromFailure: LaunchButtonConfiguration = {\n    icon: 'redo',\n    title: 'From Failure',\n    disabled: !isFailedWithPlan,\n    tooltip: !isFailedWithPlan\n      ? 'Retry is only enabled when the pipeline has failed.'\n      : 'Retry the pipeline run, skipping steps that completed successfully',\n    onClick: () => onLaunch({type: 'from-failure'}),\n  };\n\n  if (!artifactsPersisted) {\n    [selected, same, fromFailure, fromSelected].forEach((option) => {\n      option.disabled = true;\n      option.title =\n        'Retry and re-execute are only enabled on persistent storage. Try rerunning with a different storage configuration.';\n    });\n  }\n\n  const options = [full, same, selected, fromSelected, fromFailure];\n  const preferredRerun = selection.present\n    ? selected\n    : selectionOfCurrentRun?.present\n    ? same\n    : null;\n  const primary = artifactsPersisted && preferredRerun ? preferredRerun : full;\n\n  const tooltip = () => {\n    if (pipelineError?.tooltip) {\n      return pipelineError?.tooltip;\n    }\n    return canLaunchPipelineReexecution ? undefined : DISABLED_MESSAGE;\n  };\n\n  return (\n    <Group direction=\"row\" spacing={8}>\n      <Box flex={{direction: 'row'}}>\n        <LaunchButtonDropdown\n          runCount={1}\n          small={true}\n          primary={primary}\n          options={options}\n          title={primary.scope === '*' ? `Re-execute All (*)` : `Re-execute (${primary.scope})`}\n          tooltip={tooltip()}\n          icon={pipelineError?.icon}\n          disabled={pipelineError?.disabled || !canLaunchPipelineReexecution}\n        />\n      </Box>\n      <CancelRunButton run={run} isFinalStatus={isFinalStatus} />\n    </Group>\n  );\n};\n\nfunction usePipelineAvailabilityErrorForRun(\n  run: RunFragment | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} {\n  const repoMatch = useRepositoryForRun(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (run?.pipeline.__typename === 'UnknownPipeline') {\n    return {\n      icon: IconNames.ERROR,\n      tooltip: `\"${run.pipeline.name}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the pipeline. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: IconNames.WARNING_SIGN,\n        tooltip: `The pipeline \"${run.pipeline.name}\" may be a different version from the original pipeline run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      return {\n        icon: IconNames.WARNING_SIGN,\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The pipeline \"${run.pipeline.name}\" is not in the same repository as the original pipeline run.`}</div>\n            {run.repositoryOrigin ? (\n              <div>\n                Original repository:{' '}\n                <strong>\n                  {run.repositoryOrigin.repositoryName}@\n                  {run.repositoryOrigin.repositoryLocationName}\n                </strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the pipeline name matched. This could be from any repo in the workspace.\n    return {\n      icon: IconNames.WARNING_SIGN,\n      tooltip: `The pipeline \"${run.pipeline.name}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this pipeline. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipeline.name}\" is not available in the current workspace.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load repository ${buildRepoPath(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: IconNames.ERROR,\n    tooltip,\n    disabled: true,\n  };\n}\n\nconst StepSelectionDescription: React.FunctionComponent<{selection: StepSelection | null}> = ({\n  selection,\n}) => (\n  <div style={{paddingLeft: '10px'}}>\n    {(selection?.keys || []).map((step) => (\n      <span key={step} style={{display: 'block'}}>{`* ${step}`}</span>\n    ))}\n  </div>\n);\n","import * as React from 'react';\n\nimport {RunFragment} from './types/RunFragment';\n\nconst initialContext = undefined;\nexport const RunContext = React.createContext<RunFragment | undefined>(initialContext);\n","import {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {tokenizedValueFromString} from '../ui/TokenizingField';\n\nimport {DefaultLogLevels, LogLevel} from './LogLevel';\nimport {LogFilter} from './LogsProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nconst DELIMITER = '|';\n\nfunction levelsToQuery(levels: string[]): string {\n  return levels\n    .sort()\n    .map((key) => key.toLowerCase())\n    .join(DELIMITER);\n}\n\nexport const DefaultQuerystring: {[key: string]: string} = {\n  steps: '*',\n  logs: '',\n  levels: levelsToQuery(DefaultLogLevels),\n  hideNonMatches: 'true',\n  focusedTime: '',\n};\n\n/**\n * Query parameter structure, all optional:\n *\n * `steps`\n *   - string (selection syntax)\n *   - Initializes step selection in Gantt chart\n * `logs`\n *   - string (comma-separated foo:bar tokens or free text)\n *   - Initializes log filter input\n * `levels`\n *   - string (comma-separated values)\n *   - Initializes levels in log filter\n * `focusedTime`\n *   - string (unix timestamp with msec)\n *   - Scrolls directly to log with specified time, if no `logs` filter\n */\nexport const decodeRunPageFilters = (qs: {[key: string]: string}) => {\n  const logValues = qs['logs'].split(DELIMITER);\n  const focusedTime = qs['focusedTime'] && !qs['logs'] ? Number(qs['focusedTime']) : null;\n  const hideNonMatches = qs['hideNonMatches'] === 'true' ? true : false;\n\n  const providers = getRunFilterProviders();\n  const logQuery = logValues.map((token) => tokenizedValueFromString(token, providers));\n\n  const levelsValues = qs['levels'].split(DELIMITER);\n\n  return {\n    sinceTime: 0,\n    focusedTime,\n    hideNonMatches,\n    logQuery,\n    levels: levelsValues\n      .map((level) => level.toUpperCase())\n      .filter((level) => LogLevel.hasOwnProperty(level))\n      .reduce((accum, level) => ({...accum, [level]: true}), {}),\n  } as LogFilter;\n};\n\nexport function encodeRunPageFilters(filter: LogFilter) {\n  const logQueryTokenStrings = filter.logQuery.map((v) =>\n    v.token ? `${v.token}:${v.value}` : v.value,\n  );\n\n  return {\n    hideNonMatches: filter.hideNonMatches ? 'true' : 'false',\n    focusedTime: filter.focusedTime || '',\n    logs: logQueryTokenStrings.join(DELIMITER),\n    levels: levelsToQuery(Object.keys(filter.levels).filter((key) => !!filter.levels[key])),\n  };\n}\n\nexport function useQueryPersistedLogFilter() {\n  return useQueryPersistedState<LogFilter>({\n    encode: encodeRunPageFilters,\n    decode: decodeRunPageFilters,\n    defaults: DefaultQuerystring,\n  });\n}\n","import * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {PipelineRunStatus} from '../types/globalTypes';\n\nconst link = (document.querySelector(\"link[rel*='icon']\") ||\n  document.createElement('link')) as HTMLLinkElement;\nlink.type = 'image/x-icon';\nlink.rel = 'shortcut icon';\ndocument.getElementsByTagName('head')[0].appendChild(link);\n\nconst FaviconsForStatus = {\n  [PipelineRunStatus.FAILURE]: '/favicon_failed.ico',\n  [PipelineRunStatus.CANCELED]: '/favicon_failed.ico',\n  [PipelineRunStatus.STARTED]: '/favicon_pending.ico',\n  [PipelineRunStatus.NOT_STARTED]: '/favicon_pending.ico',\n  [PipelineRunStatus.STARTING]: '/favicon_pending.ico',\n  [PipelineRunStatus.CANCELING]: '/favicon_pending.ico',\n  [PipelineRunStatus.QUEUED]: '/favicon_pending.ico',\n  [PipelineRunStatus.SUCCESS]: '/favicon_success.ico',\n};\n\nexport const useRunFavicon = (status: PipelineRunStatus | undefined) => {\n  const {basePath} = React.useContext(AppContext);\n\n  const filePath = status ? FaviconsForStatus[status] : '/favicon.ico';\n  const faviconHref = `${basePath}${filePath}`;\n\n  React.useEffect(() => {\n    link.href = faviconHref;\n    return () => {\n      link.href = '/favicon.ico';\n    };\n  }, [faviconHref]);\n};\n","import {useMutation} from '@apollo/client';\nimport {NonIdealState} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {showLaunchError} from '../execute/showLaunchError';\nimport {GanttChart, GanttChartLoadingState, GanttChartMode, QueuedState} from '../gantt/GanttChart';\nimport {toGraphQueryItems} from '../gantt/toGraphQueryItems';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {FirstOrSecondPanelToggle, SplitPanelContainer} from '../ui/SplitPanelContainer';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {ComputeLogPanel} from './ComputeLogPanel';\nimport {LogFilter, LogsProvider, LogsProviderLogs} from './LogsProvider';\nimport {LogsScrollingTable} from './LogsScrollingTable';\nimport {LogsToolbar, LogType} from './LogsToolbar';\nimport {RunActionButtons} from './RunActionButtons';\nimport {RunContext} from './RunContext';\nimport {IRunMetadataDict, RunMetadataProvider} from './RunMetadataProvider';\nimport {\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  getReexecutionVariables,\n  handleLaunchResult,\n  ReExecutionStyle,\n} from './RunUtils';\nimport {\n  LaunchPipelineReexecution,\n  LaunchPipelineReexecutionVariables,\n} from './types/LaunchPipelineReexecution';\nimport {RunFragment} from './types/RunFragment';\nimport {\n  RunPipelineRunEventFragment,\n  RunPipelineRunEventFragment_ExecutionStepFailureEvent,\n} from './types/RunPipelineRunEventFragment';\nimport {useQueryPersistedLogFilter} from './useQueryPersistedLogFilter';\nimport {useRunFavicon} from './useRunFavicon';\n\ninterface RunProps {\n  runId: string;\n  run?: RunFragment;\n}\n\nexport const Run: React.FC<RunProps> = (props) => {\n  const {run, runId} = props;\n  const [logsFilter, setLogsFilter] = useQueryPersistedLogFilter();\n  const [selectionQuery, setSelectionQuery] = useQueryPersistedState<string>({\n    queryKey: 'selection',\n    defaults: {selection: ''},\n  });\n\n  useRunFavicon(run?.status);\n  useDocumentTitle(run ? `${run.pipeline.name} ${runId} [${run.status}]` : `Run: ${runId}`);\n\n  const onShowStateDetails = (stepKey: string, logs: RunPipelineRunEventFragment[]) => {\n    const errorNode = logs.find(\n      (node) => node.__typename === 'ExecutionStepFailureEvent' && node.stepKey === stepKey,\n    ) as RunPipelineRunEventFragment_ExecutionStepFailureEvent;\n\n    if (errorNode) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={errorNode} />,\n      });\n    }\n  };\n\n  const onSetSelectionQuery = (query: string) => {\n    setSelectionQuery(query);\n    setLogsFilter({\n      ...logsFilter,\n      logQuery: query !== '*' ? [{token: 'query', value: query}] : [],\n    });\n  };\n\n  return (\n    <RunContext.Provider value={run}>\n      <LogsProvider key={runId} runId={runId}>\n        {(logs) => (\n          <RunMetadataProvider logs={logs.allNodes}>\n            {(metadata) => (\n              <RunWithData\n                run={run}\n                runId={runId}\n                logs={logs}\n                logsFilter={logsFilter}\n                metadata={metadata}\n                selectionQuery={selectionQuery}\n                onSetLogsFilter={setLogsFilter}\n                onSetSelectionQuery={onSetSelectionQuery}\n                onShowStateDetails={onShowStateDetails}\n              />\n            )}\n          </RunMetadataProvider>\n        )}\n      </LogsProvider>\n    </RunContext.Provider>\n  );\n};\n\ninterface RunWithDataProps {\n  run?: RunFragment;\n  runId: string;\n  selectionQuery: string;\n  logs: LogsProviderLogs;\n  logsFilter: LogFilter;\n  metadata: IRunMetadataDict;\n  onSetLogsFilter: (v: LogFilter) => void;\n  onSetSelectionQuery: (query: string) => void;\n  onShowStateDetails: (stepKey: string, logs: RunPipelineRunEventFragment[]) => void;\n}\n\nconst logTypeFromQuery = (queryLogType: string) => {\n  switch (queryLogType) {\n    case 'stdout':\n      return LogType.stdout;\n    case 'stderr':\n      return LogType.stderr;\n    default:\n      return LogType.structured;\n  }\n};\n\n/**\n * Note: There are two places we keep a \"step query string\" in the Run view:\n * selectionQuery and logsFilter.logsQuery.\n *\n * - selectionQuery is set when you click around in the Gannt view and is the\n *   selection used for re-execution, etc. When set, we autofill logsFilter.logsQuery.\n *\n * - logsFilter.logsQuery is used for filtering the logs. It can be cleared separately\n *   from the selectionQuery, so you can select a step but navigate elsewhere in the logs.\n *\n * We could revisit this in the future but I believe we iterated quite a bit to get to this\n * solution and we should avoid locking the two filter inputs together completely.\n */\nconst RunWithData: React.FunctionComponent<RunWithDataProps> = ({\n  run,\n  runId,\n  logs,\n  logsFilter,\n  metadata,\n  selectionQuery,\n  onSetLogsFilter,\n  onSetSelectionQuery,\n}) => {\n  const [launchPipelineReexecution] = useMutation<\n    LaunchPipelineReexecution,\n    LaunchPipelineReexecutionVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n  const repoMatch = useRepositoryForRun(run);\n  const splitPanelContainer = React.createRef<SplitPanelContainer>();\n\n  const {basePath} = React.useContext(AppContext);\n\n  const [queryLogType, setQueryLogType] = useQueryPersistedState<string>({\n    queryKey: 'logType',\n    defaults: {logType: 'structured'},\n  });\n\n  const [computeLogKey, setComputeLogKey] = useQueryPersistedState<string>({\n    queryKey: 'logKey',\n  });\n\n  const logType = logTypeFromQuery(queryLogType);\n  const setLogType = (lt: LogType) => setQueryLogType(LogType[lt]);\n  const [computeLogUrl, setComputeLogUrl] = React.useState<string | null>(null);\n\n  const stepKeysJSON = JSON.stringify(Object.keys(metadata.steps).sort());\n  const stepKeys = React.useMemo(() => JSON.parse(stepKeysJSON), [stepKeysJSON]);\n\n  const runtimeGraph = run?.executionPlan && toGraphQueryItems(run?.executionPlan, metadata.steps);\n\n  const selectionStepKeys = React.useMemo(() => {\n    return runtimeGraph && selectionQuery && selectionQuery !== '*'\n      ? filterByQuery(runtimeGraph, selectionQuery).all.map((n) => n.name)\n      : [];\n  }, [runtimeGraph, selectionQuery]);\n\n  React.useEffect(() => {\n    if (!stepKeys?.length || computeLogKey) {\n      return;\n    }\n\n    if (metadata.logCaptureSteps) {\n      const logKeys = Object.keys(metadata.logCaptureSteps);\n      const selectedLogKey = logKeys.find((logKey) => {\n        return selectionStepKeys.every(\n          (stepKey) =>\n            metadata.logCaptureSteps && metadata.logCaptureSteps[logKey].stepKeys.includes(stepKey),\n        );\n      });\n      setComputeLogKey(selectedLogKey || logKeys[0]);\n    } else if (!stepKeys.includes(computeLogKey)) {\n      setComputeLogKey(selectionStepKeys.length === 1 ? selectionStepKeys[0] : stepKeys[0]);\n    } else if (selectionStepKeys.length === 1 && computeLogKey !== selectionStepKeys[0]) {\n      setComputeLogKey(selectionStepKeys[0]);\n    }\n  }, [stepKeys, computeLogKey, selectionStepKeys, metadata.logCaptureSteps, setComputeLogKey]);\n\n  const onSetComputeLogKey = (logKey: string) => {\n    setComputeLogKey(logKey);\n  };\n\n  const logsFilterStepKeys = runtimeGraph\n    ? logsFilter.logQuery\n        .filter((v) => v.token && v.token === 'query')\n        .reduce((accum, v) => {\n          return [...accum, ...filterByQuery(runtimeGraph, v.value).all.map((n) => n.name)];\n        }, [] as string[])\n    : [];\n\n  const onLaunch = async (style: ReExecutionStyle) => {\n    if (!run || run.pipeline.__typename === 'UnknownPipeline' || !repoMatch) {\n      return;\n    }\n\n    const variables = getReexecutionVariables({\n      run,\n      style,\n      repositoryLocationName: repoMatch.match.repositoryLocation.name,\n      repositoryName: repoMatch.match.repository.name,\n    });\n\n    try {\n      const result = await launchPipelineReexecution({variables});\n      handleLaunchResult(basePath, run.pipeline.name, result);\n    } catch (error) {\n      showLaunchError(error as Error);\n    }\n  };\n\n  const onClickStep = (stepKey: string, evt: React.MouseEvent<any>) => {\n    const index = selectionStepKeys.indexOf(stepKey);\n    let newSelected: string[];\n\n    if (evt.shiftKey) {\n      // shift-click to multi select steps\n      newSelected = [...selectionStepKeys];\n\n      if (index !== -1) {\n        // deselect the step if already selected\n        newSelected.splice(index, 1);\n      } else {\n        // select the step otherwise\n        newSelected.push(stepKey);\n      }\n    } else {\n      if (selectionStepKeys.length === 1 && index !== -1) {\n        // deselect the step if already selected\n        newSelected = [];\n      } else {\n        // select the step otherwise\n        newSelected = [stepKey];\n      }\n    }\n\n    onSetSelectionQuery(newSelected.join(', ') || '*');\n  };\n\n  const gantt = (metadata: IRunMetadataDict) => {\n    if (logs.loading) {\n      return <GanttChartLoadingState runId={runId} />;\n    }\n\n    if (run?.status === 'QUEUED') {\n      return <QueuedState runId={runId} />;\n    }\n\n    if (run?.executionPlan && runtimeGraph) {\n      return (\n        <GanttChart\n          options={{\n            mode: GanttChartMode.WATERFALL_TIMED,\n          }}\n          toolbarLeftActions={\n            <FirstOrSecondPanelToggle axis={'vertical'} container={splitPanelContainer} />\n          }\n          toolbarActions={\n            <RunActionButtons\n              run={run}\n              onLaunch={onLaunch}\n              graph={runtimeGraph}\n              metadata={metadata}\n              selection={{query: selectionQuery, keys: selectionStepKeys}}\n            />\n          }\n          runId={runId}\n          graph={runtimeGraph}\n          metadata={metadata}\n          selection={{query: selectionQuery, keys: selectionStepKeys}}\n          onClickStep={onClickStep}\n          onSetSelection={onSetSelectionQuery}\n          focusedTime={logsFilter.focusedTime}\n        />\n      );\n    }\n\n    return <NonIdealState icon={IconNames.ERROR} title=\"Unable to build execution plan\" />;\n  };\n\n  return (\n    <>\n      <SplitPanelContainer\n        ref={splitPanelContainer}\n        axis={'vertical'}\n        identifier=\"run-gantt\"\n        firstInitialPercent={35}\n        firstMinSize={40}\n        first={gantt(metadata)}\n        second={\n          <LogsContainer>\n            <LogsToolbar\n              logType={logType}\n              onSetLogType={setLogType}\n              filter={logsFilter}\n              onSetFilter={onSetLogsFilter}\n              steps={stepKeys}\n              metadata={metadata}\n              computeLogKey={computeLogKey}\n              onSetComputeLogKey={onSetComputeLogKey}\n              computeLogUrl={computeLogUrl}\n            />\n            {logType !== LogType.structured ? (\n              <ComputeLogPanel\n                runId={runId}\n                stepKeys={stepKeys}\n                computeLogKey={computeLogKey}\n                ioType={LogType[logType]}\n                setComputeLogUrl={setComputeLogUrl}\n              />\n            ) : (\n              <LogsScrollingTable\n                logs={logs}\n                filter={logsFilter}\n                filterStepKeys={logsFilterStepKeys}\n                filterKey={`${JSON.stringify(logsFilter)}`}\n                metadata={metadata}\n              />\n            )}\n          </LogsContainer>\n        }\n      />\n    </>\n  );\n};\n\nconst LogsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: #f1f6f9;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, NonIdealState} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport * as React from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading} from '../ui/Text';\nimport {FontFamily} from '../ui/styles';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {Run} from './Run';\nimport {RunConfigDialog, RunDetails} from './RunDetails';\nimport {RunFragments} from './RunFragments';\nimport {RunStatusTag} from './RunStatusTag';\nimport {RunRootQuery} from './types/RunRootQuery';\n\nexport const RunRoot = (props: RouteComponentProps<{runId: string}>) => {\n  const {runId} = props.match.params;\n\n  const {data, loading} = useQuery<RunRootQuery>(RUN_ROOT_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    variables: {runId},\n  });\n\n  const run =\n    data?.pipelineRunOrError.__typename === 'PipelineRun' ? data.pipelineRunOrError : null;\n  const snapshotID = run?.pipelineSnapshotId;\n  const repoAddress = React.useMemo(() => {\n    const repositoryOrigin = run?.repositoryOrigin;\n    if (repositoryOrigin) {\n      const {repositoryLocationName, repositoryName} = repositoryOrigin;\n      return buildRepoAddress(repositoryName, repositoryLocationName);\n    }\n    return null;\n  }, [run]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        background={Colors.WHITE}\n        padding={{top: 16, bottom: 12, horizontal: 20}}\n        border={{side: 'bottom', width: 1, color: Colors.LIGHT_GRAY3}}\n        flex={{direction: 'row', alignItems: 'flex-start'}}\n        style={{position: 'relative', zIndex: 1}}\n      >\n        <PageHeader\n          title={\n            <Group direction=\"row\" spacing={12} alignItems=\"flex-end\">\n              <Heading style={{fontFamily: FontFamily.monospace}}>{runId.slice(0, 8)}</Heading>\n              {loading || !run ? null : (\n                <div style={{position: 'relative', top: '-2px'}}>\n                  <RunStatusTag status={run.status} />\n                </div>\n              )}\n            </Group>\n          }\n          icon=\"history\"\n          description={\n            <Group direction=\"row\" spacing={4} alignItems=\"baseline\">\n              <Link to=\"/instance/runs\">Run</Link>\n              <span>of </span>\n              {run ? (\n                <PipelineReference\n                  pipelineName={run?.pipeline.name}\n                  pipelineHrefContext={repoAddress || 'repo-unknown'}\n                  snapshotId={snapshotID}\n                  mode={run?.mode}\n                />\n              ) : (\n                <span>…</span>\n              )}\n            </Group>\n          }\n          metadata={run ? <RunDetails run={run} loading={loading} /> : null}\n          right={run ? <RunConfigDialog run={run} /> : null}\n        />\n      </Box>\n      <RunById data={data} runId={runId} />\n    </div>\n  );\n};\n\nconst RunById: React.FC<{data: RunRootQuery | undefined; runId: string}> = (props) => {\n  const {data, runId} = props;\n  useDocumentTitle(`Run: ${runId}`);\n\n  if (!data || !data.pipelineRunOrError) {\n    return <Run run={undefined} runId={runId} />;\n  }\n\n  if (data.pipelineRunOrError.__typename !== 'PipelineRun') {\n    return (\n      <NonIdealState\n        icon={IconNames.SEND_TO_GRAPH}\n        title=\"No Run\"\n        description={'The run with this ID does not exist or has been cleaned up.'}\n      />\n    );\n  }\n\n  return <Run run={data.pipelineRunOrError} runId={runId} />;\n};\n\nconst RUN_ROOT_QUERY = gql`\n  query RunRootQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on PipelineRun {\n        id\n        pipeline {\n          __typename\n          ... on PipelineReference {\n            name\n            solidSelection\n          }\n        }\n        ...RunFragment\n      }\n    }\n  }\n\n  ${RunFragments.RunFragment}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {REPOSITORY_SCHEDULES_FRAGMENT} from '../schedules/ScheduleUtils';\nimport {SchedulerInfo, SCHEDULER_FRAGMENT} from '../schedules/SchedulerInfo';\nimport {SchedulesNextTicks} from '../schedules/SchedulesNextTicks';\nimport {Alert} from '../ui/Alert';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\nimport {Loading} from '../ui/Loading';\n\nimport {SchedulerInfoQuery} from './types/SchedulerInfoQuery';\nimport {POLL_INTERVAL} from './useCursorPaginatedQuery';\n\nexport const AllScheduledTicks = () => {\n  const queryResult = useQuery<SchedulerInfoQuery>(SCHEDULER_INFO_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    pollInterval: POLL_INTERVAL,\n    partialRefetch: true,\n  });\n\n  return (\n    <Loading queryResult={queryResult}>\n      {(result) => {\n        const {repositoriesOrError, instance, scheduler} = result;\n        if (repositoriesOrError.__typename === 'PythonError') {\n          const message = repositoriesOrError.message;\n          return (\n            <Alert\n              intent=\"warning\"\n              title={\n                <Group direction=\"row\" spacing={4}>\n                  <div>Could not load scheduled ticks.</div>\n                  <ButtonLink\n                    color={Colors.BLUE3}\n                    underline=\"always\"\n                    onClick={() => {\n                      showCustomAlert({\n                        title: 'Python error',\n                        body: message,\n                      });\n                    }}\n                  >\n                    View error\n                  </ButtonLink>\n                </Group>\n              }\n            />\n          );\n        }\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <SchedulerInfo schedulerOrError={scheduler} daemonHealth={instance.daemonHealth} />\n            <SchedulesNextTicks repos={repositoriesOrError.nodes} />\n          </Group>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst SCHEDULER_INFO_QUERY = gql`\n  query SchedulerInfoQuery {\n    scheduler {\n      ...SchedulerFragment\n    }\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      ... on RepositoryConnection {\n        nodes {\n          __typename\n          id\n          ... on Repository {\n            ...RepositorySchedulesFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${SCHEDULER_FRAGMENT}\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_SCHEDULES_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, Divider, NonIdealState, Tab, Tabs, Tag} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryCountdown} from '../app/QueryCountdown';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {PipelineRunStatus} from '../types/globalTypes';\nimport {Alert} from '../ui/Alert';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {CursorPaginationControls} from '../ui/CursorControls';\nimport {Group} from '../ui/Group';\nimport {Loading} from '../ui/Loading';\nimport {Page} from '../ui/Page';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading} from '../ui/Text';\nimport {TokenizingFieldValue} from '../ui/TokenizingField';\n\nimport {AllScheduledTicks} from './AllScheduledTicks';\nimport {doneStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from './RunTable';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {\n  RunFilterTokenType,\n  RunsFilter,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n} from './RunsFilter';\nimport {CountFragment} from './types/CountFragment';\nimport {QueueDaemonStatusQuery} from './types/QueueDaemonStatusQuery';\nimport {RunsRootQuery, RunsRootQueryVariables} from './types/RunsRootQuery';\nimport {POLL_INTERVAL, useCursorPaginatedQuery} from './useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 25;\n\nconst selectedTabId = (filterTokens: TokenizingFieldValue[]) => {\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(doneStatuses, statusTokens)) {\n    return 'done';\n  }\n  return 'all';\n};\n\nexport const RunsRoot: React.FC<RouteComponentProps> = () => {\n  useDocumentTitle('Runs');\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n  const [showScheduled, setShowScheduled] = React.useState(false);\n  const {flagPipelineModeTuples} = useFeatureFlags();\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    RunsRootQuery,\n    RunsRootQueryVariables\n  >({\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'PipelineRuns') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.runId;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'PipelineRuns') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n    variables: {\n      filter,\n      queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n      inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n    },\n    query: RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n  });\n\n  const setStatusFilter = (statuses: PipelineRunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status', value: status}));\n    setFilterTokens([...statusTokens, ...tokensMinusStatus]);\n    setShowScheduled(false);\n  };\n\n  const selectedTab = showScheduled ? 'scheduled' : selectedTabId(filterTokens);\n  const tabColor = (match: string) =>\n    selectedTab === match ? Colors.BLUE1 : {link: Colors.GRAY2, hover: Colors.BLUE1};\n  const enabledFilters: RunFilterTokenType[] = flagPipelineModeTuples\n    ? ['status', 'tag', 'snapshotId', 'id', 'job']\n    : ['status', 'tag', 'snapshotId', 'id', 'pipeline'];\n\n  return (\n    <Page style={{height: '100%'}}>\n      <Group direction=\"column\" spacing={8}>\n        <PageHeader title={<Heading>Runs</Heading>} />\n        <Box\n          border={{side: 'bottom', width: 1, color: Colors.LIGHT_GRAY3}}\n          flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}\n        >\n          <Tabs selectedTabId={selectedTab} id=\"run-tabs\">\n            <Tab\n              title={\n                <TabButton\n                  color={tabColor('all')}\n                  underline=\"never\"\n                  onClick={() => setStatusFilter([])}\n                >\n                  All runs\n                </TabButton>\n              }\n              id=\"all\"\n            />\n            <Tab\n              title={\n                <TabButton\n                  color={tabColor('queued')}\n                  underline=\"never\"\n                  onClick={() => setStatusFilter(Array.from(queuedStatuses))}\n                >\n                  <Group direction=\"row\" spacing={4} alignItems=\"center\">\n                    <div>Queued</div>\n                    <CountTag\n                      loading={queryResult.loading && !queryResult.data}\n                      fragment={\n                        queryResult.data?.queuedCount?.__typename === 'PipelineRuns'\n                          ? queryResult.data?.queuedCount\n                          : undefined\n                      }\n                    />\n                  </Group>\n                </TabButton>\n              }\n              id=\"queued\"\n            />\n            <Tab\n              title={\n                <TabButton\n                  color={tabColor('in-progress')}\n                  underline=\"never\"\n                  onClick={() => setStatusFilter(Array.from(inProgressStatuses))}\n                >\n                  <Group direction=\"row\" spacing={4} alignItems=\"center\">\n                    <div>In progress</div>\n                    <CountTag\n                      loading={queryResult.loading && !queryResult.data}\n                      fragment={\n                        queryResult.data?.inProgressCount?.__typename === 'PipelineRuns'\n                          ? queryResult.data?.inProgressCount\n                          : undefined\n                      }\n                    />\n                  </Group>\n                </TabButton>\n              }\n              id=\"in-progress\"\n            />\n            <Tab\n              title={\n                <TabButton\n                  color={tabColor('done')}\n                  underline=\"never\"\n                  onClick={() => setStatusFilter(Array.from(doneStatuses))}\n                >\n                  Done\n                </TabButton>\n              }\n              id=\"done\"\n            />\n            <div style={{display: 'flex', alignSelf: 'stretch'}}>\n              <Divider style={{margin: '6px 0px'}} />\n            </div>\n            <Tab\n              title={\n                <TabButton\n                  color={tabColor('scheduled')}\n                  underline=\"never\"\n                  onClick={() => setShowScheduled(true)}\n                >\n                  Scheduled\n                </TabButton>\n              }\n              id=\"scheduled\"\n            />\n          </Tabs>\n          <Box padding={{bottom: 8}}>\n            <QueryCountdown pollInterval={POLL_INTERVAL} queryResult={queryResult} />\n          </Box>\n        </Box>\n        {showScheduled ? null : (\n          <RunsFilter\n            tokens={filterTokens}\n            onChange={setFilterTokens}\n            loading={queryResult.loading}\n            enabledFilters={enabledFilters}\n          />\n        )}\n        {selectedTab === 'queued' ? (\n          <Group direction=\"column\" spacing={8}>\n            <Alert\n              intent=\"info\"\n              title={<Link to=\"/instance/config#run_coordinator\">View queue configuration</Link>}\n            />\n            <QueueDaemonAlert />\n          </Group>\n        ) : null}\n        <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n          <Loading queryResult={queryResult} allowStaleData={true}>\n            {({pipelineRunsOrError}) => {\n              if (pipelineRunsOrError.__typename !== 'PipelineRuns') {\n                return (\n                  <NonIdealState\n                    icon={IconNames.ERROR}\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                );\n              }\n\n              if (showScheduled) {\n                return (\n                  <Box margin={{top: 4}}>\n                    <AllScheduledTicks />\n                  </Box>\n                );\n              }\n\n              return (\n                <>\n                  <RunTable\n                    runs={pipelineRunsOrError.results.slice(0, PAGE_SIZE)}\n                    onSetFilter={setFilterTokens}\n                  />\n                  {pipelineRunsOrError.results.length > 0 ? (\n                    <div style={{marginTop: '16px'}}>\n                      <CursorPaginationControls {...paginationProps} />\n                    </div>\n                  ) : null}\n                </>\n              );\n            }}\n          </Loading>\n        </RunsQueryRefetchContext.Provider>\n      </Group>\n    </Page>\n  );\n};\n\nconst COUNT_FRAGMENT = gql`\n  fragment CountFragment on PipelineRuns {\n    count\n  }\n`;\n\nconst RUNS_ROOT_QUERY = gql`\n  query RunsRootQuery(\n    $limit: Int\n    $cursor: String\n    $filter: PipelineRunsFilter!\n    $queuedFilter: PipelineRunsFilter!\n    $inProgressFilter: PipelineRunsFilter!\n  ) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on PipelineRuns {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ... on PythonError {\n        message\n      }\n    }\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ...CountFragment\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ...CountFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${COUNT_FRAGMENT}\n`;\n\nconst QueueDaemonAlert = () => {\n  const {data} = useQuery<QueueDaemonStatusQuery>(QUEUE_DAEMON_STATUS_QUERY);\n  const status = data?.instance.daemonHealth.daemonStatus;\n  if (status?.required && !status?.healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The queued run coordinator is not healthy.\"\n        description={\n          <div>\n            View <Link to=\"/instance/health\">Instance status</Link> for details.\n          </div>\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst QUEUE_DAEMON_STATUS_QUERY = gql`\n  query QueueDaemonStatusQuery {\n    instance {\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"QUEUED_RUN_COORDINATOR\") {\n          id\n          daemonType\n          healthy\n          required\n        }\n      }\n    }\n  }\n`;\n\nconst TabButton = styled(ButtonLink)`\n  line-height: 34px;\n`;\n\ninterface CountTagProps {\n  loading: boolean;\n  fragment: CountFragment | undefined;\n}\n\nconst CountTag = (props: CountTagProps) => {\n  const {loading, fragment} = props;\n  if (loading) {\n    return (\n      <CountTagStyled minimal intent=\"none\">\n        –\n      </CountTagStyled>\n    );\n  }\n  if (typeof fragment?.count === 'number') {\n    return (\n      <CountTagStyled minimal intent=\"none\">\n        {fragment.count}\n      </CountTagStyled>\n    );\n  }\n  return null;\n};\n\nconst CountTagStyled = styled(Tag)`\n  min-width: 24px;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Tag, Colors, Tab, Tabs} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {explorerPathToString, PipelineExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading} from '../ui/Text';\nimport {FontFamily} from '../ui/styles';\nimport {useActivePipelineForName} from '../workspace/WorkspaceContext';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {SnapshotQuery} from './types/SnapshotQuery';\n\nconst SNAPSHOT_PARENT_QUERY = gql`\n  query SnapshotQuery($snapshotId: String!) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId) {\n      ... on PipelineSnapshot {\n        id\n        parentSnapshotId\n      }\n    }\n  }\n`;\n\ninterface SnapshotNavProps {\n  activeTab?: string;\n  explorerPath: PipelineExplorerPath;\n}\n\nexport const SnapshotNav = (props: SnapshotNavProps) => {\n  const {activeTab = '', explorerPath} = props;\n  const {pipelineName, snapshotId} = explorerPath;\n  const explorerPathString = explorerPathToString({\n    ...explorerPath,\n    pathSolids: [],\n  });\n\n  const currentPipelineState = useActivePipelineForName(pipelineName);\n  const currentSnapshotID = currentPipelineState?.pipelineSnapshotId;\n\n  const {data, loading} = useQuery<SnapshotQuery>(SNAPSHOT_PARENT_QUERY, {\n    variables: {snapshotId},\n  });\n\n  const tag = () => {\n    if (loading) {\n      return (\n        <Tag intent=\"none\" minimal>\n          ...\n        </Tag>\n      );\n    }\n\n    if (\n      !currentSnapshotID ||\n      (currentSnapshotID !== snapshotId &&\n        data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n        data?.pipelineSnapshotOrError?.parentSnapshotId !== currentSnapshotID)\n    ) {\n      return (\n        <Tag intent=\"warning\" minimal>\n          Snapshot\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag intent=\"success\" minimal>\n        Current\n      </Tag>\n    );\n  };\n\n  const tabs = [\n    {\n      text: 'Definition',\n      pathComponent: '',\n      href: `/instance/snapshots/${explorerPathString}`,\n    },\n    {\n      text: 'Runs',\n      pathComponent: 'runs',\n      href: `/instance/snapshots/${explorerPathString}runs`,\n    },\n  ];\n\n  return (\n    <Group direction=\"column\" spacing={12} padding={{top: 20, horizontal: 20}}>\n      <PageHeader\n        title={\n          <Group direction=\"row\" spacing={12} alignItems=\"flex-end\">\n            <Heading style={{fontFamily: FontFamily.monospace}}>\n              {explorerPath.snapshotId?.slice(0, 8)}\n            </Heading>\n            {tag()}\n          </Group>\n        }\n        icon=\"schema\"\n        description={\n          <span>\n            Snapshot of{' '}\n            <Link\n              to={workspacePipelinePathGuessRepo(\n                explorerPath.pipelineName,\n                explorerPath.pipelineMode,\n              )}\n            >\n              {explorerPath.pipelineName}\n            </Link>\n          </span>\n        }\n      />\n      <Box border={{side: 'bottom', width: 1, color: Colors.LIGHT_GRAY3}}>\n        <Tabs large={false} selectedTabId={activeTab}>\n          {tabs.map((tab) => {\n            const {href, text, pathComponent} = tab;\n            return <Tab key={text} id={pathComponent} title={<Link to={href}>{text}</Link>} />;\n          })}\n        </Tabs>\n      </Box>\n    </Group>\n  );\n};\n","import * as React from 'react';\nimport {Route, RouteComponentProps, Switch} from 'react-router-dom';\n\nimport {PipelineExplorerSnapshotRoot} from '../pipelines/PipelineExplorerRoot';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {PipelineRunsRoot} from '../pipelines/PipelineRunsRoot';\n\nimport {SnapshotNav} from './SnapshotNav';\n\nexport const SnapshotRoot: React.FC<\n  RouteComponentProps<{\n    pipelinePath: string;\n    tab?: string;\n  }>\n> = (props) => {\n  const {pipelinePath, tab} = props.match.params;\n  const explorerPath = explorerPathFromString(pipelinePath);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <SnapshotNav activeTab={tab} explorerPath={explorerPath} />\n      <Switch>\n        <Route\n          path=\"/instance/snapshots/:pipelinePath/runs\"\n          render={(props: RouteComponentProps<{pipelinePath: string}>) => (\n            <PipelineRunsRoot pipelinePath={props.match.params.pipelinePath} />\n          )}\n        />\n        <Route path=\"/instance/snapshots/(/?.*)\" component={PipelineExplorerSnapshotRoot} />\n      </Switch>\n    </div>\n  );\n};\n","import {gql, useMutation} from '@apollo/client';\nimport {Button, Classes, Dialog} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {doneStatuses} from '../runs/RunStatuses';\nimport {TerminationDialog} from '../runs/TerminationDialog';\nimport {BulkActionStatus} from '../types/globalTypes';\n\nimport {InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results} from './types/InstanceBackfillsQuery';\n\ntype Backfill = InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results;\n\ninterface Props {\n  backfill?: Backfill;\n  onClose: () => void;\n  onComplete: () => void;\n}\nexport const BackfillTerminationDialog = ({backfill, onClose, onComplete}: Props) => {\n  const [cancelBackfill] = useMutation(CANCEL_BACKFILL_MUTATION);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  if (!backfill) {\n    return null;\n  }\n  const numUnscheduled = (backfill.numTotal || 0) - (backfill.numRequested || 0);\n  const cancelableRuns = backfill.runs.filter(\n    (run) => !doneStatuses.has(run?.status) && run.canTerminate,\n  );\n  const unfinishedMap = backfill.runs\n    .filter((run) => !doneStatuses.has(run?.status))\n    .reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const cancel = async () => {\n    setIsSubmitting(true);\n    await cancelBackfill({variables: {backfillId: backfill.backfillId}});\n    onComplete();\n    setIsSubmitting(false);\n  };\n\n  return (\n    <>\n      <Dialog\n        isOpen={!!backfill && backfill.status !== BulkActionStatus.CANCELED && !!numUnscheduled}\n        title=\"Cancel backfill\"\n        onClose={onClose}\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <div>\n            There {numUnscheduled === 1 ? 'is 1 partition ' : `are ${numUnscheduled} partitions `}\n            yet to be queued or launched.\n          </div>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button intent=\"none\" onClick={onClose}>\n              Close\n            </Button>\n            {isSubmitting ? (\n              <Button intent=\"danger\" disabled>\n                Canceling...\n              </Button>\n            ) : (\n              <Button intent=\"danger\" onClick={cancel}>\n                Cancel backfill\n              </Button>\n            )}\n          </div>\n        </div>\n      </Dialog>\n      <TerminationDialog\n        isOpen={\n          !!backfill &&\n          (!numUnscheduled || backfill.status !== 'REQUESTED') &&\n          !!cancelableRuns.length\n        }\n        onClose={onClose}\n        onComplete={onComplete}\n        selectedRuns={unfinishedMap}\n      />\n    </>\n  );\n};\n\nconst CANCEL_BACKFILL_MUTATION = gql`\n  mutation CancelBackfill($backfillId: String!) {\n    cancelPartitionBackfill(backfillId: $backfillId) {\n      __typename\n      ... on CancelBackfillSuccess {\n        backfillId\n      }\n      ... on PythonError {\n        message\n      }\n    }\n  }\n`;\n","import {QueryResult} from '@apollo/client';\nimport {Colors, Tabs, Tab} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {QueryCountdown} from '../app/QueryCountdown';\nimport {Box} from '../ui/Box';\n\nconst POLL_INTERVAL = 15000;\n\ninterface Props {\n  queryData?: QueryResult;\n  tab: string;\n}\n\nexport const InstanceTabs: React.FC<Props> = (props) => {\n  const {queryData, tab} = props;\n  return (\n    <Box\n      flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}\n      border={{side: 'bottom', width: 1, color: Colors.LIGHT_GRAY3}}\n    >\n      <Tabs selectedTabId={tab}>\n        <Tab id=\"health\" title={<Link to=\"/instance/health\">Health</Link>} />\n        <Tab id=\"schedules\" title={<Link to=\"/instance/schedules\">Schedules</Link>} />\n        <Tab id=\"sensors\" title={<Link to=\"/instance/sensors\">Sensors</Link>} />\n        <Tab id=\"backfills\" title={<Link to=\"/instance/backfills\">Backfills</Link>} />\n        <Tab id=\"config\" title={<Link to=\"/instance/config\">Configuration</Link>} />\n      </Tabs>\n      {queryData ? (\n        <Box padding={{bottom: 8}}>\n          <QueryCountdown pollInterval={POLL_INTERVAL} queryResult={queryData} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery, useMutation} from '@apollo/client';\nimport {\n  Colors,\n  NonIdealState,\n  Popover,\n  Button,\n  Menu,\n  MenuItem,\n  Tag,\n  Intent,\n} from '@blueprintjs/core';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {useHistory, Link} from 'react-router-dom';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {SharedToaster} from '../app/DomUtils';\nimport {usePermissions} from '../app/Permissions';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {\n  doneStatuses,\n  failedStatuses,\n  inProgressStatuses,\n  queuedStatuses,\n  successStatuses,\n} from '../runs/RunStatuses';\nimport {DagsterTag} from '../runs/RunTag';\nimport {TerminationDialog} from '../runs/TerminationDialog';\nimport {useCursorPaginatedQuery} from '../runs/useCursorPaginatedQuery';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {BulkActionStatus, PipelineRunStatus} from '../types/globalTypes';\nimport {Alert} from '../ui/Alert';\nimport {Box} from '../ui/Box';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {CursorPaginationControls} from '../ui/CursorControls';\nimport {Group} from '../ui/Group';\nimport {Loading} from '../ui/Loading';\nimport {Table} from '../ui/Table';\nimport {Mono} from '../ui/Text';\nimport {stringFromValue} from '../ui/TokenizingField';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {BackfillTerminationDialog} from './BackfillTerminationDialog';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {\n  InstanceBackfillsQuery,\n  InstanceBackfillsQueryVariables,\n  InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results,\n  InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results_partitionSet,\n  InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results_runs,\n} from './types/InstanceBackfillsQuery';\nimport {InstanceHealthForBackfillsQuery} from './types/InstanceHealthForBackfillsQuery';\n\ntype Backfill = InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results;\ntype BackfillRun = InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results_runs;\n\nconst PAGE_SIZE = 25;\n\nexport const InstanceBackfills = () => {\n  const queryData = useQuery<InstanceHealthForBackfillsQuery>(INSTANCE_HEALTH_FOR_BACKFILLS_QUERY);\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    InstanceBackfillsQuery,\n    InstanceBackfillsQueryVariables\n  >({\n    query: BACKFILLS_QUERY,\n    variables: {},\n    pageSize: PAGE_SIZE,\n    nextCursorForResult: (result) =>\n      result.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n        ? result.partitionBackfillsOrError.results[PAGE_SIZE - 1]?.backfillId\n        : undefined,\n    getResultArray: (result) =>\n      result?.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n        ? result.partitionBackfillsOrError.results\n        : [],\n  });\n  useDocumentTitle('Backfills');\n\n  return (\n    <Group direction=\"column\" spacing={20}>\n      <InstanceTabs tab=\"backfills\" />\n      <Loading queryResult={queryResult} allowStaleData={true}>\n        {({partitionBackfillsOrError}) => {\n          if (partitionBackfillsOrError.__typename === 'PythonError') {\n            return <PythonErrorInfo error={partitionBackfillsOrError} />;\n          }\n\n          if (!partitionBackfillsOrError.results.length) {\n            return (\n              <NonIdealState\n                icon=\"multi-select\"\n                title=\"No backfills found\"\n                description={<p>This instance does not have any backfill jobs.</p>}\n              />\n            );\n          }\n\n          const daemonHealths = queryData.data?.instance.daemonHealth.allDaemonStatuses || [];\n          const backfillHealths = daemonHealths\n            .filter((daemon) => daemon.daemonType === 'BACKFILL')\n            .map((daemon) => daemon.required && daemon.healthy);\n          const isBackfillHealthy = backfillHealths.length && backfillHealths.every((x) => x);\n\n          return (\n            <>\n              {isBackfillHealthy ? null : (\n                <Box margin={{bottom: 8}}>\n                  <Alert\n                    intent=\"warning\"\n                    title=\"The backfill daemon is not running.\"\n                    description={\n                      <div>\n                        See the{' '}\n                        <a\n                          href=\"https://docs.dagster.io/overview/daemon\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          dagster-daemon documentation\n                        </a>{' '}\n                        for more information on how to deploy the dagster-daemon process.\n                      </div>\n                    }\n                  />\n                </Box>\n              )}\n              <BackfillTable\n                backfills={partitionBackfillsOrError.results.slice(0, PAGE_SIZE)}\n                refetch={queryResult.refetch}\n              />\n              {partitionBackfillsOrError.results.length > 0 ? (\n                <div style={{marginTop: '16px'}}>\n                  <CursorPaginationControls {...paginationProps} />\n                </div>\n              ) : null}\n            </>\n          );\n        }}\n      </Loading>\n    </Group>\n  );\n};\n\nconst INSTANCE_HEALTH_FOR_BACKFILLS_QUERY = gql`\n  query InstanceHealthForBackfillsQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n\nconst BackfillTable = ({backfills, refetch}: {backfills: Backfill[]; refetch: () => void}) => {\n  const [terminationBackfill, setTerminationBackfill] = React.useState<Backfill>();\n  const [resumeBackfill] = useMutation(RESUME_BACKFILL_MUTATION);\n  const [cancelRunBackfill, setCancelRunBackfill] = React.useState<Backfill>();\n  const {canCancelPartitionBackfill} = usePermissions();\n\n  const candidateId = terminationBackfill?.backfillId;\n\n  React.useEffect(() => {\n    if (canCancelPartitionBackfill && candidateId) {\n      const [backfill] = backfills.filter((backfill) => backfill.backfillId === candidateId);\n      setTerminationBackfill(backfill);\n    }\n  }, [backfills, candidateId, canCancelPartitionBackfill]);\n\n  const resume = async (backfill: Backfill) => {\n    const {data} = await resumeBackfill({variables: {backfillId: backfill.backfillId}});\n    if (data && data.resumePartitionBackfill.__typename === 'ResumeBackfillSuccess') {\n      refetch();\n    } else if (data && data.resumePartitionBackfill.__typename === 'UnauthorizedError') {\n      SharedToaster.show({\n        message: (\n          <Group direction=\"column\" spacing={4}>\n            <div>\n              Attempted to retry the backfill in read-only mode. This backfill was not retried.\n            </div>\n          </Group>\n        ),\n        icon: 'error',\n        intent: Intent.DANGER,\n      });\n    } else {\n      const error = data.resumePartitionBackfill;\n      SharedToaster.show({\n        message: (\n          <Group direction=\"column\" spacing={4}>\n            <div>An unexpected error occurred. This backfill was not retried.</div>\n            <ButtonLink\n              color={Colors.WHITE}\n              underline=\"always\"\n              onClick={() => {\n                showCustomAlert({\n                  body: <PythonErrorInfo error={error} />,\n                });\n              }}\n            >\n              View error\n            </ButtonLink>\n          </Group>\n        ),\n        icon: 'error',\n        intent: Intent.DANGER,\n      });\n    }\n  };\n\n  const cancelableRuns = cancelRunBackfill?.runs.filter(\n    (run) => !doneStatuses.has(run?.status) && run.canTerminate,\n  );\n  const unfinishedMap =\n    cancelRunBackfill?.runs\n      .filter((run) => !doneStatuses.has(run?.status))\n      .reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {}) || {};\n\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th style={{width: '120px'}}>Backfill Id</th>\n            <th>Partition Set</th>\n            <th style={{textAlign: 'right'}}>Progress</th>\n            <th>Status</th>\n            <th>Created</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {backfills.map((backfill: Backfill) => (\n            <BackfillRow\n              key={backfill.backfillId}\n              backfill={backfill}\n              onTerminateBackfill={setTerminationBackfill}\n              onResumeBackfill={resume}\n            />\n          ))}\n        </tbody>\n      </Table>\n      <BackfillTerminationDialog\n        backfill={terminationBackfill}\n        onClose={() => setTerminationBackfill(undefined)}\n        onComplete={() => refetch()}\n      />\n      <TerminationDialog\n        isOpen={!!cancelableRuns?.length}\n        onClose={() => setCancelRunBackfill(undefined)}\n        onComplete={() => refetch()}\n        selectedRuns={unfinishedMap}\n      />\n    </>\n  );\n};\n\nconst BackfillRow = ({\n  backfill,\n  onTerminateBackfill,\n  onResumeBackfill,\n}: {\n  backfill: Backfill;\n  onTerminateBackfill: (backfill: Backfill) => void;\n  onResumeBackfill: (backfill: Backfill) => void;\n}) => {\n  const history = useHistory();\n  const {canCancelPartitionBackfill, canLaunchPartitionBackfill} = usePermissions();\n  const counts = React.useMemo(() => getProgressCounts(backfill), [backfill]);\n  const runsUrl = `/instance/runs?${qs.stringify({\n    q: stringFromValue([{token: 'tag', value: `dagster/backfill=${backfill.backfillId}`}]),\n  })}`;\n\n  const partitionSetBackfillUrl = backfill.partitionSet\n    ? workspacePipelinePath(\n        backfill.partitionSet.repositoryOrigin.repositoryName,\n        backfill.partitionSet.repositoryOrigin.repositoryLocationName,\n        backfill.partitionSet.pipelineName,\n        backfill.partitionSet.mode,\n        `/partitions?${qs.stringify({\n          partitionSet: backfill.partitionSet.name,\n          q: stringFromValue([{token: 'tag', value: `dagster/backfill=${backfill.backfillId}`}]),\n        })}`,\n      )\n    : null;\n\n  const canCancel = backfill.runs.some((run) => run.canTerminate);\n\n  return (\n    <tr>\n      <td style={{width: '120px'}}>\n        <Mono>\n          {partitionSetBackfillUrl ? (\n            <Link to={partitionSetBackfillUrl}>{backfill.backfillId}</Link>\n          ) : (\n            backfill.backfillId\n          )}\n        </Mono>\n      </td>\n      <td>\n        {backfill.partitionSet ? (\n          <PartitionSetReference partitionSet={backfill.partitionSet} />\n        ) : (\n          backfill.partitionSetName\n        )}\n      </td>\n      <td style={{textAlign: 'right'}}>\n        <BackfillProgress backfill={backfill} />\n      </td>\n      <td>\n        {[BulkActionStatus.CANCELED, BulkActionStatus.FAILED].includes(backfill.status) ? (\n          <Box margin={{bottom: 12}}>\n            <Tag\n              minimal\n              intent=\"danger\"\n              onClick={() =>\n                backfill.error &&\n                showCustomAlert({title: 'Error', body: <PythonErrorInfo error={backfill.error} />})\n              }\n              style={{cursor: backfill.error ? 'pointer' : 'default'}}\n            >\n              {backfill.status}\n            </Tag>\n          </Box>\n        ) : null}\n        <BackfillStatusTable backfill={backfill} />\n      </td>\n      <td>{backfill.timestamp ? <TimestampDisplay timestamp={backfill.timestamp} /> : '-'}</td>\n      <td style={{width: '100px'}}>\n        <Popover\n          content={\n            <Menu>\n              {canCancelPartitionBackfill ? (\n                <>\n                  {counts.numUnscheduled && backfill.status === BulkActionStatus.REQUESTED ? (\n                    <MenuItem\n                      text=\"Cancel backfill submission\"\n                      icon=\"stop\"\n                      intent=\"danger\"\n                      onClick={() => onTerminateBackfill(backfill)}\n                    />\n                  ) : null}\n                  {canCancel ? (\n                    <MenuItem\n                      text=\"Terminate unfinished runs\"\n                      icon=\"stop\"\n                      intent=\"danger\"\n                      onClick={() => onTerminateBackfill(backfill)}\n                    />\n                  ) : null}\n                </>\n              ) : null}\n              {canLaunchPartitionBackfill &&\n              backfill.status === BulkActionStatus.FAILED &&\n              backfill.partitionSet ? (\n                <MenuItem\n                  text=\"Resume failed backfill\"\n                  title=\"Submits runs for all partitions in the backfill that do not have a corresponding run. Does not retry failed runs.\"\n                  icon=\"repeat\"\n                  onClick={() => onResumeBackfill(backfill)}\n                />\n              ) : null}\n              {partitionSetBackfillUrl ? (\n                <MenuItem\n                  text=\"View Partition Matrix\"\n                  icon=\"multi-select\"\n                  onClick={() => history.push(partitionSetBackfillUrl)}\n                />\n              ) : null}\n              <MenuItem\n                text=\"View Backfill Runs\"\n                icon=\"history\"\n                onClick={() => history.push(runsUrl)}\n              />\n            </Menu>\n          }\n          position=\"bottom\"\n        >\n          <Button small minimal icon=\"chevron-down\" style={{marginLeft: '4px'}} />\n        </Popover>\n      </td>\n    </tr>\n  );\n};\n\nconst getProgressCounts = (backfill: Backfill) => {\n  const byPartitionRuns: {[key: string]: BackfillRun} = {};\n  backfill.runs.forEach((run) => {\n    const [runPartitionName] = run.tags\n      .filter((tag) => tag.key === DagsterTag.Partition)\n      .map((tag) => tag.value);\n\n    if (runPartitionName && !byPartitionRuns[runPartitionName]) {\n      byPartitionRuns[runPartitionName] = run;\n    }\n  });\n\n  const latestPartitionRuns = Object.values(byPartitionRuns);\n  const {numQueued, numInProgress, numSucceeded, numFailed} = latestPartitionRuns.reduce(\n    (accum: any, {status}: {status: PipelineRunStatus}) => {\n      return {\n        numQueued: accum.numQueued + (queuedStatuses.has(status) ? 1 : 0),\n        numInProgress: accum.numInProgress + (inProgressStatuses.has(status) ? 1 : 0),\n        numSucceeded: accum.numSucceeded + (successStatuses.has(status) ? 1 : 0),\n        numFailed: accum.numFailed + (failedStatuses.has(status) ? 1 : 0),\n      };\n    },\n    {numQueued: 0, numInProgress: 0, numSucceeded: 0, numFailed: 0},\n  );\n\n  return {\n    numQueued,\n    numInProgress,\n    numSucceeded,\n    numFailed,\n    numUnscheduled: backfill.numTotal - backfill.numRequested,\n    numSkipped: backfill.numRequested - latestPartitionRuns.length,\n    numTotal: backfill.numTotal,\n  };\n};\n\nconst BackfillProgress = ({backfill}: {backfill: Backfill}) => {\n  const {numSucceeded, numFailed, numSkipped, numTotal} = React.useMemo(\n    () => getProgressCounts(backfill),\n    [backfill],\n  );\n  const numCompleted = numSucceeded + numSkipped + numFailed;\n\n  return (\n    <span\n      style={{\n        fontSize: 36,\n        fontWeight: 'bold',\n        color: Colors.GRAY1,\n        fontVariantNumeric: 'tabular-nums',\n      }}\n    >\n      {numTotal ? Math.floor((100 * numCompleted) / numTotal) : '-'}%\n    </span>\n  );\n};\n\nconst PartitionSetReference: React.FunctionComponent<{\n  partitionSet: InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results_partitionSet;\n}> = ({partitionSet}) => (\n  <Group direction={'column'} spacing={8}>\n    <Link\n      to={workspacePipelinePath(\n        partitionSet.repositoryOrigin.repositoryName,\n        partitionSet.repositoryOrigin.repositoryLocationName,\n        partitionSet.pipelineName,\n        partitionSet.mode,\n        `/partitions?partitionSet=${encodeURIComponent(partitionSet.name)}`,\n      )}\n    >\n      {partitionSet.name}\n    </Link>\n    <span style={{color: Colors.DARK_GRAY3, fontSize: 12}}>\n      {partitionSet.repositoryOrigin.repositoryName}@\n      {partitionSet.repositoryOrigin.repositoryLocationName}\n    </span>\n    <PipelineReference\n      showIcon\n      fontSize={13}\n      pipelineName={partitionSet.pipelineName}\n      pipelineHrefContext={{\n        name: partitionSet.repositoryOrigin.repositoryName,\n        location: partitionSet.repositoryOrigin.repositoryLocationName,\n      }}\n      mode={partitionSet.mode}\n    />\n  </Group>\n);\nconst BackfillStatusTable = ({backfill}: {backfill: Backfill}) => {\n  const {\n    numQueued,\n    numInProgress,\n    numSucceeded,\n    numFailed,\n    numSkipped,\n    numUnscheduled,\n    numTotal,\n  } = React.useMemo(() => getProgressCounts(backfill), [backfill]);\n\n  return (\n    <Table style={{marginRight: 20, maxWidth: 250}}>\n      <tbody>\n        <BackfillStatusTableRow label=\"Queued\" count={numQueued} />\n        <BackfillStatusTableRow label=\"In progress\" count={numInProgress} />\n        <BackfillStatusTableRow label=\"Succeeded\" count={numSucceeded} />\n        <BackfillStatusTableRow label=\"Failed\" count={numFailed} />\n        <BackfillStatusTableRow label=\"Skipped\" count={numSkipped} />\n        {backfill.status === BulkActionStatus.CANCELED ? (\n          <BackfillStatusTableRow label=\"Unscheduled\" count={numUnscheduled} />\n        ) : (\n          <BackfillStatusTableRow label=\"To be scheduled\" count={numUnscheduled} />\n        )}\n        <BackfillStatusTableRow label=\"Total\" count={numTotal} isTotal={true} />\n      </tbody>\n    </Table>\n  );\n};\n\nconst BackfillStatusTableRow = ({\n  label,\n  count,\n  isTotal,\n}: {\n  label: string;\n  count: number;\n  isTotal?: boolean;\n}) => {\n  if (!count || count < 0) {\n    return null;\n  }\n  return (\n    <tr\n      style={{\n        boxShadow: 'none',\n        fontVariant: 'tabular-nums',\n      }}\n    >\n      <td\n        style={{\n          borderTop: isTotal ? `1px solid ${Colors.LIGHT_GRAY1}` : undefined,\n          maxWidth: '100px',\n          padding: '3px 5px',\n        }}\n      >\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          <div>{label}</div>\n        </Group>\n      </td>\n      <td\n        style={{\n          borderTop: isTotal ? `1px solid ${Colors.LIGHT_GRAY1}` : undefined,\n          maxWidth: '50px',\n          padding: '3px 5px',\n        }}\n      >\n        <Box flex={{justifyContent: 'flex-end'}}>{count}</Box>\n      </td>\n    </tr>\n  );\n};\n\nconst BACKFILLS_QUERY = gql`\n  query InstanceBackfillsQuery($cursor: String, $limit: Int) {\n    partitionBackfillsOrError(cursor: $cursor, limit: $limit) {\n      ... on PartitionBackfills {\n        results {\n          backfillId\n          status\n          numRequested\n          numTotal\n          runs {\n            id\n            canTerminate\n            status\n            tags {\n              key\n              value\n            }\n          }\n          timestamp\n          partitionSetName\n          partitionSet {\n            id\n            name\n            mode\n            pipelineName\n            repositoryOrigin {\n              id\n              repositoryName\n              repositoryLocationName\n            }\n          }\n          error {\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RESUME_BACKFILL_MUTATION = gql`\n  mutation resumeBackfill($backfillId: String!) {\n    resumePartitionBackfill(backfillId: $backfillId) {\n      __typename\n      ... on ResumeBackfillSuccess {\n        backfillId\n      }\n      ... on UnauthorizedError {\n        message\n      }\n      ... on PythonError {\n        message\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport styled, {createGlobalStyle, css} from 'styled-components/macro';\n\nimport {Box} from '../ui/Box';\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {HighlightedCodeBlock} from '../ui/HighlightedCodeBlock';\nimport {IconWIP} from '../ui/Icon';\nimport {Spinner} from '../ui/Spinner';\nimport {Subheading} from '../ui/Text';\n\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery} from './types/InstanceConfigQuery';\n\nconst YamlShimStyle = createGlobalStyle`\n  .hljs.yaml {\n    margin: 0;\n    padding: 0;\n  }\n\n  .hljs-attr {\n    color: ${Colors.BLUE1};\n  }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  const history = useHistory();\n  const {data} = useQuery<InstanceConfigQuery>(INSTANCE_CONFIG_QUERY, {\n    fetchPolicy: 'cache-and-network',\n  });\n  const [hash, setHash] = React.useState(() => document.location.hash);\n\n  React.useEffect(() => {\n    // Once data has finished loading and rendering, scroll to hash\n    if (data) {\n      const documentHash = document.location.hash;\n      if (documentHash) {\n        const target = documentHash.slice(1);\n        document.getElementById(target)?.scrollIntoView({\n          block: 'start',\n          inline: 'nearest',\n        });\n      }\n    }\n  }, [data]);\n\n  React.useEffect(() => {\n    const unlisten = history.listen((location) => {\n      setHash(location.hash);\n    });\n\n    return () => unlisten();\n  }, [history]);\n\n  if (!data) {\n    return <Spinner purpose=\"section\" />;\n  }\n\n  // Split by top-level yaml keys\n  const sections = data.instance.info.split(/\\n(?=\\w)/g);\n\n  return (\n    <Group direction=\"column\" spacing={20}>\n      <InstanceTabs tab=\"config\" />\n      <Group direction=\"column\" spacing={16}>\n        <Subheading>{`Dagster ${data.version}`}</Subheading>\n        <YamlShimStyle />\n        {sections.map((section) => {\n          const [id] = section.split(/\\:/);\n          const hashForSection = `#${id}`;\n          return (\n            <Box flex={{direction: 'row', alignItems: 'flex-start'}} key={id} id={id}>\n              <ConfigLink to={`/instance/config${hashForSection}`} key={id}>\n                <IconWIP name=\"link\" color={ColorsWIP.Gray300} />\n              </ConfigLink>\n              <ConfigSection highlighted={hash === hashForSection}>\n                <HighlightedCodeBlock value={section} language=\"yaml\" />\n              </ConfigSection>\n            </Box>\n          );\n        })}\n      </Group>\n    </Group>\n  );\n});\n\nconst ConfigLink = styled(Link)`\n  margin-right: 12px;\n  margin-top: -1px;\n  user-select: none;\n  transition: filter ease-in-out 100ms;\n\n  &:hover {\n    filter: brightness(0.4);\n  }\n`;\n\nconst ConfigSection = styled.div<{highlighted: boolean}>`\n  flex-grow: 1;\n\n  ${({highlighted}) =>\n    highlighted\n      ? css`\n          background-color: ${Colors.LIGHT_GRAY3};\n          margin: -8px;\n          padding: 8px;\n        `\n      : null};\n`;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      info\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {POLL_INTERVAL} from '../runs/useCursorPaginatedQuery';\nimport {Group} from '../ui/Group';\nimport {Subheading} from '../ui/Text';\nimport {REPOSITORY_LOCATIONS_FRAGMENT} from '../workspace/WorkspaceContext';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery} from './types/InstanceHealthQuery';\n\nexport const InstanceHealthPage = () => {\n  const queryData = useQuery<InstanceHealthQuery>(INSTANCE_HEALTH_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    pollInterval: POLL_INTERVAL,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return <div style={{color: Colors.GRAY3}}>Loading…</div>;\n    }\n    return data?.instance ? <DaemonList daemonHealth={data.instance.daemonHealth} /> : null;\n  };\n\n  return (\n    <Group direction=\"column\" spacing={20}>\n      <InstanceTabs tab=\"health\" queryData={queryData} />\n      <Group direction=\"column\" spacing={16}>\n        <Subheading>Daemon statuses</Subheading>\n        {daemonContent()}\n      </Group>\n    </Group>\n  );\n};\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    workspaceOrError {\n      ...RepositoryLocationsFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_LOCATIONS_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {NonIdealState} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {UnloadableSchedules} from '../instigation/Unloadable';\nimport {SchedulerTimezoneNote, SCHEDULE_FRAGMENT} from '../schedules/ScheduleUtils';\nimport {SchedulerInfo, SCHEDULER_FRAGMENT} from '../schedules/SchedulerInfo';\nimport {SchedulesTable} from '../schedules/SchedulesTable';\nimport {InstigationType} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {Loading} from '../ui/Loading';\nimport {Subheading} from '../ui/Text';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {buildRepoPath, buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceSchedulesQuery} from './types/InstanceSchedulesQuery';\n\nconst POLL_INTERVAL = 15000;\n\nexport const InstanceSchedules = React.memo(() => {\n  const queryData = useQuery<InstanceSchedulesQuery>(INSTANCE_SCHEDULES_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    pollInterval: POLL_INTERVAL,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  return (\n    <Group direction=\"column\" spacing={20}>\n      <InstanceTabs tab=\"schedules\" queryData={queryData} />\n      <Loading queryResult={queryData} allowStaleData={true}>\n        {(data) => <AllSchedules data={data} />}\n      </Loading>\n    </Group>\n  );\n});\n\nconst AllSchedules: React.FC<{data: InstanceSchedulesQuery}> = ({data}) => {\n  const {instance, scheduler, repositoriesOrError, unloadableInstigationStatesOrError} = data;\n\n  if (repositoriesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={repositoriesOrError} />;\n  }\n  if (unloadableInstigationStatesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={unloadableInstigationStatesOrError} />;\n  }\n\n  const unloadable = unloadableInstigationStatesOrError.results;\n  const withSchedules = repositoriesOrError.nodes.filter(\n    (repository) => repository.schedules.length,\n  );\n\n  const loadedSchedulesSection = withSchedules.length ? (\n    <Group direction=\"column\" spacing={32}>\n      <Group direction=\"column\" spacing={12}>\n        <SchedulerTimezoneNote schedulerOrError={scheduler} />\n        <SchedulerInfo schedulerOrError={scheduler} daemonHealth={instance.daemonHealth} />\n      </Group>\n      {withSchedules.map((repository) => (\n        <Group direction=\"column\" spacing={8} key={repository.name}>\n          <Subheading>{`${buildRepoPath(repository.name, repository.location.name)}`}</Subheading>\n          <SchedulesTable\n            repoAddress={buildRepoAddress(repository.name, repository.location.name)}\n            schedules={repository.schedules}\n          />\n        </Group>\n      ))}\n    </Group>\n  ) : null;\n\n  const unloadableSchedules = unloadable.filter(\n    (state) => state.instigationType === InstigationType.SCHEDULE,\n  );\n\n  const unloadableSchedulesSection = unloadableSchedules.length ? (\n    <UnloadableSchedules scheduleStates={unloadableSchedules} />\n  ) : null;\n\n  if (!loadedSchedulesSection && !unloadableSchedulesSection) {\n    return (\n      <Box margin={{top: 32}}>\n        <NonIdealState\n          icon=\"time\"\n          title=\"No schedules found\"\n          description={\n            <div>\n              This instance does not have any schedules defined. Visit the{' '}\n              <a\n                href=\"https://docs.dagster.io/overview/schedules-sensors/schedules\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                scheduler documentation\n              </a>{' '}\n              for more information about scheduling runs in Dagster.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Group direction=\"column\" spacing={32}>\n      {loadedSchedulesSection}\n      {unloadableSchedulesSection}\n    </Group>\n  );\n};\n\nconst INSTANCE_SCHEDULES_QUERY = gql`\n  query InstanceSchedulesQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          ...RepositoryInfoFragment\n          schedules {\n            id\n            ...ScheduleFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n    scheduler {\n      ...SchedulerFragment\n    }\n    unloadableInstigationStatesOrError {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FRAGMENT}\n  ${SCHEDULER_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {NonIdealState} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {UnloadableSensors} from '../instigation/Unloadable';\nimport {SENSOR_FRAGMENT} from '../sensors/SensorFragment';\nimport {SensorInfo} from '../sensors/SensorInfo';\nimport {SensorsTable} from '../sensors/SensorsTable';\nimport {InstigationType} from '../types/globalTypes';\nimport {Box} from '../ui/Box';\nimport {Group} from '../ui/Group';\nimport {Loading} from '../ui/Loading';\nimport {Subheading} from '../ui/Text';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {REPOSITORY_LOCATIONS_FRAGMENT} from '../workspace/WorkspaceContext';\nimport {buildRepoPath, buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceSensorsQuery} from './types/InstanceSensorsQuery';\n\nconst POLL_INTERVAL = 15000;\n\nexport const InstanceSensors = React.memo(() => {\n  const queryData = useQuery<InstanceSensorsQuery>(INSTANCE_SENSORS_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    pollInterval: POLL_INTERVAL,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  return (\n    <Group direction=\"column\" spacing={20}>\n      <InstanceTabs tab=\"sensors\" queryData={queryData} />\n      <Loading queryResult={queryData} allowStaleData={true}>\n        {(data) => <AllSensors data={data} />}\n      </Loading>\n    </Group>\n  );\n});\n\nconst AllSensors: React.FC<{data: InstanceSensorsQuery}> = ({data}) => {\n  const {instance, repositoriesOrError, unloadableInstigationStatesOrError} = data;\n\n  if (repositoriesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={repositoriesOrError} />;\n  }\n  if (unloadableInstigationStatesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={unloadableInstigationStatesOrError} />;\n  }\n\n  const unloadable = unloadableInstigationStatesOrError.results;\n  const withSensors = repositoriesOrError.nodes.filter((repository) => repository.sensors.length);\n\n  const sensorDefinitionsSection = withSensors.length ? (\n    <Group direction=\"column\" spacing={32}>\n      <SensorInfo daemonHealth={instance.daemonHealth} />\n      {withSensors.map((repository) =>\n        repository.sensors.length ? (\n          <Group direction=\"column\" spacing={12} key={repository.name}>\n            <Subheading>{`${buildRepoPath(repository.name, repository.location.name)}`}</Subheading>\n            <SensorsTable\n              repoAddress={buildRepoAddress(repository.name, repository.location.name)}\n              sensors={repository.sensors}\n            />\n          </Group>\n        ) : null,\n      )}\n    </Group>\n  ) : null;\n\n  const unloadableSensors = unloadable.filter(\n    (state) => state.instigationType === InstigationType.SENSOR,\n  );\n  const unloadableSensorsSection = unloadableSensors.length ? (\n    <UnloadableSensors sensorStates={unloadableSensors} />\n  ) : null;\n\n  if (!sensorDefinitionsSection && !unloadableSensorsSection) {\n    return (\n      <Box margin={{top: 32}}>\n        <NonIdealState\n          icon=\"automatic-updates\"\n          title=\"No sensors found\"\n          description={\n            <p>\n              This instance does not have any sensors defined. Visit the{' '}\n              <a\n                href=\"https://docs.dagster.io/overview/schedules-sensors/sensors\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                sensor documentation\n              </a>{' '}\n              for more information about setting up sensors in Dagster.\n            </p>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Group direction=\"column\" spacing={32}>\n      {sensorDefinitionsSection}\n      {unloadableSensorsSection}\n    </Group>\n  );\n};\n\nconst INSTANCE_SENSORS_QUERY = gql`\n  query InstanceSensorsQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    workspaceOrError {\n      ...RepositoryLocationsFragment\n    }\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          ...RepositoryInfoFragment\n          sensors {\n            id\n            ...SensorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n    unloadableInstigationStatesOrError {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_LOCATIONS_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${SENSOR_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import * as React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {Group} from '../ui/Group';\nimport {Page} from '../ui/Page';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading} from '../ui/Text';\n\nimport {InstanceBackfills} from './InstanceBackfills';\nimport {InstanceConfig} from './InstanceConfig';\nimport {InstanceHealthPage} from './InstanceHealthPage';\nimport {InstanceSchedules} from './InstanceSchedules';\nimport {InstanceSensors} from './InstanceSensors';\n\nexport const InstanceStatusRoot = () => {\n  return (\n    <Page>\n      <Group direction=\"column\" spacing={12}>\n        <PageHeader title={<Heading>Instance status</Heading>} />\n        <Switch>\n          <Route path=\"/instance/health\" render={() => <InstanceHealthPage />} />\n          <Route path=\"/instance/schedules\" render={() => <InstanceSchedules />} />\n          <Route path=\"/instance/sensors\" render={() => <InstanceSensors />} />\n          <Route path=\"/instance/backfills\" render={() => <InstanceBackfills />} />\n          <Route path=\"/instance/config\" render={() => <InstanceConfig />} />\n        </Switch>\n      </Group>\n    </Page>\n  );\n};\n","import * as React from 'react';\nimport {Redirect, Route, Switch, useLocation} from 'react-router-dom';\n\nimport {AssetEntryRoot} from '../assets/AssetEntryRoot';\nimport {AssetsCatalogRoot} from '../assets/AssetsCatalogRoot';\nimport {RunRoot} from '../runs/RunRoot';\nimport {RunsRoot} from '../runs/RunsRoot';\nimport {SnapshotRoot} from '../snapshots/SnapshotRoot';\nimport {MainContent} from '../ui/MainContent';\n\nimport {InstanceStatusRoot} from './InstanceStatusRoot';\n\nexport const InstanceRoot = () => {\n  const {pathname} = useLocation();\n  const main = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    main.current?.scrollTo({top: 0});\n  }, [pathname]);\n\n  return (\n    <MainContent ref={main}>\n      <Switch>\n        <Route path=\"/instance/assets\" exact component={AssetsCatalogRoot} />\n        <Route path=\"/instance/assets/(/?.*)\" component={AssetEntryRoot} />\n        <Route path=\"/instance/runs\" exact component={RunsRoot} />\n        <Route path=\"/instance/runs/:runId\" exact component={RunRoot} />\n        <Route path=\"/instance/snapshots/:pipelinePath/:tab?\" component={SnapshotRoot} />\n        <Route path=\"/instance/:tab\" component={InstanceStatusRoot} />\n        <Route path=\"/instance\" render={() => <Redirect to=\"/instance/health\" />} />\n      </Switch>\n    </MainContent>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceRoot;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@blueprintjs/core';\nimport Ansi from 'ansi-to-react';\nimport * as React from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\n\nimport {ColorsWIP} from '../ui/Colors';\nimport {Group} from '../ui/Group';\nimport {IconWIP} from '../ui/Icon';\nimport {Spinner} from '../ui/Spinner';\nimport {FontFamily} from '../ui/styles';\n\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\n\nconst TRUNCATE_PREFIX = '\\u001b[33m...logs truncated...\\u001b[39m\\n';\nconst SCROLLER_LINK_TIMEOUT_MS = 3000;\nexport const MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nexport class ComputeLogContent extends React.Component<{\n  logData?: ComputeLogContentFileFragment | null;\n  downloadUrl?: string | null;\n  isLoading?: boolean;\n  isVisible: boolean;\n}> {\n  private timeout: number | null = null;\n  private contentContainer = React.createRef<ScrollContainer>();\n\n  state = {\n    showScrollToTop: false,\n  };\n\n  hideWarning = () => {\n    this.setState({showScrollToTop: false});\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = 0;\n    }\n  };\n\n  scheduleHideWarning = () => {\n    this.timeout = window.setTimeout(this.hideWarning, SCROLLER_LINK_TIMEOUT_MS);\n  };\n\n  cancelHideWarning = () => {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = 0;\n    }\n  };\n\n  onScrollUp = (position: number) => {\n    this.cancelHideWarning();\n\n    if (!position) {\n      this.hideWarning();\n    } else {\n      this.setState({showScrollToTop: true});\n      this.scheduleHideWarning();\n    }\n  };\n\n  onScrollDown = (_position: number) => {\n    this.hideWarning();\n  };\n\n  scrollToTop = () => {\n    this.contentContainer.current && this.contentContainer.current.scrollToTop();\n  };\n\n  renderScrollToTop() {\n    const {showScrollToTop} = this.state;\n\n    if (!showScrollToTop) {\n      return null;\n    }\n\n    return (\n      <ScrollToast>\n        <ScrollToTop\n          onClick={() => this.scrollToTop()}\n          onMouseOver={this.cancelHideWarning}\n          onMouseOut={this.scheduleHideWarning}\n        >\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <IconWIP name=\"arrow_upward\" color={ColorsWIP.White} />\n            Scroll to top\n          </Group>\n        </ScrollToTop>\n      </ScrollToast>\n    );\n  }\n\n  render() {\n    const {logData, isLoading, isVisible, downloadUrl} = this.props;\n    let content = logData?.data;\n    const isTruncated = content && Buffer.byteLength(content, 'utf8') >= MAX_STREAMING_LOG_BYTES;\n\n    if (content && isTruncated) {\n      const nextLine = content.indexOf('\\n') + 1;\n      const truncated = nextLine < content.length ? content.slice(nextLine) : content;\n      content = TRUNCATE_PREFIX + truncated;\n    }\n    const warning = isTruncated ? (\n      <FileWarning>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          <IconWIP name=\"warning\" color={ColorsWIP.Yellow500} />\n          <div>\n            This log has exceeded the 5MB limit.{' '}\n            {downloadUrl ? (\n              <a href={downloadUrl} download>\n                Download the full log file\n              </a>\n            ) : null}\n            .\n          </div>\n        </Group>\n      </FileWarning>\n    ) : null;\n\n    return (\n      <>\n        <FileContainer isVisible={isVisible}>\n          {this.renderScrollToTop()}\n          <FileContent>\n            {warning}\n            <RelativeContainer>\n              <LogContent\n                isSelected={true}\n                content={content}\n                onScrollUp={this.onScrollUp}\n                onScrollDown={this.onScrollDown}\n                ref={this.contentContainer}\n              />\n            </RelativeContainer>\n          </FileContent>\n          {isLoading ? (\n            <LoadingContainer>\n              <Spinner purpose=\"page\" />\n            </LoadingContainer>\n          ) : null}\n        </FileContainer>\n        <FileFooter isVisible={isVisible}>{logData?.path}</FileFooter>\n      </>\n    );\n  }\n}\n\nexport const COMPUTE_LOG_CONTENT_FRAGMENT = gql`\n  fragment ComputeLogContentFileFragment on ComputeLogFile {\n    path\n    cursor\n    data\n    downloadUrl\n  }\n`;\n\ninterface IScrollContainerProps {\n  content: string | null | undefined;\n  isSelected?: boolean;\n  className?: string;\n  onScrollUp?: (position: number) => void;\n  onScrollDown?: (position: number) => void;\n}\n\nclass ScrollContainer extends React.Component<IScrollContainerProps> {\n  private container = React.createRef<HTMLDivElement>();\n  private lastScroll = 0;\n\n  componentDidMount() {\n    this.scrollToBottom();\n    if (this.container.current) {\n      this.container.current.focus();\n      this.container.current.addEventListener('scroll', this.onScroll);\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    if (!this.container.current) {\n      return false;\n    }\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const shouldScroll = offsetHeight + scrollTop >= scrollHeight;\n    return shouldScroll;\n  }\n\n  componentDidUpdate(_props: any, _state: any, shouldScroll: boolean) {\n    if (shouldScroll) {\n      this.scrollToBottom();\n    }\n    if (this.props.isSelected && !_props.isSelected) {\n      this.container.current && this.container.current.focus();\n    }\n  }\n\n  onScroll = () => {\n    if (!this.container.current || !this.props.isSelected) {\n      return;\n    }\n    const {onScrollUp, onScrollDown} = this.props;\n\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const position = scrollTop / (scrollHeight - offsetHeight);\n    if (this.container.current.scrollTop < this.lastScroll) {\n      onScrollUp && onScrollUp(position);\n    } else {\n      onScrollDown && onScrollDown(position);\n    }\n    this.lastScroll = this.container.current.scrollTop;\n  };\n\n  focus() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.focus();\n  }\n\n  scrollToBottom() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = node.scrollHeight - node.offsetHeight;\n  }\n\n  scrollToTop() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = 0;\n    node.focus();\n  }\n\n  render() {\n    const {content, className} = this.props;\n    if (!content) {\n      return (\n        <div className={className} ref={this.container}>\n          <ContentContainer style={{justifyContent: 'center', alignItems: 'center'}}>\n            {content == null ? 'No log file available' : 'No output'}\n          </ContentContainer>\n        </div>\n      );\n    }\n\n    return (\n      <div className={className} style={{outline: 'none'}} ref={this.container} tabIndex={0}>\n        <ContentContainer>\n          <LineNumbers content={content} />\n          <Content>\n            <SolarizedColors />\n            <Ansi linkify={false} useClasses>\n              {content}\n            </Ansi>\n          </Content>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nconst LineNumbers = (props: IScrollContainerProps) => {\n  const {content} = props;\n  if (!content) {\n    return null;\n  }\n  const matches = content.match(/\\n/g);\n  const count = matches ? matches.length : 0;\n  return (\n    <LineNumberContainer>\n      {Array.from(Array(count), (_, i) => (\n        <div key={i}>{String(i + 1)}</div>\n      ))}\n    </LineNumberContainer>\n  );\n};\n\nconst FileContainer = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n  &:first-child {\n    border-right: 0.5px solid #5c7080;\n  }\n  display: flex;\n  flex-direction: column;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst FileFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 30px;\n  background-color: ${Colors.DARK_GRAY2};\n  border-top: 0.5px solid #5c7080;\n  color: #aaaaaa;\n  padding: 2px 5px;\n  font-size: 0.85em;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100%;\n  background-color: ${Colors.DARK_GRAY2};\n`;\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${Colors.DARK_GRAY2};\n`;\nconst LineNumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-right: 1px solid #5c7080;\n  padding: 10px 10px 10px 20px;\n  margin-right: 5px;\n  background-color: ${Colors.DARK_GRAY2};\n  opacity: 0.8;\n  color: #858585;\n  min-height: 100%;\n`;\nconst SolarizedColors = createGlobalStyle`\n  .ansi-black {\n    color: #586e75;\n  }\n  .ansi-red {\n    color: #dc322f;\n  }\n  .ansi-green {\n    color: #859900;\n  }\n  .ansi-yellow {\n    color: #b58900;\n  }\n  .ansi-blue {\n    color: #268bd2;\n  }\n  .ansi-magenta {\n    color: #d33682;\n  }\n  .ansi-cyan {\n    color: #2aa198;\n  }\n  .ansi-white {\n    color: #eee8d5;\n  }\n`;\nconst FileContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nconst RelativeContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\nconst LogContent = styled(ScrollContainer)`\n  color: #eeeeee;\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  white-space: pre;\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst FileWarning = styled.div`\n  background-color: #fffae3;\n  padding: 10px 20px;\n  margin: 20px 70px;\n  border-radius: 5px;\n`;\nconst ScrollToast = styled.div`\n  position: absolute;\n  height: 30px;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1;\n`;\nconst ScrollToTop = styled.div`\n  background-color: black;\n  padding: 10px 20px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  color: white;\n  border-bottom: 0.5px solid #5c7080;\n  border-left: 0.5px solid #5c7080;\n  border-right: 0.5px solid #5c7080;\n  cursor: pointer;\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justifycontent: center;\n  alignitems: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  backgroundcolor: ${Colors.DARK_GRAY3};\n  opacity: 0.3;\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst anser_1 = __importDefault(require(\"anser\"));\nconst escape_carriage_1 = require(\"escape-carriage\");\nconst React = __importStar(require(\"react\"));\nconst LINK_REGEX = /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/;\n/**\n * Converts ANSI strings into JSON output.\n * @name ansiToJSON\n * @function\n * @param {String} input The input string.\n * @return {Array} The parsed input.\n */\nfunction ansiToJSON(input, use_classes = false) {\n    input = escape_carriage_1.escapeCarriageReturn(input);\n    return anser_1.default.ansiToJson(input, {\n        json: true,\n        remove_empty: true,\n        use_classes\n    });\n}\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry}.\n * @return {String} class name(s)\n */\nfunction createClass(bundle) {\n    let classNames = \"\";\n    if (!bundle.bg && !bundle.fg) {\n        return null;\n    }\n    if (bundle.bg) {\n        classNames += bundle.bg + \" \";\n    }\n    if (bundle.fg) {\n        classNames += bundle.fg + \" \";\n    }\n    classNames = classNames.substring(0, classNames.length - 1);\n    return classNames;\n}\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry}.\n * @return {Object} returns the style object\n */\nfunction createStyle(bundle) {\n    const style = {};\n    if (bundle.bg) {\n        style.backgroundColor = `rgb(${bundle.bg})`;\n    }\n    if (bundle.fg) {\n        style.color = `rgb(${bundle.fg})`;\n    }\n    return style;\n}\n/**\n * Converts an Anser bundle into a React Node.\n * @param linkify whether links should be converting into clickable anchor tags.\n * @param useClasses should render the span with a class instead of style.\n * @param bundle Anser output.\n */\nfunction convertBundleIntoReact(linkify, useClasses, bundle, key) {\n    const style = useClasses ? null : createStyle(bundle);\n    const className = useClasses ? createClass(bundle) : null;\n    if (!linkify) {\n        return React.createElement(\"span\", { style, key, className }, bundle.content);\n    }\n    const words = bundle.content.split(/(\\s+)/).reduce((words, word, index) => {\n        // If this is a separator, re-add the space removed from split.\n        if (index % 2 === 1) {\n            words.push(word);\n            return words;\n        }\n        // If  this isn't a link, just return the word as-is.\n        if (!LINK_REGEX.test(word)) {\n            words.push(word);\n            return words;\n        }\n        words.push(React.createElement(\"a\", {\n            key: index,\n            href: word,\n            target: \"_blank\"\n        }, `${word}`));\n        return words;\n    }, []);\n    return React.createElement(\"span\", { style, key, className }, words);\n}\nfunction Ansi(props) {\n    const { className, useClasses, children, linkify } = props;\n    return React.createElement(\"code\", { className }, ansiToJSON(children, !!useClasses).map(convertBundleIntoReact.bind(null, linkify, !!useClasses)));\n}\nexports.default = Ansi;\n","\"use strict\";\n\n// This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANSI_COLORS = [[{ color: \"0, 0, 0\", \"class\": \"ansi-black\" }, { color: \"187, 0, 0\", \"class\": \"ansi-red\" }, { color: \"0, 187, 0\", \"class\": \"ansi-green\" }, { color: \"187, 187, 0\", \"class\": \"ansi-yellow\" }, { color: \"0, 0, 187\", \"class\": \"ansi-blue\" }, { color: \"187, 0, 187\", \"class\": \"ansi-magenta\" }, { color: \"0, 187, 187\", \"class\": \"ansi-cyan\" }, { color: \"255,255,255\", \"class\": \"ansi-white\" }], [{ color: \"85, 85, 85\", \"class\": \"ansi-bright-black\" }, { color: \"255, 85, 85\", \"class\": \"ansi-bright-red\" }, { color: \"0, 255, 0\", \"class\": \"ansi-bright-green\" }, { color: \"255, 255, 85\", \"class\": \"ansi-bright-yellow\" }, { color: \"85, 85, 255\", \"class\": \"ansi-bright-blue\" }, { color: \"255, 85, 255\", \"class\": \"ansi-bright-magenta\" }, { color: \"85, 255, 255\", \"class\": \"ansi-bright-cyan\" }, { color: \"255, 255, 255\", \"class\": \"ansi-bright-white\" }]];\n\nvar Anser = function () {\n    _createClass(Anser, null, [{\n        key: \"escapeForHtml\",\n\n\n        /**\n         * Anser.escapeForHtml\n         * Escape the input HTML.\n         *\n         * This does the minimum escaping of text to make it compliant with HTML.\n         * In particular, the '&','<', and '>' characters are escaped. This should\n         * be run prior to `ansiToHtml`.\n         *\n         * @name Anser.escapeForHtml\n         * @function\n         * @param {String} txt The input text (containing the ANSI snippets).\n         * @returns {String} The escaped html.\n         */\n        value: function escapeForHtml(txt) {\n            return new Anser().escapeForHtml(txt);\n        }\n\n        /**\n         * Anser.linkify\n         * Adds the links in the HTML.\n         *\n         * This replaces any links in the text with anchor tags that display the\n         * link. The links should have at least one whitespace character\n         * surrounding it. Also, you should apply this after you have run\n         * `ansiToHtml` on the text.\n         *\n         * @name Anser.linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML containing the <a> tags (unescaped).\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return new Anser().linkify(txt);\n        }\n\n        /**\n         * Anser.ansiToHtml\n         * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n         * content.\n         *\n         * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n         * that can be represented in HTML.\n         * For example, cursor movement codes are ignored and hidden from output.\n         * The default style uses colors that are very close to the prescribed\n         * standard. The standard assumes that the text will have a black\n         * background. These colors are set as inline styles on the SPAN tags.\n         *\n         * Another option is to set `use_classes: true` in the options argument.\n         * This will instead set classes on the spans so the colors can be set via\n         * CSS. The class names used are of the format `ansi-*-fg/bg` and\n         * `ansi-bright-*-fg/bg` where `*` is the color name,\n         * i.e black/red/green/yellow/blue/magenta/cyan/white.\n         *\n         * @name Anser.ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return new Anser().ansiToHtml(txt, options);\n        }\n\n        /**\n         * Anser.ansiToJson\n         * Converts ANSI input into JSON output.\n         *\n         * @name Anser.ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            return new Anser().ansiToJson(txt, options);\n        }\n\n        /**\n         * Anser.ansiToText\n         * Converts ANSI input into text output.\n         *\n         * @name Anser.ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return new Anser().ansiToText(txt);\n        }\n\n        /**\n         * Anser\n         * The `Anser` class.\n         *\n         * @name Anser\n         * @function\n         * @returns {Anser}\n         */\n\n    }]);\n\n    function Anser() {\n        _classCallCheck(this, Anser);\n\n        this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n        this.bright = 0;\n    }\n\n    /**\n     * setupPalette\n     * Sets up the palette.\n     *\n     * @name setupPalette\n     * @function\n     */\n\n\n    _createClass(Anser, [{\n        key: \"setupPalette\",\n        value: function setupPalette() {\n            this.PALETTE_COLORS = [];\n\n            // Index 0..15 : System color\n            for (var i = 0; i < 2; ++i) {\n                for (var j = 0; j < 8; ++j) {\n                    this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n                }\n            }\n\n            // Index 16..231 : RGB 6x6x6\n            // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n            var levels = [0, 95, 135, 175, 215, 255];\n            var format = function format(r, g, b) {\n                return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n            };\n            var r = void 0,\n                g = void 0,\n                b = void 0;\n            for (var _r = 0; _r < 6; ++_r) {\n                for (var _g = 0; _g < 6; ++_g) {\n                    for (var _b = 0; _b < 6; ++_b) {\n                        this.PALETTE_COLORS.push(format(_r, _g, _b));\n                    }\n                }\n            }\n\n            // Index 232..255 : Grayscale\n            var level = 8;\n            for (var _i = 0; _i < 24; ++_i, level += 10) {\n                this.PALETTE_COLORS.push(format(level, level, level));\n            }\n        }\n\n        /**\n         * escapeForHtml\n         * Escapes the input text.\n         *\n         * @name escapeForHtml\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The escpaed HTML output.\n         */\n\n    }, {\n        key: \"escapeForHtml\",\n        value: function escapeForHtml(txt) {\n            return txt.replace(/[&<>]/gm, function (str) {\n                return str == \"&\" ? \"&amp;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n            });\n        }\n\n        /**\n         * linkify\n         * Adds HTML link elements.\n         *\n         * @name linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML output containing link elements.\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n                return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n            });\n        }\n\n        /**\n         * ansiToHtml\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToJson\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The JSON output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            options = options || {};\n            options.json = true;\n            options.clearLine = false;\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToText\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return this.process(txt, {}, false);\n        }\n\n        /**\n         * process\n         * Processes the input.\n         *\n         * @name process\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options An object passed to `processChunk` method, extended with:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup\n         */\n\n    }, {\n        key: \"process\",\n        value: function process(txt, options, markup) {\n            var _this = this;\n\n            var self = this;\n            var raw_text_chunks = txt.split(/\\033\\[/);\n            var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n            if (options === undefined || options === null) {\n                options = {};\n            }\n            options.clearLine = /\\r/.test(txt); // check for Carriage Return\n            var color_chunks = raw_text_chunks.map(function (chunk) {\n                return _this.processChunk(chunk, options, markup);\n            });\n\n            if (options && options.json) {\n                var first = self.processChunkJson(\"\");\n                first.content = first_chunk;\n                first.clearLine = options.clearLine;\n                color_chunks.unshift(first);\n                if (options.remove_empty) {\n                    color_chunks = color_chunks.filter(function (c) {\n                        return !c.isEmpty();\n                    });\n                }\n                return color_chunks;\n            } else {\n                color_chunks.unshift(first_chunk);\n            }\n\n            return color_chunks.join(\"\");\n        }\n\n        /**\n         * processChunkJson\n         * Processes the current chunk into json output.\n         *\n         * @name processChunkJson\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object} The result object:\n         *\n         *  - `content` (String): The text.\n         *  - `fg` (String|null): The foreground color.\n         *  - `bg` (String|null): The background color.\n         *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n         *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n         *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n         *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n         *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n         *\n         */\n\n    }, {\n        key: \"processChunkJson\",\n        value: function processChunkJson(text, options, markup) {\n\n            // Are we using classes or styles?\n            options = typeof options == \"undefined\" ? {} : options;\n            var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n            var key = options.key = use_classes ? \"class\" : \"color\";\n\n            var result = {\n                content: text,\n                fg: null,\n                bg: null,\n                fg_truecolor: null,\n                bg_truecolor: null,\n                clearLine: options.clearLine,\n                decoration: null,\n                was_processed: false,\n                isEmpty: function isEmpty() {\n                    return !result.content;\n                }\n            };\n\n            // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n            //\n            // This regex matches four groups within a chunk.\n            //\n            // The first and third groups match code type.\n            // We supported only SGR command. It has empty first group and \"m\" in third.\n            //\n            // The second group matches all of the number+semicolon command sequences\n            // before the \"m\" (or other trailing) character.\n            // These are the graphics or SGR commands.\n            //\n            // The last group is the text (including newlines) that is colored by\n            // the other group\"s commands.\n            var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n\n            if (!matches) return result;\n\n            var orig_txt = result.content = matches[4];\n            var nums = matches[2].split(\";\");\n\n            // We currently support only \"SGR\" (Select Graphic Rendition)\n            // Simply ignore if not a SGR command.\n            if (matches[1] !== \"\" || matches[3] !== \"m\") {\n                return result;\n            }\n\n            if (!markup) {\n                return result;\n            }\n\n            var self = this;\n\n            self.decoration = null;\n\n            while (nums.length > 0) {\n                var num_str = nums.shift();\n                var num = parseInt(num_str);\n\n                if (isNaN(num) || num === 0) {\n                    self.fg = self.bg = self.decoration = null;\n                } else if (num === 1) {\n                    self.decoration = \"bold\";\n                } else if (num === 2) {\n                    self.decoration = \"dim\";\n                    // Enable code 2 to get string\n                } else if (num == 3) {\n                    self.decoration = \"italic\";\n                } else if (num == 4) {\n                    self.decoration = \"underline\";\n                } else if (num == 5) {\n                    self.decoration = \"blink\";\n                } else if (num === 7) {\n                    self.decoration = \"reverse\";\n                } else if (num === 8) {\n                    self.decoration = \"hidden\";\n                    // Enable code 9 to get strikethrough\n                } else if (num === 9) {\n                    self.decoration = \"strikethrough\";\n                } else if (num == 39) {\n                    self.fg = null;\n                } else if (num == 49) {\n                    self.bg = null;\n                    // Foreground color\n                } else if (num >= 30 && num < 38) {\n                    self.fg = ANSI_COLORS[0][num % 10][key];\n                    // Foreground bright color\n                } else if (num >= 90 && num < 98) {\n                    self.fg = ANSI_COLORS[1][num % 10][key];\n                    // Background color\n                } else if (num >= 40 && num < 48) {\n                    self.bg = ANSI_COLORS[0][num % 10][key];\n                    // Background bright color\n                } else if (num >= 100 && num < 108) {\n                    self.bg = ANSI_COLORS[1][num % 10][key];\n                } else if (num === 38 || num === 48) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = num === 38;\n                    if (nums.length >= 1) {\n                        var mode = nums.shift();\n                        if (mode === \"5\" && nums.length >= 1) {\n                            // palette color\n                            var palette_index = parseInt(nums.shift());\n                            if (palette_index >= 0 && palette_index <= 255) {\n                                if (!use_classes) {\n                                    if (!this.PALETTE_COLORS) {\n                                        self.setupPalette();\n                                    }\n                                    if (is_foreground) {\n                                        self.fg = this.PALETTE_COLORS[palette_index];\n                                    } else {\n                                        self.bg = this.PALETTE_COLORS[palette_index];\n                                    }\n                                } else {\n                                    var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n                                    if (is_foreground) {\n                                        self.fg = klass;\n                                    } else {\n                                        self.bg = klass;\n                                    }\n                                }\n                            }\n                        } else if (mode === \"2\" && nums.length >= 3) {\n                            // true color\n                            var r = parseInt(nums.shift());\n                            var g = parseInt(nums.shift());\n                            var b = parseInt(nums.shift());\n                            if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                                var color = r + \", \" + g + \", \" + b;\n                                if (!use_classes) {\n                                    if (is_foreground) {\n                                        self.fg = color;\n                                    } else {\n                                        self.bg = color;\n                                    }\n                                } else {\n                                    if (is_foreground) {\n                                        self.fg = \"ansi-truecolor\";\n                                        self.fg_truecolor = color;\n                                    } else {\n                                        self.bg = \"ansi-truecolor\";\n                                        self.bg_truecolor = color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (self.fg === null && self.bg === null && self.decoration === null) {\n                return result;\n            } else {\n                var styles = [];\n                var classes = [];\n                var data = {};\n\n                result.fg = self.fg;\n                result.bg = self.bg;\n                result.fg_truecolor = self.fg_truecolor;\n                result.bg_truecolor = self.bg_truecolor;\n                result.decoration = self.decoration;\n                result.was_processed = true;\n\n                return result;\n            }\n        }\n\n        /**\n         * processChunk\n         * Processes the current chunk of text.\n         *\n         * @name processChunk\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n         */\n\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(text, options, markup) {\n            var _this2 = this;\n\n            var self = this;\n            options = options || {};\n            var jsonChunk = this.processChunkJson(text, options, markup);\n\n            if (options.json) {\n                return jsonChunk;\n            }\n            if (jsonChunk.isEmpty()) {\n                return \"\";\n            }\n            if (!jsonChunk.was_processed) {\n                return jsonChunk.content;\n            }\n\n            var use_classes = options.use_classes;\n\n            var styles = [];\n            var classes = [];\n            var data = {};\n            var render_data = function render_data(data) {\n                var fragments = [];\n                var key = void 0;\n                for (key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n                    }\n                }\n                return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n            };\n\n            if (jsonChunk.fg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.fg + \"-fg\");\n                    if (jsonChunk.fg_truecolor !== null) {\n                        data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n                        jsonChunk.fg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n                }\n            }\n\n            if (jsonChunk.bg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.bg + \"-bg\");\n                    if (jsonChunk.bg_truecolor !== null) {\n                        data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n                        jsonChunk.bg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n                }\n            }\n\n            if (jsonChunk.decoration) {\n                if (use_classes) {\n                    classes.push(\"ansi-\" + jsonChunk.decoration);\n                } else if (jsonChunk.decoration === \"bold\") {\n                    styles.push(\"font-weight:bold\");\n                } else if (jsonChunk.decoration === \"dim\") {\n                    styles.push(\"opacity:0.5\");\n                } else if (jsonChunk.decoration === \"italic\") {\n                    styles.push(\"font-style:italic\");\n                    // underline and blink are treated bellow\n                } else if (jsonChunk.decoration === \"reverse\") {\n                    styles.push(\"filter:invert(100%)\");\n                } else if (jsonChunk.decoration === \"hidden\") {\n                    styles.push(\"visibility:hidden\");\n                } else if (jsonChunk.decoration === \"strikethrough\") {\n                    styles.push(\"text-decoration:line-through\");\n                } else {\n                    styles.push(\"text-decoration:\" + jsonChunk.decoration);\n                }\n            }\n\n            if (use_classes) {\n                return \"<span class=\\\"\" + classes.join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            } else {\n                return \"<span style=\\\"\" + styles.join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            }\n        }\n    }]);\n\n    return Anser;\n}();\n\n;\n\nmodule.exports = Anser;","/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r[^$]/.test(txt)) {\n    var base = /^(.*)\\r+/m.exec(txt)[1];\n    var insert = /\\r+(.*)$/m.exec(txt)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, \"\\r\").replace(/^.*\\r/m, insert);\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n"],"sourceRoot":""}